{"/home/travis/build/npmtest/node-npmtest-model/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_model */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-model/lib.npmtest_model.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/lib.npmtest_model.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":56}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_model */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_model = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_model = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-model/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":49}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":63},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-model && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_model */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_model","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_model.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_model.rollup.js'] =","            local.assetsDict['/assets.npmtest_model.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_model.__dirname + '/lib.npmtest_model.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":1,"213":0,"214":0,"215":0,"216":0,"217":1,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":1,"225":0,"226":1,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":1,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":1,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":1,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":1,"323":0,"324":1,"325":0,"326":1,"327":0,"328":0,"329":0,"330":0,"331":1,"332":0,"333":0,"334":1,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":1,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":1,"349":0,"350":1,"351":0,"352":0,"353":0,"354":1,"355":0,"356":1,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":1,"427":0,"428":0,"429":0,"430":1,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":1,"449":0,"450":0,"451":0,"452":1,"453":1,"454":1,"455":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0},"fnMap":{"1":{"name":"(anonymous_1)","line":62,"loc":{"start":{"line":62,"column":24},"end":{"line":62,"column":36}}},"2":{"name":"(anonymous_2)","line":65,"loc":{"start":{"line":65,"column":19},"end":{"line":65,"column":31}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":13},"end":{"line":74,"column":25}}},"4":{"name":"(anonymous_4)","line":78,"loc":{"start":{"line":78,"column":36},"end":{"line":78,"column":51}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":31},"end":{"line":80,"column":49}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":21},"end":{"line":95,"column":33}}},"7":{"name":"(anonymous_7)","line":111,"loc":{"start":{"line":111,"column":18},"end":{"line":111,"column":30}}},"8":{"name":"(anonymous_8)","line":115,"loc":{"start":{"line":115,"column":39},"end":{"line":115,"column":60}}},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":30},"end":{"line":139,"column":54}}},"10":{"name":"(anonymous_10)","line":151,"loc":{"start":{"line":151,"column":20},"end":{"line":151,"column":39}}},"11":{"name":"(anonymous_11)","line":186,"loc":{"start":{"line":186,"column":26},"end":{"line":186,"column":39}}},"12":{"name":"(anonymous_12)","line":198,"loc":{"start":{"line":198,"column":22},"end":{"line":198,"column":34}}},"13":{"name":"(anonymous_13)","line":228,"loc":{"start":{"line":228,"column":19},"end":{"line":228,"column":31}}},"14":{"name":"(anonymous_14)","line":241,"loc":{"start":{"line":241,"column":49},"end":{"line":241,"column":62}}},"15":{"name":"(anonymous_15)","line":243,"loc":{"start":{"line":243,"column":27},"end":{"line":243,"column":62}}},"16":{"name":"(anonymous_16)","line":244,"loc":{"start":{"line":244,"column":21},"end":{"line":244,"column":33}}},"17":{"name":"(anonymous_17)","line":253,"loc":{"start":{"line":253,"column":13},"end":{"line":253,"column":33}}},"18":{"name":"(anonymous_18)","line":281,"loc":{"start":{"line":281,"column":34},"end":{"line":281,"column":50}}},"19":{"name":"(anonymous_19)","line":299,"loc":{"start":{"line":299,"column":17},"end":{"line":299,"column":29}}},"20":{"name":"(anonymous_20)","line":305,"loc":{"start":{"line":305,"column":21},"end":{"line":305,"column":32}}},"21":{"name":"(anonymous_21)","line":310,"loc":{"start":{"line":310,"column":16},"end":{"line":310,"column":28}}},"22":{"name":"(anonymous_22)","line":329,"loc":{"start":{"line":329,"column":45},"end":{"line":329,"column":66}}},"23":{"name":"(anonymous_23)","line":337,"loc":{"start":{"line":337,"column":43},"end":{"line":337,"column":64}}},"24":{"name":"(anonymous_24)","line":359,"loc":{"start":{"line":359,"column":16},"end":{"line":359,"column":27}}},"25":{"name":"(anonymous_25)","line":361,"loc":{"start":{"line":361,"column":35},"end":{"line":361,"column":47}}},"26":{"name":"(anonymous_26)","line":374,"loc":{"start":{"line":374,"column":14},"end":{"line":374,"column":26}}},"27":{"name":"(anonymous_27)","line":397,"loc":{"start":{"line":397,"column":15},"end":{"line":397,"column":27}}},"28":{"name":"(anonymous_28)","line":400,"loc":{"start":{"line":400,"column":21},"end":{"line":400,"column":33}}},"29":{"name":"(anonymous_29)","line":404,"loc":{"start":{"line":404,"column":35},"end":{"line":404,"column":47}}},"30":{"name":"(anonymous_30)","line":462,"loc":{"start":{"line":462,"column":52},"end":{"line":462,"column":72}}},"31":{"name":"(anonymous_31)","line":477,"loc":{"start":{"line":477,"column":17},"end":{"line":477,"column":29}}},"32":{"name":"(anonymous_32)","line":490,"loc":{"start":{"line":490,"column":31},"end":{"line":490,"column":43}}},"33":{"name":"(anonymous_33)","line":511,"loc":{"start":{"line":511,"column":53},"end":{"line":511,"column":73}}},"34":{"name":"(anonymous_34)","line":526,"loc":{"start":{"line":526,"column":17},"end":{"line":526,"column":29}}},"35":{"name":"(anonymous_35)","line":538,"loc":{"start":{"line":538,"column":31},"end":{"line":538,"column":43}}},"36":{"name":"(anonymous_36)","line":550,"loc":{"start":{"line":550,"column":47},"end":{"line":550,"column":67}}},"37":{"name":"(anonymous_37)","line":558,"loc":{"start":{"line":558,"column":27},"end":{"line":558,"column":39}}},"38":{"name":"(anonymous_38)","line":569,"loc":{"start":{"line":569,"column":26},"end":{"line":569,"column":42}}},"39":{"name":"(anonymous_39)","line":571,"loc":{"start":{"line":571,"column":17},"end":{"line":571,"column":30}}},"40":{"name":"(anonymous_40)","line":580,"loc":{"start":{"line":580,"column":29},"end":{"line":580,"column":45}}},"41":{"name":"(anonymous_41)","line":582,"loc":{"start":{"line":582,"column":17},"end":{"line":582,"column":30}}},"42":{"name":"(anonymous_42)","line":595,"loc":{"start":{"line":595,"column":18},"end":{"line":595,"column":51}}},"43":{"name":"(anonymous_43)","line":599,"loc":{"start":{"line":599,"column":28},"end":{"line":599,"column":61}}},"44":{"name":"(anonymous_44)","line":641,"loc":{"start":{"line":641,"column":20},"end":{"line":641,"column":42}}},"45":{"name":"(anonymous_45)","line":664,"loc":{"start":{"line":664,"column":20},"end":{"line":664,"column":50}}},"46":{"name":"(anonymous_46)","line":689,"loc":{"start":{"line":689,"column":37},"end":{"line":689,"column":73}}},"47":{"name":"(anonymous_47)","line":780,"loc":{"start":{"line":780,"column":26},"end":{"line":780,"column":56}}},"48":{"name":"(anonymous_48)","line":851,"loc":{"start":{"line":851,"column":23},"end":{"line":851,"column":47}}},"49":{"name":"(anonymous_49)","line":855,"loc":{"start":{"line":855,"column":24},"end":{"line":855,"column":40}}},"50":{"name":"(anonymous_50)","line":859,"loc":{"start":{"line":859,"column":28},"end":{"line":859,"column":49}}},"51":{"name":"(anonymous_51)","line":870,"loc":{"start":{"line":870,"column":27},"end":{"line":870,"column":51}}},"52":{"name":"(anonymous_52)","line":876,"loc":{"start":{"line":876,"column":24},"end":{"line":876,"column":46}}},"53":{"name":"(anonymous_53)","line":890,"loc":{"start":{"line":890,"column":28},"end":{"line":890,"column":50}}},"54":{"name":"(anonymous_54)","line":904,"loc":{"start":{"line":904,"column":24},"end":{"line":904,"column":40}}},"55":{"name":"(anonymous_55)","line":908,"loc":{"start":{"line":908,"column":27},"end":{"line":908,"column":39}}},"56":{"name":"(anonymous_56)","line":915,"loc":{"start":{"line":915,"column":30},"end":{"line":915,"column":45}}},"57":{"name":"(anonymous_57)","line":921,"loc":{"start":{"line":921,"column":28},"end":{"line":921,"column":44}}},"58":{"name":"(anonymous_58)","line":924,"loc":{"start":{"line":924,"column":25},"end":{"line":924,"column":38}}},"59":{"name":"(anonymous_59)","line":925,"loc":{"start":{"line":925,"column":15},"end":{"line":925,"column":27}}},"60":{"name":"(anonymous_60)","line":934,"loc":{"start":{"line":934,"column":20},"end":{"line":934,"column":44}}},"61":{"name":"(anonymous_61)","line":939,"loc":{"start":{"line":939,"column":18},"end":{"line":939,"column":53}}},"62":{"name":"(anonymous_62)","line":953,"loc":{"start":{"line":953,"column":26},"end":{"line":953,"column":41}}},"63":{"name":"(anonymous_63)","line":975,"loc":{"start":{"line":975,"column":19},"end":{"line":975,"column":31}}},"64":{"name":"(anonymous_64)","line":1024,"loc":{"start":{"line":1024,"column":45},"end":{"line":1024,"column":64}}},"65":{"name":"(anonymous_65)","line":1025,"loc":{"start":{"line":1025,"column":20},"end":{"line":1025,"column":45}}},"66":{"name":"(anonymous_66)","line":1045,"loc":{"start":{"line":1045,"column":29},"end":{"line":1045,"column":49}}},"67":{"name":"(anonymous_67)","line":1046,"loc":{"start":{"line":1046,"column":15},"end":{"line":1046,"column":27}}},"68":{"name":"(anonymous_68)","line":1096,"loc":{"start":{"line":1096,"column":25},"end":{"line":1096,"column":41}}},"69":{"name":"(anonymous_69)","line":1102,"loc":{"start":{"line":1102,"column":28},"end":{"line":1102,"column":57}}},"70":{"name":"(anonymous_70)","line":1145,"loc":{"start":{"line":1145,"column":30},"end":{"line":1145,"column":63}}}},"statementMap":{"1":{"start":{"line":44,"column":0},"end":{"line":52,"column":16}},"2":{"start":{"line":54,"column":0},"end":{"line":60,"column":6}},"3":{"start":{"line":62,"column":0},"end":{"line":919,"column":6}},"4":{"start":{"line":64,"column":2},"end":{"line":64,"column":23}},"5":{"start":{"line":65,"column":2},"end":{"line":65,"column":34}},"6":{"start":{"line":66,"column":2},"end":{"line":66,"column":21}},"7":{"start":{"line":67,"column":2},"end":{"line":67,"column":32}},"8":{"start":{"line":68,"column":2},"end":{"line":68,"column":29}},"9":{"start":{"line":70,"column":2},"end":{"line":70,"column":23}},"10":{"start":{"line":71,"column":2},"end":{"line":71,"column":44}},"11":{"start":{"line":72,"column":2},"end":{"line":72,"column":44}},"12":{"start":{"line":73,"column":2},"end":{"line":73,"column":52}},"13":{"start":{"line":74,"column":2},"end":{"line":74,"column":28}},"14":{"start":{"line":76,"column":2},"end":{"line":76,"column":46}},"15":{"start":{"line":78,"column":2},"end":{"line":279,"column":4}},"16":{"start":{"line":80,"column":4},"end":{"line":276,"column":6}},"17":{"start":{"line":81,"column":6},"end":{"line":82,"column":74}},"18":{"start":{"line":84,"column":6},"end":{"line":84,"column":27}},"19":{"start":{"line":86,"column":6},"end":{"line":86,"column":43}},"20":{"start":{"line":91,"column":6},"end":{"line":93,"column":7}},"21":{"start":{"line":92,"column":8},"end":{"line":92,"column":28}},"22":{"start":{"line":95,"column":6},"end":{"line":97,"column":8}},"23":{"start":{"line":96,"column":8},"end":{"line":96,"column":28}},"24":{"start":{"line":111,"column":6},"end":{"line":123,"column":8}},"25":{"start":{"line":112,"column":8},"end":{"line":113,"column":33}},"26":{"start":{"line":114,"column":8},"end":{"line":114,"column":27}},"27":{"start":{"line":115,"column":8},"end":{"line":122,"column":11}},"28":{"start":{"line":116,"column":10},"end":{"line":116,"column":17}},"29":{"start":{"line":117,"column":10},"end":{"line":120,"column":11}},"30":{"start":{"line":118,"column":12},"end":{"line":118,"column":28}},"31":{"start":{"line":119,"column":12},"end":{"line":119,"column":27}},"32":{"start":{"line":121,"column":10},"end":{"line":121,"column":32}},"33":{"start":{"line":139,"column":6},"end":{"line":141,"column":8}},"34":{"start":{"line":140,"column":8},"end":{"line":140,"column":51}},"35":{"start":{"line":143,"column":6},"end":{"line":143,"column":52}},"36":{"start":{"line":151,"column":6},"end":{"line":193,"column":8}},"37":{"start":{"line":152,"column":8},"end":{"line":165,"column":21}},"38":{"start":{"line":167,"column":8},"end":{"line":167,"column":58}},"39":{"start":{"line":170,"column":8},"end":{"line":172,"column":9}},"40":{"start":{"line":171,"column":10},"end":{"line":171,"column":27}},"41":{"start":{"line":175,"column":8},"end":{"line":183,"column":9}},"42":{"start":{"line":176,"column":10},"end":{"line":176,"column":37}},"43":{"start":{"line":177,"column":10},"end":{"line":182,"column":11}},"44":{"start":{"line":178,"column":12},"end":{"line":178,"column":75}},"45":{"start":{"line":179,"column":12},"end":{"line":181,"column":13}},"46":{"start":{"line":180,"column":14},"end":{"line":180,"column":45}},"47":{"start":{"line":186,"column":8},"end":{"line":190,"column":11}},"48":{"start":{"line":187,"column":10},"end":{"line":189,"column":11}},"49":{"start":{"line":188,"column":12},"end":{"line":188,"column":29}},"50":{"start":{"line":192,"column":8},"end":{"line":192,"column":19}},"51":{"start":{"line":195,"column":6},"end":{"line":195,"column":32}},"52":{"start":{"line":196,"column":6},"end":{"line":196,"column":31}},"53":{"start":{"line":198,"column":6},"end":{"line":214,"column":8}},"54":{"start":{"line":199,"column":8},"end":{"line":202,"column":22}},"55":{"start":{"line":204,"column":8},"end":{"line":204,"column":25}},"56":{"start":{"line":205,"column":8},"end":{"line":205,"column":29}},"57":{"start":{"line":207,"column":8},"end":{"line":211,"column":9}},"58":{"start":{"line":208,"column":10},"end":{"line":208,"column":63}},"59":{"start":{"line":209,"column":10},"end":{"line":210,"column":43}},"60":{"start":{"line":213,"column":8},"end":{"line":213,"column":35}},"61":{"start":{"line":217,"column":6},"end":{"line":217,"column":57}},"62":{"start":{"line":218,"column":6},"end":{"line":218,"column":63}},"63":{"start":{"line":219,"column":6},"end":{"line":219,"column":63}},"64":{"start":{"line":220,"column":6},"end":{"line":220,"column":77}},"65":{"start":{"line":228,"column":6},"end":{"line":237,"column":8}},"66":{"start":{"line":229,"column":8},"end":{"line":229,"column":22}},"67":{"start":{"line":232,"column":8},"end":{"line":232,"column":92}},"68":{"start":{"line":233,"column":8},"end":{"line":233,"column":70}},"69":{"start":{"line":234,"column":8},"end":{"line":234,"column":39}},"70":{"start":{"line":236,"column":8},"end":{"line":236,"column":25}},"71":{"start":{"line":241,"column":6},"end":{"line":274,"column":9}},"72":{"start":{"line":242,"column":8},"end":{"line":250,"column":14}},"73":{"start":{"line":244,"column":14},"end":{"line":249,"column":16}},"74":{"start":{"line":245,"column":16},"end":{"line":245,"column":65}},"75":{"start":{"line":246,"column":16},"end":{"line":246,"column":39}},"76":{"start":{"line":247,"column":16},"end":{"line":247,"column":38}},"77":{"start":{"line":248,"column":16},"end":{"line":248,"column":61}},"78":{"start":{"line":251,"column":8},"end":{"line":273,"column":9}},"79":{"start":{"line":252,"column":10},"end":{"line":272,"column":11}},"80":{"start":{"line":253,"column":12},"end":{"line":271,"column":25}},"81":{"start":{"line":254,"column":14},"end":{"line":256,"column":64}},"82":{"start":{"line":261,"column":14},"end":{"line":261,"column":75}},"83":{"start":{"line":266,"column":14},"end":{"line":266,"column":83}},"84":{"start":{"line":270,"column":14},"end":{"line":270,"column":79}},"85":{"start":{"line":278,"column":4},"end":{"line":278,"column":32}},"86":{"start":{"line":281,"column":2},"end":{"line":567,"column":4}},"87":{"start":{"line":282,"column":4},"end":{"line":282,"column":17}},"88":{"start":{"line":299,"column":4},"end":{"line":303,"column":6}},"89":{"start":{"line":300,"column":6},"end":{"line":300,"column":55}},"90":{"start":{"line":301,"column":6},"end":{"line":301,"column":25}},"91":{"start":{"line":302,"column":6},"end":{"line":302,"column":49}},"92":{"start":{"line":305,"column":4},"end":{"line":307,"column":6}},"93":{"start":{"line":306,"column":6},"end":{"line":306,"column":44}},"94":{"start":{"line":310,"column":4},"end":{"line":357,"column":6}},"95":{"start":{"line":311,"column":6},"end":{"line":315,"column":22}},"96":{"start":{"line":317,"column":6},"end":{"line":319,"column":7}},"97":{"start":{"line":318,"column":8},"end":{"line":318,"column":28}},"98":{"start":{"line":321,"column":6},"end":{"line":354,"column":7}},"99":{"start":{"line":322,"column":8},"end":{"line":322,"column":23}},"100":{"start":{"line":326,"column":8},"end":{"line":353,"column":9}},"101":{"start":{"line":327,"column":10},"end":{"line":327,"column":46}},"102":{"start":{"line":328,"column":10},"end":{"line":328,"column":38}},"103":{"start":{"line":329,"column":10},"end":{"line":352,"column":13}},"104":{"start":{"line":330,"column":12},"end":{"line":332,"column":13}},"105":{"start":{"line":331,"column":14},"end":{"line":331,"column":41}},"106":{"start":{"line":333,"column":12},"end":{"line":351,"column":13}},"107":{"start":{"line":334,"column":14},"end":{"line":334,"column":32}},"108":{"start":{"line":337,"column":14},"end":{"line":347,"column":17}},"109":{"start":{"line":338,"column":16},"end":{"line":340,"column":17}},"110":{"start":{"line":339,"column":18},"end":{"line":339,"column":45}},"111":{"start":{"line":341,"column":16},"end":{"line":346,"column":17}},"112":{"start":{"line":342,"column":18},"end":{"line":342,"column":42}},"113":{"start":{"line":345,"column":18},"end":{"line":345,"column":39}},"114":{"start":{"line":350,"column":14},"end":{"line":350,"column":35}},"115":{"start":{"line":356,"column":6},"end":{"line":356,"column":44}},"116":{"start":{"line":359,"column":4},"end":{"line":369,"column":6}},"117":{"start":{"line":360,"column":6},"end":{"line":363,"column":36}},"118":{"start":{"line":364,"column":6},"end":{"line":364,"column":24}},"119":{"start":{"line":365,"column":6},"end":{"line":367,"column":7}},"120":{"start":{"line":366,"column":8},"end":{"line":366,"column":84}},"121":{"start":{"line":368,"column":6},"end":{"line":368,"column":57}},"122":{"start":{"line":372,"column":4},"end":{"line":372,"column":25}},"123":{"start":{"line":374,"column":4},"end":{"line":395,"column":6}},"124":{"start":{"line":375,"column":6},"end":{"line":382,"column":16}},"125":{"start":{"line":384,"column":6},"end":{"line":384,"column":47}},"126":{"start":{"line":386,"column":6},"end":{"line":386,"column":50}},"127":{"start":{"line":388,"column":6},"end":{"line":388,"column":45}},"128":{"start":{"line":389,"column":6},"end":{"line":392,"column":7}},"129":{"start":{"line":390,"column":8},"end":{"line":391,"column":50}},"130":{"start":{"line":394,"column":6},"end":{"line":394,"column":56}},"131":{"start":{"line":397,"column":4},"end":{"line":475,"column":6}},"132":{"start":{"line":398,"column":6},"end":{"line":409,"column":23}},"133":{"start":{"line":401,"column":12},"end":{"line":401,"column":64}},"134":{"start":{"line":411,"column":6},"end":{"line":411,"column":43}},"135":{"start":{"line":413,"column":6},"end":{"line":413,"column":45}},"136":{"start":{"line":415,"column":6},"end":{"line":415,"column":41}},"137":{"start":{"line":420,"column":6},"end":{"line":460,"column":7}},"138":{"start":{"line":422,"column":8},"end":{"line":422,"column":19}},"139":{"start":{"line":424,"column":8},"end":{"line":424,"column":22}},"140":{"start":{"line":425,"column":8},"end":{"line":435,"column":9}},"141":{"start":{"line":426,"column":10},"end":{"line":426,"column":25}},"142":{"start":{"line":427,"column":10},"end":{"line":430,"column":11}},"143":{"start":{"line":428,"column":12},"end":{"line":429,"column":39}},"144":{"start":{"line":432,"column":10},"end":{"line":434,"column":11}},"145":{"start":{"line":433,"column":12},"end":{"line":433,"column":47}},"146":{"start":{"line":440,"column":8},"end":{"line":440,"column":28}},"147":{"start":{"line":442,"column":8},"end":{"line":444,"column":9}},"148":{"start":{"line":443,"column":10},"end":{"line":443,"column":45}},"149":{"start":{"line":446,"column":8},"end":{"line":453,"column":9}},"150":{"start":{"line":447,"column":10},"end":{"line":449,"column":11}},"151":{"start":{"line":448,"column":12},"end":{"line":448,"column":40}},"152":{"start":{"line":451,"column":10},"end":{"line":452,"column":31}},"153":{"start":{"line":455,"column":8},"end":{"line":457,"column":9}},"154":{"start":{"line":456,"column":10},"end":{"line":456,"column":28}},"155":{"start":{"line":458,"column":8},"end":{"line":458,"column":32}},"156":{"start":{"line":459,"column":8},"end":{"line":459,"column":19}},"157":{"start":{"line":462,"column":6},"end":{"line":474,"column":10}},"158":{"start":{"line":463,"column":8},"end":{"line":472,"column":9}},"159":{"start":{"line":464,"column":10},"end":{"line":464,"column":40}},"160":{"start":{"line":465,"column":10},"end":{"line":471,"column":11}},"161":{"start":{"line":466,"column":12},"end":{"line":468,"column":13}},"162":{"start":{"line":467,"column":14},"end":{"line":467,"column":31}},"163":{"start":{"line":470,"column":12},"end":{"line":470,"column":30}},"164":{"start":{"line":473,"column":8},"end":{"line":473,"column":27}},"165":{"start":{"line":477,"column":4},"end":{"line":524,"column":6}},"166":{"start":{"line":478,"column":6},"end":{"line":483,"column":16}},"167":{"start":{"line":485,"column":6},"end":{"line":485,"column":35}},"168":{"start":{"line":486,"column":6},"end":{"line":486,"column":48}},"169":{"start":{"line":487,"column":6},"end":{"line":487,"column":19}},"170":{"start":{"line":489,"column":6},"end":{"line":489,"column":26}},"171":{"start":{"line":490,"column":6},"end":{"line":490,"column":46}},"172":{"start":{"line":491,"column":6},"end":{"line":491,"column":33}},"173":{"start":{"line":492,"column":6},"end":{"line":492,"column":32}},"174":{"start":{"line":494,"column":6},"end":{"line":496,"column":7}},"175":{"start":{"line":495,"column":8},"end":{"line":495,"column":28}},"176":{"start":{"line":499,"column":6},"end":{"line":505,"column":7}},"177":{"start":{"line":501,"column":8},"end":{"line":503,"column":9}},"178":{"start":{"line":502,"column":10},"end":{"line":502,"column":45}},"179":{"start":{"line":504,"column":8},"end":{"line":504,"column":34}},"180":{"start":{"line":507,"column":6},"end":{"line":507,"column":50}},"181":{"start":{"line":509,"column":6},"end":{"line":509,"column":45}},"182":{"start":{"line":511,"column":6},"end":{"line":523,"column":10}},"183":{"start":{"line":512,"column":8},"end":{"line":521,"column":9}},"184":{"start":{"line":513,"column":10},"end":{"line":513,"column":42}},"185":{"start":{"line":515,"column":10},"end":{"line":520,"column":11}},"186":{"start":{"line":516,"column":12},"end":{"line":518,"column":13}},"187":{"start":{"line":517,"column":14},"end":{"line":517,"column":33}},"188":{"start":{"line":519,"column":12},"end":{"line":519,"column":32}},"189":{"start":{"line":522,"column":8},"end":{"line":522,"column":27}},"190":{"start":{"line":526,"column":4},"end":{"line":556,"column":6}},"191":{"start":{"line":527,"column":6},"end":{"line":531,"column":16}},"192":{"start":{"line":533,"column":6},"end":{"line":533,"column":35}},"193":{"start":{"line":534,"column":6},"end":{"line":534,"column":48}},"194":{"start":{"line":535,"column":6},"end":{"line":535,"column":19}},"195":{"start":{"line":537,"column":6},"end":{"line":537,"column":27}},"196":{"start":{"line":538,"column":6},"end":{"line":538,"column":46}},"197":{"start":{"line":539,"column":6},"end":{"line":539,"column":32}},"198":{"start":{"line":541,"column":6},"end":{"line":544,"column":7}},"199":{"start":{"line":542,"column":8},"end":{"line":542,"column":28}},"200":{"start":{"line":543,"column":8},"end":{"line":543,"column":23}},"201":{"start":{"line":546,"column":6},"end":{"line":546,"column":50}},"202":{"start":{"line":548,"column":6},"end":{"line":548,"column":45}},"203":{"start":{"line":550,"column":6},"end":{"line":555,"column":10}},"204":{"start":{"line":551,"column":8},"end":{"line":553,"column":9}},"205":{"start":{"line":552,"column":10},"end":{"line":552,"column":42}},"206":{"start":{"line":554,"column":8},"end":{"line":554,"column":27}},"207":{"start":{"line":558,"column":4},"end":{"line":562,"column":6}},"208":{"start":{"line":559,"column":6},"end":{"line":560,"column":38}},"209":{"start":{"line":561,"column":6},"end":{"line":561,"column":37}},"210":{"start":{"line":564,"column":4},"end":{"line":564,"column":25}},"211":{"start":{"line":566,"column":4},"end":{"line":566,"column":15}},"212":{"start":{"line":569,"column":2},"end":{"line":578,"column":4}},"213":{"start":{"line":570,"column":4},"end":{"line":570,"column":20}},"214":{"start":{"line":571,"column":4},"end":{"line":577,"column":7}},"215":{"start":{"line":573,"column":6},"end":{"line":573,"column":38}},"216":{"start":{"line":576,"column":6},"end":{"line":576,"column":24}},"217":{"start":{"line":580,"column":2},"end":{"line":592,"column":4}},"218":{"start":{"line":581,"column":4},"end":{"line":581,"column":20}},"219":{"start":{"line":582,"column":4},"end":{"line":590,"column":7}},"220":{"start":{"line":584,"column":6},"end":{"line":584,"column":38}},"221":{"start":{"line":587,"column":6},"end":{"line":589,"column":7}},"222":{"start":{"line":588,"column":8},"end":{"line":588,"column":46}},"223":{"start":{"line":591,"column":4},"end":{"line":591,"column":29}},"224":{"start":{"line":595,"column":2},"end":{"line":597,"column":4}},"225":{"start":{"line":596,"column":4},"end":{"line":596,"column":58}},"226":{"start":{"line":599,"column":2},"end":{"line":639,"column":4}},"227":{"start":{"line":600,"column":4},"end":{"line":602,"column":18}},"228":{"start":{"line":606,"column":4},"end":{"line":606,"column":71}},"229":{"start":{"line":608,"column":4},"end":{"line":608,"column":68}},"230":{"start":{"line":609,"column":4},"end":{"line":609,"column":36}},"231":{"start":{"line":614,"column":4},"end":{"line":614,"column":53}},"232":{"start":{"line":617,"column":4},"end":{"line":617,"column":60}},"233":{"start":{"line":620,"column":4},"end":{"line":620,"column":42}},"234":{"start":{"line":623,"column":4},"end":{"line":623,"column":36}},"235":{"start":{"line":625,"column":4},"end":{"line":625,"column":49}},"236":{"start":{"line":630,"column":4},"end":{"line":630,"column":36}},"237":{"start":{"line":632,"column":4},"end":{"line":632,"column":48}},"238":{"start":{"line":634,"column":4},"end":{"line":634,"column":50}},"239":{"start":{"line":636,"column":4},"end":{"line":636,"column":28}},"240":{"start":{"line":638,"column":4},"end":{"line":638,"column":21}},"241":{"start":{"line":641,"column":2},"end":{"line":662,"column":4}},"242":{"start":{"line":642,"column":4},"end":{"line":644,"column":39}},"243":{"start":{"line":647,"column":4},"end":{"line":647,"column":45}},"244":{"start":{"line":649,"column":4},"end":{"line":649,"column":43}},"245":{"start":{"line":651,"column":4},"end":{"line":651,"column":57}},"246":{"start":{"line":653,"column":4},"end":{"line":655,"column":5}},"247":{"start":{"line":654,"column":6},"end":{"line":654,"column":34}},"248":{"start":{"line":657,"column":4},"end":{"line":659,"column":5}},"249":{"start":{"line":658,"column":6},"end":{"line":658,"column":25}},"250":{"start":{"line":660,"column":4},"end":{"line":660,"column":37}},"251":{"start":{"line":661,"column":4},"end":{"line":661,"column":16}},"252":{"start":{"line":664,"column":2},"end":{"line":687,"column":4}},"253":{"start":{"line":665,"column":4},"end":{"line":667,"column":26}},"254":{"start":{"line":670,"column":4},"end":{"line":670,"column":45}},"255":{"start":{"line":672,"column":4},"end":{"line":672,"column":67}},"256":{"start":{"line":673,"column":4},"end":{"line":673,"column":40}},"257":{"start":{"line":675,"column":4},"end":{"line":675,"column":28}},"258":{"start":{"line":676,"column":4},"end":{"line":676,"column":30}},"259":{"start":{"line":677,"column":4},"end":{"line":677,"column":55}},"260":{"start":{"line":679,"column":4},"end":{"line":681,"column":5}},"261":{"start":{"line":680,"column":6},"end":{"line":680,"column":35}},"262":{"start":{"line":683,"column":4},"end":{"line":683,"column":47}},"263":{"start":{"line":684,"column":4},"end":{"line":684,"column":34}},"264":{"start":{"line":686,"column":4},"end":{"line":686,"column":16}},"265":{"start":{"line":689,"column":2},"end":{"line":778,"column":4}},"266":{"start":{"line":690,"column":4},"end":{"line":700,"column":12}},"267":{"start":{"line":702,"column":4},"end":{"line":704,"column":5}},"268":{"start":{"line":703,"column":6},"end":{"line":703,"column":40}},"269":{"start":{"line":705,"column":4},"end":{"line":705,"column":31}},"270":{"start":{"line":706,"column":4},"end":{"line":706,"column":59}},"271":{"start":{"line":709,"column":4},"end":{"line":709,"column":23}},"272":{"start":{"line":712,"column":4},"end":{"line":722,"column":5}},"273":{"start":{"line":713,"column":6},"end":{"line":713,"column":18}},"274":{"start":{"line":714,"column":6},"end":{"line":718,"column":7}},"275":{"start":{"line":716,"column":8},"end":{"line":716,"column":75}},"276":{"start":{"line":717,"column":8},"end":{"line":717,"column":47}},"277":{"start":{"line":721,"column":6},"end":{"line":721,"column":28}},"278":{"start":{"line":726,"column":4},"end":{"line":728,"column":5}},"279":{"start":{"line":727,"column":6},"end":{"line":727,"column":40}},"280":{"start":{"line":729,"column":4},"end":{"line":731,"column":5}},"281":{"start":{"line":730,"column":6},"end":{"line":730,"column":40}},"282":{"start":{"line":733,"column":4},"end":{"line":737,"column":5}},"283":{"start":{"line":734,"column":6},"end":{"line":736,"column":7}},"284":{"start":{"line":735,"column":8},"end":{"line":735,"column":33}},"285":{"start":{"line":739,"column":4},"end":{"line":759,"column":5}},"286":{"start":{"line":740,"column":6},"end":{"line":742,"column":7}},"287":{"start":{"line":741,"column":8},"end":{"line":741,"column":17}},"288":{"start":{"line":744,"column":6},"end":{"line":744,"column":85}},"289":{"start":{"line":750,"column":6},"end":{"line":758,"column":7}},"290":{"start":{"line":751,"column":8},"end":{"line":751,"column":26}},"291":{"start":{"line":752,"column":8},"end":{"line":752,"column":32}},"292":{"start":{"line":753,"column":8},"end":{"line":753,"column":28}},"293":{"start":{"line":757,"column":8},"end":{"line":757,"column":32}},"294":{"start":{"line":763,"column":4},"end":{"line":763,"column":28}},"295":{"start":{"line":764,"column":4},"end":{"line":764,"column":28}},"296":{"start":{"line":766,"column":4},"end":{"line":768,"column":5}},"297":{"start":{"line":767,"column":6},"end":{"line":767,"column":25}},"298":{"start":{"line":770,"column":4},"end":{"line":772,"column":5}},"299":{"start":{"line":771,"column":6},"end":{"line":771,"column":27}},"300":{"start":{"line":774,"column":4},"end":{"line":774,"column":25}},"301":{"start":{"line":775,"column":4},"end":{"line":775,"column":39}},"302":{"start":{"line":777,"column":4},"end":{"line":777,"column":16}},"303":{"start":{"line":780,"column":2},"end":{"line":849,"column":4}},"304":{"start":{"line":782,"column":4},"end":{"line":789,"column":65}},"305":{"start":{"line":794,"column":4},"end":{"line":815,"column":5}},"306":{"start":{"line":796,"column":6},"end":{"line":810,"column":7}},"307":{"start":{"line":797,"column":8},"end":{"line":799,"column":10}},"308":{"start":{"line":803,"column":8},"end":{"line":803,"column":54}},"309":{"start":{"line":804,"column":8},"end":{"line":809,"column":9}},"310":{"start":{"line":805,"column":10},"end":{"line":808,"column":12}},"311":{"start":{"line":814,"column":6},"end":{"line":814,"column":23}},"312":{"start":{"line":818,"column":4},"end":{"line":821,"column":13}},"313":{"start":{"line":823,"column":4},"end":{"line":841,"column":5}},"314":{"start":{"line":824,"column":6},"end":{"line":824,"column":37}},"315":{"start":{"line":825,"column":6},"end":{"line":825,"column":72}},"316":{"start":{"line":827,"column":6},"end":{"line":829,"column":7}},"317":{"start":{"line":828,"column":8},"end":{"line":828,"column":57}},"318":{"start":{"line":831,"column":6},"end":{"line":831,"column":55}},"319":{"start":{"line":835,"column":6},"end":{"line":840,"column":7}},"320":{"start":{"line":836,"column":8},"end":{"line":839,"column":10}},"321":{"start":{"line":845,"column":4},"end":{"line":848,"column":6}},"322":{"start":{"line":851,"column":2},"end":{"line":853,"column":4}},"323":{"start":{"line":852,"column":4},"end":{"line":852,"column":41}},"324":{"start":{"line":855,"column":2},"end":{"line":857,"column":4}},"325":{"start":{"line":856,"column":4},"end":{"line":856,"column":41}},"326":{"start":{"line":859,"column":2},"end":{"line":868,"column":4}},"327":{"start":{"line":860,"column":4},"end":{"line":861,"column":64}},"328":{"start":{"line":862,"column":4},"end":{"line":866,"column":5}},"329":{"start":{"line":863,"column":6},"end":{"line":865,"column":54}},"330":{"start":{"line":867,"column":4},"end":{"line":867,"column":19}},"331":{"start":{"line":870,"column":2},"end":{"line":873,"column":4}},"332":{"start":{"line":871,"column":4},"end":{"line":871,"column":48}},"333":{"start":{"line":872,"column":4},"end":{"line":872,"column":34}},"334":{"start":{"line":876,"column":2},"end":{"line":888,"column":4}},"335":{"start":{"line":877,"column":4},"end":{"line":880,"column":17}},"336":{"start":{"line":881,"column":4},"end":{"line":881,"column":59}},"337":{"start":{"line":882,"column":4},"end":{"line":887,"column":5}},"338":{"start":{"line":883,"column":6},"end":{"line":883,"column":35}},"339":{"start":{"line":884,"column":6},"end":{"line":886,"column":7}},"340":{"start":{"line":885,"column":8},"end":{"line":885,"column":24}},"341":{"start":{"line":890,"column":2},"end":{"line":902,"column":4}},"342":{"start":{"line":891,"column":4},"end":{"line":894,"column":17}},"343":{"start":{"line":895,"column":4},"end":{"line":895,"column":59}},"344":{"start":{"line":896,"column":4},"end":{"line":901,"column":5}},"345":{"start":{"line":897,"column":6},"end":{"line":897,"column":35}},"346":{"start":{"line":898,"column":6},"end":{"line":900,"column":7}},"347":{"start":{"line":899,"column":8},"end":{"line":899,"column":17}},"348":{"start":{"line":904,"column":2},"end":{"line":906,"column":4}},"349":{"start":{"line":905,"column":4},"end":{"line":905,"column":22}},"350":{"start":{"line":908,"column":2},"end":{"line":913,"column":4}},"351":{"start":{"line":909,"column":4},"end":{"line":909,"column":16}},"352":{"start":{"line":910,"column":4},"end":{"line":912,"column":5}},"353":{"start":{"line":911,"column":6},"end":{"line":911,"column":16}},"354":{"start":{"line":915,"column":2},"end":{"line":917,"column":4}},"355":{"start":{"line":916,"column":4},"end":{"line":916,"column":33}},"356":{"start":{"line":921,"column":0},"end":{"line":1094,"column":2}},"357":{"start":{"line":922,"column":2},"end":{"line":930,"column":8}},"358":{"start":{"line":925,"column":8},"end":{"line":929,"column":10}},"359":{"start":{"line":926,"column":10},"end":{"line":926,"column":59}},"360":{"start":{"line":927,"column":10},"end":{"line":927,"column":26}},"361":{"start":{"line":928,"column":10},"end":{"line":928,"column":50}},"362":{"start":{"line":932,"column":2},"end":{"line":932,"column":19}},"363":{"start":{"line":934,"column":2},"end":{"line":937,"column":4}},"364":{"start":{"line":935,"column":4},"end":{"line":935,"column":48}},"365":{"start":{"line":936,"column":4},"end":{"line":936,"column":27}},"366":{"start":{"line":939,"column":2},"end":{"line":951,"column":4}},"367":{"start":{"line":940,"column":4},"end":{"line":940,"column":29}},"368":{"start":{"line":944,"column":4},"end":{"line":947,"column":5}},"369":{"start":{"line":945,"column":6},"end":{"line":946,"column":69}},"370":{"start":{"line":949,"column":4},"end":{"line":950,"column":58}},"371":{"start":{"line":953,"column":2},"end":{"line":972,"column":3}},"372":{"start":{"line":954,"column":4},"end":{"line":956,"column":17}},"373":{"start":{"line":958,"column":4},"end":{"line":971,"column":5}},"374":{"start":{"line":959,"column":6},"end":{"line":959,"column":27}},"375":{"start":{"line":961,"column":6},"end":{"line":968,"column":7}},"376":{"start":{"line":962,"column":8},"end":{"line":962,"column":24}},"377":{"start":{"line":963,"column":8},"end":{"line":963,"column":21}},"378":{"start":{"line":966,"column":8},"end":{"line":966,"column":29}},"379":{"start":{"line":967,"column":8},"end":{"line":967,"column":27}},"380":{"start":{"line":970,"column":6},"end":{"line":970,"column":41}},"381":{"start":{"line":975,"column":2},"end":{"line":1010,"column":4}},"382":{"start":{"line":976,"column":4},"end":{"line":981,"column":18}},"383":{"start":{"line":982,"column":4},"end":{"line":992,"column":5}},"384":{"start":{"line":985,"column":6},"end":{"line":991,"column":7}},"385":{"start":{"line":987,"column":8},"end":{"line":987,"column":24}},"386":{"start":{"line":990,"column":8},"end":{"line":990,"column":38}},"387":{"start":{"line":995,"column":4},"end":{"line":997,"column":5}},"388":{"start":{"line":996,"column":6},"end":{"line":996,"column":24}},"389":{"start":{"line":1000,"column":4},"end":{"line":1000,"column":46}},"390":{"start":{"line":1002,"column":4},"end":{"line":1006,"column":5}},"391":{"start":{"line":1003,"column":6},"end":{"line":1005,"column":33}},"392":{"start":{"line":1008,"column":4},"end":{"line":1009,"column":68}},"393":{"start":{"line":1014,"column":2},"end":{"line":1016,"column":3}},"394":{"start":{"line":1015,"column":4},"end":{"line":1015,"column":73}},"395":{"start":{"line":1019,"column":2},"end":{"line":1022,"column":3}},"396":{"start":{"line":1020,"column":4},"end":{"line":1020,"column":61}},"397":{"start":{"line":1021,"column":4},"end":{"line":1021,"column":61}},"398":{"start":{"line":1024,"column":2},"end":{"line":1093,"column":5}},"399":{"start":{"line":1025,"column":4},"end":{"line":1092,"column":6}},"400":{"start":{"line":1026,"column":6},"end":{"line":1029,"column":41}},"401":{"start":{"line":1032,"column":6},"end":{"line":1032,"column":81}},"402":{"start":{"line":1033,"column":6},"end":{"line":1033,"column":83}},"403":{"start":{"line":1035,"column":6},"end":{"line":1040,"column":8}},"404":{"start":{"line":1042,"column":6},"end":{"line":1042,"column":50}},"405":{"start":{"line":1045,"column":6},"end":{"line":1083,"column":8}},"406":{"start":{"line":1046,"column":8},"end":{"line":1082,"column":9}},"407":{"start":{"line":1047,"column":10},"end":{"line":1051,"column":18}},"408":{"start":{"line":1053,"column":10},"end":{"line":1062,"column":11}},"409":{"start":{"line":1054,"column":12},"end":{"line":1054,"column":39}},"410":{"start":{"line":1055,"column":12},"end":{"line":1055,"column":39}},"411":{"start":{"line":1056,"column":12},"end":{"line":1056,"column":30}},"412":{"start":{"line":1059,"column":12},"end":{"line":1059,"column":39}},"413":{"start":{"line":1060,"column":12},"end":{"line":1060,"column":39}},"414":{"start":{"line":1061,"column":12},"end":{"line":1061,"column":30}},"415":{"start":{"line":1064,"column":10},"end":{"line":1069,"column":11}},"416":{"start":{"line":1065,"column":12},"end":{"line":1065,"column":59}},"417":{"start":{"line":1068,"column":12},"end":{"line":1068,"column":71}},"418":{"start":{"line":1071,"column":10},"end":{"line":1073,"column":11}},"419":{"start":{"line":1072,"column":12},"end":{"line":1072,"column":76}},"420":{"start":{"line":1075,"column":10},"end":{"line":1081,"column":11}},"421":{"start":{"line":1076,"column":12},"end":{"line":1076,"column":40}},"422":{"start":{"line":1077,"column":12},"end":{"line":1077,"column":71}},"423":{"start":{"line":1079,"column":12},"end":{"line":1080,"column":61}},"424":{"start":{"line":1089,"column":6},"end":{"line":1091,"column":7}},"425":{"start":{"line":1090,"column":8},"end":{"line":1090,"column":61}},"426":{"start":{"line":1096,"column":0},"end":{"line":1100,"column":2}},"427":{"start":{"line":1097,"column":2},"end":{"line":1097,"column":19}},"428":{"start":{"line":1098,"column":2},"end":{"line":1098,"column":23}},"429":{"start":{"line":1099,"column":2},"end":{"line":1099,"column":25}},"430":{"start":{"line":1102,"column":0},"end":{"line":1143,"column":2}},"431":{"start":{"line":1103,"column":2},"end":{"line":1105,"column":45}},"432":{"start":{"line":1107,"column":2},"end":{"line":1107,"column":33}},"433":{"start":{"line":1108,"column":2},"end":{"line":1108,"column":31}},"434":{"start":{"line":1109,"column":2},"end":{"line":1109,"column":31}},"435":{"start":{"line":1111,"column":2},"end":{"line":1111,"column":19}},"436":{"start":{"line":1112,"column":2},"end":{"line":1112,"column":27}},"437":{"start":{"line":1113,"column":2},"end":{"line":1113,"column":22}},"438":{"start":{"line":1117,"column":2},"end":{"line":1141,"column":3}},"439":{"start":{"line":1118,"column":4},"end":{"line":1121,"column":5}},"440":{"start":{"line":1119,"column":6},"end":{"line":1120,"column":75}},"441":{"start":{"line":1122,"column":4},"end":{"line":1135,"column":5}},"442":{"start":{"line":1123,"column":6},"end":{"line":1134,"column":7}},"443":{"start":{"line":1125,"column":6},"end":{"line":1127,"column":56}},"444":{"start":{"line":1131,"column":6},"end":{"line":1133,"column":62}},"445":{"start":{"line":1136,"column":4},"end":{"line":1140,"column":5}},"446":{"start":{"line":1137,"column":6},"end":{"line":1139,"column":30}},"447":{"start":{"line":1142,"column":2},"end":{"line":1142,"column":33}},"448":{"start":{"line":1145,"column":0},"end":{"line":1149,"column":2}},"449":{"start":{"line":1146,"column":2},"end":{"line":1146,"column":19}},"450":{"start":{"line":1147,"column":2},"end":{"line":1147,"column":29}},"451":{"start":{"line":1148,"column":2},"end":{"line":1148,"column":25}},"452":{"start":{"line":1151,"column":0},"end":{"line":1151,"column":23}},"453":{"start":{"line":1154,"column":0},"end":{"line":1154,"column":39}},"454":{"start":{"line":1155,"column":0},"end":{"line":1155,"column":41}},"455":{"start":{"line":1156,"column":0},"end":{"line":1156,"column":39}}},"branchMap":{"1":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":20},"end":{"line":86,"column":33}},{"start":{"line":86,"column":37},"end":{"line":86,"column":42}}]},"2":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":6},"end":{"line":91,"column":6}},{"start":{"line":91,"column":6},"end":{"line":91,"column":6}}]},"3":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":10},"end":{"line":117,"column":10}},{"start":{"line":117,"column":10},"end":{"line":117,"column":10}}]},"4":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":39},"end":{"line":140,"column":43}},{"start":{"line":140,"column":47},"end":{"line":140,"column":49}}]},"5":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":19},"end":{"line":153,"column":26}},{"start":{"line":153,"column":30},"end":{"line":153,"column":32}}]},"6":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":27},"end":{"line":158,"column":43}},{"start":{"line":158,"column":47},"end":{"line":158,"column":49}}]},"7":{"line":167,"type":"binary-expr","locations":[{"start":{"line":167,"column":37},"end":{"line":167,"column":51}},{"start":{"line":167,"column":55},"end":{"line":167,"column":57}}]},"8":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":12},"end":{"line":179,"column":12}},{"start":{"line":179,"column":12},"end":{"line":179,"column":12}}]},"9":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":10},"end":{"line":187,"column":10}},{"start":{"line":187,"column":10},"end":{"line":187,"column":10}}]},"10":{"line":209,"type":"cond-expr","locations":[{"start":{"line":210,"column":14},"end":{"line":210,"column":32}},{"start":{"line":210,"column":35},"end":{"line":210,"column":42}}]},"11":{"line":251,"type":"if","locations":[{"start":{"line":251,"column":8},"end":{"line":251,"column":8}},{"start":{"line":251,"column":8},"end":{"line":251,"column":8}}]},"12":{"line":254,"type":"cond-expr","locations":[{"start":{"line":255,"column":22},"end":{"line":255,"column":58}},{"start":{"line":255,"column":61},"end":{"line":255,"column":69}}]},"13":{"line":256,"type":"cond-expr","locations":[{"start":{"line":256,"column":50},"end":{"line":256,"column":55}},{"start":{"line":256,"column":58},"end":{"line":256,"column":63}}]},"14":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":18},"end":{"line":313,"column":30}},{"start":{"line":313,"column":34},"end":{"line":313,"column":36}}]},"15":{"line":314,"type":"binary-expr","locations":[{"start":{"line":314,"column":17},"end":{"line":314,"column":29}},{"start":{"line":314,"column":33},"end":{"line":314,"column":35}}]},"16":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":6},"end":{"line":317,"column":6}},{"start":{"line":317,"column":6},"end":{"line":317,"column":6}}]},"17":{"line":317,"type":"binary-expr","locations":[{"start":{"line":317,"column":10},"end":{"line":317,"column":34}},{"start":{"line":317,"column":38},"end":{"line":317,"column":62}}]},"18":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":6},"end":{"line":321,"column":6}},{"start":{"line":321,"column":6},"end":{"line":321,"column":6}}]},"19":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":8},"end":{"line":326,"column":8}},{"start":{"line":326,"column":8},"end":{"line":326,"column":8}}]},"20":{"line":330,"type":"if","locations":[{"start":{"line":330,"column":12},"end":{"line":330,"column":12}},{"start":{"line":330,"column":12},"end":{"line":330,"column":12}}]},"21":{"line":333,"type":"if","locations":[{"start":{"line":333,"column":12},"end":{"line":333,"column":12}},{"start":{"line":333,"column":12},"end":{"line":333,"column":12}}]},"22":{"line":333,"type":"binary-expr","locations":[{"start":{"line":333,"column":16},"end":{"line":333,"column":20}},{"start":{"line":333,"column":24},"end":{"line":333,"column":31}}]},"23":{"line":338,"type":"if","locations":[{"start":{"line":338,"column":16},"end":{"line":338,"column":16}},{"start":{"line":338,"column":16},"end":{"line":338,"column":16}}]},"24":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":16},"end":{"line":341,"column":16}},{"start":{"line":341,"column":16},"end":{"line":341,"column":16}}]},"25":{"line":341,"type":"binary-expr","locations":[{"start":{"line":341,"column":20},"end":{"line":341,"column":24}},{"start":{"line":341,"column":28},"end":{"line":341,"column":39}}]},"26":{"line":361,"type":"binary-expr","locations":[{"start":{"line":361,"column":21},"end":{"line":361,"column":31}},{"start":{"line":361,"column":35},"end":{"line":361,"column":49}}]},"27":{"line":362,"type":"binary-expr","locations":[{"start":{"line":362,"column":18},"end":{"line":362,"column":30}},{"start":{"line":362,"column":34},"end":{"line":362,"column":36}}]},"28":{"line":363,"type":"binary-expr","locations":[{"start":{"line":363,"column":17},"end":{"line":363,"column":29}},{"start":{"line":363,"column":33},"end":{"line":363,"column":35}}]},"29":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":6},"end":{"line":365,"column":6}},{"start":{"line":365,"column":6},"end":{"line":365,"column":6}}]},"30":{"line":378,"type":"cond-expr","locations":[{"start":{"line":379,"column":14},"end":{"line":379,"column":24}},{"start":{"line":379,"column":27},"end":{"line":379,"column":31}}]},"31":{"line":380,"type":"binary-expr","locations":[{"start":{"line":380,"column":18},"end":{"line":380,"column":30}},{"start":{"line":380,"column":34},"end":{"line":380,"column":36}}]},"32":{"line":381,"type":"binary-expr","locations":[{"start":{"line":381,"column":17},"end":{"line":381,"column":29}},{"start":{"line":381,"column":33},"end":{"line":381,"column":35}}]},"33":{"line":384,"type":"binary-expr","locations":[{"start":{"line":384,"column":22},"end":{"line":384,"column":35}},{"start":{"line":384,"column":39},"end":{"line":384,"column":46}}]},"34":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":6},"end":{"line":389,"column":6}},{"start":{"line":389,"column":6},"end":{"line":389,"column":6}}]},"35":{"line":389,"type":"binary-expr","locations":[{"start":{"line":389,"column":10},"end":{"line":389,"column":23}},{"start":{"line":389,"column":27},"end":{"line":389,"column":46}}]},"36":{"line":404,"type":"binary-expr","locations":[{"start":{"line":404,"column":21},"end":{"line":404,"column":31}},{"start":{"line":404,"column":35},"end":{"line":404,"column":49}}]},"37":{"line":405,"type":"binary-expr","locations":[{"start":{"line":405,"column":17},"end":{"line":405,"column":29}},{"start":{"line":405,"column":33},"end":{"line":405,"column":35}}]},"38":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":6},"end":{"line":420,"column":6}},{"start":{"line":420,"column":6},"end":{"line":420,"column":6}}]},"39":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":10},"end":{"line":427,"column":10}},{"start":{"line":427,"column":10},"end":{"line":427,"column":10}}]},"40":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":10},"end":{"line":432,"column":10}},{"start":{"line":432,"column":10},"end":{"line":432,"column":10}}]},"41":{"line":432,"type":"binary-expr","locations":[{"start":{"line":432,"column":16},"end":{"line":432,"column":30}},{"start":{"line":432,"column":34},"end":{"line":432,"column":44}}]},"42":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":8},"end":{"line":442,"column":8}},{"start":{"line":442,"column":8},"end":{"line":442,"column":8}}]},"43":{"line":442,"type":"binary-expr","locations":[{"start":{"line":442,"column":14},"end":{"line":442,"column":28}},{"start":{"line":442,"column":32},"end":{"line":442,"column":42}}]},"44":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":8},"end":{"line":446,"column":8}},{"start":{"line":446,"column":8},"end":{"line":446,"column":8}}]},"45":{"line":447,"type":"if","locations":[{"start":{"line":447,"column":10},"end":{"line":447,"column":10}},{"start":{"line":447,"column":10},"end":{"line":447,"column":10}}]},"46":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":8},"end":{"line":455,"column":8}},{"start":{"line":455,"column":8},"end":{"line":455,"column":8}}]},"47":{"line":463,"type":"if","locations":[{"start":{"line":463,"column":8},"end":{"line":463,"column":8}},{"start":{"line":463,"column":8},"end":{"line":463,"column":8}}]},"48":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":10},"end":{"line":465,"column":10}},{"start":{"line":465,"column":10},"end":{"line":465,"column":10}}]},"49":{"line":466,"type":"if","locations":[{"start":{"line":466,"column":12},"end":{"line":466,"column":12}},{"start":{"line":466,"column":12},"end":{"line":466,"column":12}}]},"50":{"line":490,"type":"binary-expr","locations":[{"start":{"line":490,"column":17},"end":{"line":490,"column":27}},{"start":{"line":490,"column":31},"end":{"line":490,"column":45}}]},"51":{"line":491,"type":"binary-expr","locations":[{"start":{"line":491,"column":14},"end":{"line":491,"column":26}},{"start":{"line":491,"column":30},"end":{"line":491,"column":32}}]},"52":{"line":492,"type":"binary-expr","locations":[{"start":{"line":492,"column":13},"end":{"line":492,"column":25}},{"start":{"line":492,"column":29},"end":{"line":492,"column":31}}]},"53":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":6},"end":{"line":494,"column":6}},{"start":{"line":494,"column":6},"end":{"line":494,"column":6}}]},"54":{"line":494,"type":"binary-expr","locations":[{"start":{"line":494,"column":10},"end":{"line":494,"column":34}},{"start":{"line":494,"column":38},"end":{"line":494,"column":62}}]},"55":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":6},"end":{"line":499,"column":6}},{"start":{"line":499,"column":6},"end":{"line":499,"column":6}}]},"56":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":8},"end":{"line":501,"column":8}},{"start":{"line":501,"column":8},"end":{"line":501,"column":8}}]},"57":{"line":501,"type":"binary-expr","locations":[{"start":{"line":501,"column":14},"end":{"line":501,"column":28}},{"start":{"line":501,"column":32},"end":{"line":501,"column":42}}]},"58":{"line":512,"type":"if","locations":[{"start":{"line":512,"column":8},"end":{"line":512,"column":8}},{"start":{"line":512,"column":8},"end":{"line":512,"column":8}}]},"59":{"line":515,"type":"if","locations":[{"start":{"line":515,"column":10},"end":{"line":515,"column":10}},{"start":{"line":515,"column":10},"end":{"line":515,"column":10}}]},"60":{"line":516,"type":"if","locations":[{"start":{"line":516,"column":12},"end":{"line":516,"column":12}},{"start":{"line":516,"column":12},"end":{"line":516,"column":12}}]},"61":{"line":538,"type":"binary-expr","locations":[{"start":{"line":538,"column":17},"end":{"line":538,"column":27}},{"start":{"line":538,"column":31},"end":{"line":538,"column":45}}]},"62":{"line":539,"type":"binary-expr","locations":[{"start":{"line":539,"column":13},"end":{"line":539,"column":25}},{"start":{"line":539,"column":29},"end":{"line":539,"column":31}}]},"63":{"line":541,"type":"if","locations":[{"start":{"line":541,"column":6},"end":{"line":541,"column":6}},{"start":{"line":541,"column":6},"end":{"line":541,"column":6}}]},"64":{"line":541,"type":"binary-expr","locations":[{"start":{"line":541,"column":10},"end":{"line":541,"column":34}},{"start":{"line":541,"column":38},"end":{"line":541,"column":62}}]},"65":{"line":551,"type":"if","locations":[{"start":{"line":551,"column":8},"end":{"line":551,"column":8}},{"start":{"line":551,"column":8},"end":{"line":551,"column":8}}]},"66":{"line":573,"type":"binary-expr","locations":[{"start":{"line":573,"column":17},"end":{"line":573,"column":23}},{"start":{"line":573,"column":27},"end":{"line":573,"column":37}}]},"67":{"line":584,"type":"binary-expr","locations":[{"start":{"line":584,"column":17},"end":{"line":584,"column":23}},{"start":{"line":584,"column":27},"end":{"line":584,"column":37}}]},"68":{"line":587,"type":"if","locations":[{"start":{"line":587,"column":6},"end":{"line":587,"column":6}},{"start":{"line":587,"column":6},"end":{"line":587,"column":6}}]},"69":{"line":642,"type":"binary-expr","locations":[{"start":{"line":642,"column":17},"end":{"line":642,"column":18}},{"start":{"line":642,"column":22},"end":{"line":642,"column":24}}]},"70":{"line":643,"type":"binary-expr","locations":[{"start":{"line":643,"column":15},"end":{"line":643,"column":16}},{"start":{"line":643,"column":20},"end":{"line":643,"column":22}}]},"71":{"line":647,"type":"binary-expr","locations":[{"start":{"line":647,"column":20},"end":{"line":647,"column":33}},{"start":{"line":647,"column":37},"end":{"line":647,"column":45}}]},"72":{"line":653,"type":"if","locations":[{"start":{"line":653,"column":4},"end":{"line":653,"column":4}},{"start":{"line":653,"column":4},"end":{"line":653,"column":4}}]},"73":{"line":653,"type":"binary-expr","locations":[{"start":{"line":653,"column":8},"end":{"line":653,"column":33}},{"start":{"line":653,"column":37},"end":{"line":653,"column":52}}]},"74":{"line":657,"type":"if","locations":[{"start":{"line":657,"column":4},"end":{"line":657,"column":4}},{"start":{"line":657,"column":4},"end":{"line":657,"column":4}}]},"75":{"line":667,"type":"binary-expr","locations":[{"start":{"line":667,"column":15},"end":{"line":667,"column":19}},{"start":{"line":667,"column":23},"end":{"line":667,"column":25}}]},"76":{"line":670,"type":"binary-expr","locations":[{"start":{"line":670,"column":20},"end":{"line":670,"column":33}},{"start":{"line":670,"column":37},"end":{"line":670,"column":45}}]},"77":{"line":679,"type":"if","locations":[{"start":{"line":679,"column":4},"end":{"line":679,"column":4}},{"start":{"line":679,"column":4},"end":{"line":679,"column":4}}]},"78":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":4},"end":{"line":702,"column":4}},{"start":{"line":702,"column":4},"end":{"line":702,"column":4}}]},"79":{"line":712,"type":"if","locations":[{"start":{"line":712,"column":4},"end":{"line":712,"column":4}},{"start":{"line":712,"column":4},"end":{"line":712,"column":4}}]},"80":{"line":726,"type":"if","locations":[{"start":{"line":726,"column":4},"end":{"line":726,"column":4}},{"start":{"line":726,"column":4},"end":{"line":726,"column":4}}]},"81":{"line":729,"type":"if","locations":[{"start":{"line":729,"column":4},"end":{"line":729,"column":4}},{"start":{"line":729,"column":4},"end":{"line":729,"column":4}}]},"82":{"line":733,"type":"if","locations":[{"start":{"line":733,"column":4},"end":{"line":733,"column":4}},{"start":{"line":733,"column":4},"end":{"line":733,"column":4}}]},"83":{"line":740,"type":"if","locations":[{"start":{"line":740,"column":6},"end":{"line":740,"column":6}},{"start":{"line":740,"column":6},"end":{"line":740,"column":6}}]},"84":{"line":750,"type":"if","locations":[{"start":{"line":750,"column":6},"end":{"line":750,"column":6}},{"start":{"line":750,"column":6},"end":{"line":750,"column":6}}]},"85":{"line":751,"type":"binary-expr","locations":[{"start":{"line":751,"column":15},"end":{"line":751,"column":19}},{"start":{"line":751,"column":23},"end":{"line":751,"column":25}}]},"86":{"line":766,"type":"if","locations":[{"start":{"line":766,"column":4},"end":{"line":766,"column":4}},{"start":{"line":766,"column":4},"end":{"line":766,"column":4}}]},"87":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":4},"end":{"line":770,"column":4}},{"start":{"line":770,"column":4},"end":{"line":770,"column":4}}]},"88":{"line":782,"type":"binary-expr","locations":[{"start":{"line":782,"column":18},"end":{"line":782,"column":22}},{"start":{"line":782,"column":26},"end":{"line":782,"column":28}}]},"89":{"line":789,"type":"binary-expr","locations":[{"start":{"line":789,"column":17},"end":{"line":789,"column":31}},{"start":{"line":789,"column":35},"end":{"line":789,"column":64}}]},"90":{"line":794,"type":"if","locations":[{"start":{"line":794,"column":4},"end":{"line":794,"column":4}},{"start":{"line":794,"column":4},"end":{"line":794,"column":4}}]},"91":{"line":796,"type":"if","locations":[{"start":{"line":796,"column":6},"end":{"line":796,"column":6}},{"start":{"line":796,"column":6},"end":{"line":796,"column":6}}]},"92":{"line":804,"type":"if","locations":[{"start":{"line":804,"column":8},"end":{"line":804,"column":8}},{"start":{"line":804,"column":8},"end":{"line":804,"column":8}}]},"93":{"line":827,"type":"if","locations":[{"start":{"line":827,"column":6},"end":{"line":827,"column":6}},{"start":{"line":827,"column":6},"end":{"line":827,"column":6}}]},"94":{"line":835,"type":"if","locations":[{"start":{"line":835,"column":6},"end":{"line":835,"column":6}},{"start":{"line":835,"column":6},"end":{"line":835,"column":6}}]},"95":{"line":861,"type":"binary-expr","locations":[{"start":{"line":861,"column":19},"end":{"line":861,"column":23}},{"start":{"line":861,"column":27},"end":{"line":861,"column":39}},{"start":{"line":861,"column":44},"end":{"line":861,"column":63}}]},"96":{"line":862,"type":"if","locations":[{"start":{"line":862,"column":4},"end":{"line":862,"column":4}},{"start":{"line":862,"column":4},"end":{"line":862,"column":4}}]},"97":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":6},"end":{"line":884,"column":6}},{"start":{"line":884,"column":6},"end":{"line":884,"column":6}}]},"98":{"line":898,"type":"if","locations":[{"start":{"line":898,"column":6},"end":{"line":898,"column":6}},{"start":{"line":898,"column":6},"end":{"line":898,"column":6}}]},"99":{"line":940,"type":"binary-expr","locations":[{"start":{"line":940,"column":15},"end":{"line":940,"column":22}},{"start":{"line":940,"column":26},"end":{"line":940,"column":28}}]},"100":{"line":944,"type":"if","locations":[{"start":{"line":944,"column":4},"end":{"line":944,"column":4}},{"start":{"line":944,"column":4},"end":{"line":944,"column":4}}]},"101":{"line":944,"type":"binary-expr","locations":[{"start":{"line":944,"column":8},"end":{"line":944,"column":22}},{"start":{"line":944,"column":26},"end":{"line":944,"column":49}}]},"102":{"line":961,"type":"if","locations":[{"start":{"line":961,"column":6},"end":{"line":961,"column":6}},{"start":{"line":961,"column":6},"end":{"line":961,"column":6}}]},"103":{"line":985,"type":"if","locations":[{"start":{"line":985,"column":6},"end":{"line":985,"column":6}},{"start":{"line":985,"column":6},"end":{"line":985,"column":6}}]},"104":{"line":985,"type":"binary-expr","locations":[{"start":{"line":985,"column":10},"end":{"line":985,"column":31}},{"start":{"line":985,"column":35},"end":{"line":985,"column":59}},{"start":{"line":986,"column":10},"end":{"line":986,"column":32}}]},"105":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":4},"end":{"line":995,"column":4}},{"start":{"line":995,"column":4},"end":{"line":995,"column":4}}]},"106":{"line":1000,"type":"binary-expr","locations":[{"start":{"line":1000,"column":14},"end":{"line":1000,"column":21}},{"start":{"line":1000,"column":25},"end":{"line":1000,"column":45}}]},"107":{"line":1002,"type":"if","locations":[{"start":{"line":1002,"column":4},"end":{"line":1002,"column":4}},{"start":{"line":1002,"column":4},"end":{"line":1002,"column":4}}]},"108":{"line":1019,"type":"if","locations":[{"start":{"line":1019,"column":2},"end":{"line":1019,"column":2}},{"start":{"line":1019,"column":2},"end":{"line":1019,"column":2}}]},"109":{"line":1026,"type":"binary-expr","locations":[{"start":{"line":1026,"column":17},"end":{"line":1026,"column":24}},{"start":{"line":1026,"column":28},"end":{"line":1026,"column":30}}]},"110":{"line":1027,"type":"binary-expr","locations":[{"start":{"line":1027,"column":17},"end":{"line":1027,"column":53}},{"start":{"line":1027,"column":57},"end":{"line":1027,"column":59}}]},"111":{"line":1029,"type":"binary-expr","locations":[{"start":{"line":1029,"column":22},"end":{"line":1029,"column":32}},{"start":{"line":1029,"column":36},"end":{"line":1029,"column":40}}]},"112":{"line":1053,"type":"if","locations":[{"start":{"line":1053,"column":10},"end":{"line":1053,"column":10}},{"start":{"line":1053,"column":10},"end":{"line":1053,"column":10}}]},"113":{"line":1064,"type":"if","locations":[{"start":{"line":1064,"column":10},"end":{"line":1064,"column":10}},{"start":{"line":1064,"column":10},"end":{"line":1064,"column":10}}]},"114":{"line":1071,"type":"if","locations":[{"start":{"line":1071,"column":10},"end":{"line":1071,"column":10}},{"start":{"line":1071,"column":10},"end":{"line":1071,"column":10}}]},"115":{"line":1075,"type":"if","locations":[{"start":{"line":1075,"column":10},"end":{"line":1075,"column":10}},{"start":{"line":1075,"column":10},"end":{"line":1075,"column":10}}]},"116":{"line":1077,"type":"cond-expr","locations":[{"start":{"line":1077,"column":54},"end":{"line":1077,"column":59}},{"start":{"line":1077,"column":62},"end":{"line":1077,"column":70}}]},"117":{"line":1089,"type":"if","locations":[{"start":{"line":1089,"column":6},"end":{"line":1089,"column":6}},{"start":{"line":1089,"column":6},"end":{"line":1089,"column":6}}]},"118":{"line":1103,"type":"binary-expr","locations":[{"start":{"line":1103,"column":13},"end":{"line":1103,"column":14}},{"start":{"line":1103,"column":18},"end":{"line":1103,"column":20}}]},"119":{"line":1118,"type":"if","locations":[{"start":{"line":1118,"column":4},"end":{"line":1118,"column":4}},{"start":{"line":1118,"column":4},"end":{"line":1118,"column":4}}]},"120":{"line":1118,"type":"binary-expr","locations":[{"start":{"line":1118,"column":8},"end":{"line":1118,"column":21}},{"start":{"line":1118,"column":25},"end":{"line":1118,"column":36}}]},"121":{"line":1122,"type":"if","locations":[{"start":{"line":1122,"column":4},"end":{"line":1122,"column":4}},{"start":{"line":1122,"column":4},"end":{"line":1122,"column":4}}]},"122":{"line":1123,"type":"if","locations":[{"start":{"line":1123,"column":6},"end":{"line":1123,"column":6}},{"start":{"line":1123,"column":6},"end":{"line":1123,"column":6}}]},"123":{"line":1136,"type":"if","locations":[{"start":{"line":1136,"column":4},"end":{"line":1136,"column":4}},{"start":{"line":1136,"column":4},"end":{"line":1136,"column":4}}]},"124":{"line":1148,"type":"binary-expr","locations":[{"start":{"line":1148,"column":14},"end":{"line":1148,"column":18}},{"start":{"line":1148,"column":22},"end":{"line":1148,"column":24}}]}},"code":["/*"," * Geddy JavaScript Web development framework"," * Copyright 2112 Matthew Eernisse (mde@fleegix.org)"," *"," * Licensed under the Apache License, Version 2.0 (the \"License\");"," * you may not use this file except in compliance with the License."," * You may obtain a copy of the License at"," *"," *         http://www.apache.org/licenses/LICENSE-2.0"," *"," * Unless required by applicable law or agreed to in writing, software"," * distributed under the License is distributed on an \"AS IS\" BASIS,"," * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," * See the License for the specific language governing permissions and"," * limitations under the License."," *","*/","","/*","Example model file, would be app/models/user.js:","","var User = function () {","  this.property('login', 'string', {required: true});","  this.property('password', 'string', {required: true});","  this.property('lastName', 'string');","  this.property('firstName', 'string');","","  this.validatesPresent('login');","  this.validatesFormat('login', /[a-z]+/, {message: 'Subdivisions!'});","  this.validatesLength('login', {min: 3});","  this.validatesConfirmed('password', 'confirmPassword');","  this.validatesWithFunction('password',","      function (s) { return s.length > 0; // Could be anything","  });","};","","User.prototype.someMethod = function () {","  // Do some stuff on a User instance","};","","User = model.register('User', User);","*/","","var util = require('util') // Native Node util module","  , model = {}","  , EventEmitter = require('events').EventEmitter","  , utils = require('utilities')","  , config = require('./base_config')","  , adapters = require('./adapters')","  , Query","  , query // Lazy-load query; it depends on model/index","  , association; // Lazy-load query; it depends on model/index","","var _foreignKeyCreators = []","  , _systemProperties = {","      id: true","    , type: true","    , createdAt: true","    , updatedAt: true","    };","","utils.mixin(model, new (function () {","","  this.config = config;","  this.ModelBase = function () {};","  this.adapters = {};","  this.descriptionRegistry = {};","  this.defaultAdapter = null;","","  this.datatypes = null // Lazy-load query; it depends on model/index","  this.validators = require('./validators');","  this.formatters = require('./formatters');","  this.Migration = require('./migration').Migration;","  this.log = function () {};","","  util.inherits(this.ModelBase, EventEmitter);","","  var _createModelItemConstructor = function (def) {","    // Base constructor function for all model items","    var ModelItemConstructor = function (params) {","      var self = this","        , associations = model.descriptionRegistry[def.name].associations;","","      this.type = def.name;","      // Items fetched from an API should have this flag set to true","      this._saved = params._saved || false;","","      // If fetched and instantiated from an API-call, give the","      // instance the appropriate ID -- newly created objects won't","      // have one until saved","      if (params.id) {","        this.id = params.id;","      }","","      this.isValid = function () {","        return !this.errors;","      };","","      /**","        @name ModelBase#save","        @public","        @function","        @description Saves an instance of a Geddy ModelBase","        @param {Object} [opts]","          @param {String} [opts.locale=null] Optional locale for","          localizing error messages from validations","        @param {Function} [callback] Callback function that receives","        the result of the save action -- should be in the format of","        function (err, result) {}","       */","      this.save = function () {","        var args = Array.prototype.slice.call(arguments)","          , m = model[this.type];","        args.unshift(this);","        this._commitAssociationChanges(function (err, data) {","          var cb;","          if (err) {","            cb = args.pop();","            return cb(err);","          }","          m.save.apply(m, args);","        });","      };","","      /**","        @name ModelBase#updateProperties","        @public","        @function","        @description Updates the attributes an instance of a Geddy","        ModelBase, and validate the changes","        @param {Object} params Object-literal with updated values for","        the instance","        the result of the save action -- should be in the format of","        function (err, result) {}","        @param {Object} [opts]","          @param {String} [opts.locale=null] Optional locale for","          localizing error messages from validations","       */","      this.updateProperties = function (params, opts) {","        model.updateItem(this, params, opts || {});","      };","      // TODO: Deprecate?","      this.updateAttributes = this.updateProperties;","      /**","        @name ModelBase#toJSON","        @public","        @function","        @description Returns an object with just the data properties","        defined by its model","       */","      this.toJSON = function (options) {","        var self = this","          , opts = options || {}","          , whitelist = Object.keys(_systemProperties)","          , obj = {}","          , reg = model.descriptionRegistry[this.type]","          , properties = reg.properties","          , associations = reg.associations || {}","          , assns = {","              hasMany: 'plural'","            , hasOne: 'singular'","            , belongsTo: 'singular'","            }","          , assnList","          , assnName;","","        whitelist = whitelist.concat(opts.whitelist || [])","","        // First, simple defined properties","        for (var p in properties) {","          obj[p] = this[p];","        }","","        // Assocations","        for (var k in assns) {","          assnList = associations[k];","          for (var p in assnList) {","            assnName = utils.string.getInflection(p, 'property', assns[k]);","            if (this[assnName]) {","              obj[assnName] = this[assnName];","            }","          }","        }","","        // Any non-defined, but whitelisted properties","        whitelist.forEach(function (p) {","          if (self[p]) {","            obj[p] = self[p];","          }","        });","","        return obj;","      };","","      this.toData = this.toJSON;","      this.toObj = this.toJSON;","","      this.toString = function () {","        var obj = {}","          , reg = model.descriptionRegistry[this.type]","          , properties = reg.properties","          , formatter;","","        obj.id = this.id;","        obj.type = this.type;","","        for (var p in properties) {","          formatter = model.formatters[properties[p].datatype];","          obj[p] = typeof formatter == 'function' ?","              formatter(this[p]) : this[p];","        }","","        return JSON.stringify(obj);","      };","","","      this._getAssociation = association._getAssociation;","      this._createAssociation = association._createAssociation;","      this._removeAssociation = association._removeAssociation;","      this._commitAssociationChanges = association._commitAssociationChanges;","","      /**","        @name ModelBase#clone","        @private","        @function","        @description Creates a 'deep copy' of the model object","      */","      this.clone = function () {","        var itemClone;","","        // clone the item","        itemClone = model[this.type].create(utils.enhance({}, this.toJSON(), {id:this.id}));","        itemClone.associations = utils.enhance({}, this.associations);","        itemClone._saved = this._saved;","","        return itemClone;","      };","","      // Intstance-methods for associations","      // get..., set.../add..., remove...","      ['hasMany', 'hasOne', 'belongsTo'].forEach(function (k) {","        var assns","          , createMethod = function (type, keyName, assnType) {","              return function () {","                var args = Array.prototype.slice.call(arguments);","                args.unshift(assnType);","                args.unshift(keyName);","                self[type + 'Association'].apply(self, args);","              };","            };","        if ((assns = associations[k])) {","          for (var assnName in assns) {","            (function (assnName) {","              var methodName = k == 'hasMany' ?","                      utils.inflection.pluralize(assnName) : assnName","                , keyForCreate = k == 'hasMany' ? 'add' : 'set';","","              // get can be singular or plural, depending on hasMany/hasOne","              // this.getBooks({}, {}, function () {}); =>","              // this._getAssociation('Book', 'hasMany', {}, {}, function () {});","              self['get' + methodName] = createMethod('_get', assnName, k);","","              // add/set is always singular, just use assnName for method","              // this.addBook(book); =>","              // this._createAssociation('Book', 'hasMany', book);","              self[keyForCreate + assnName] = createMethod('_create', assnName, k);","","              // this.removeBook(book); =>","              // this._removeAssociation('Book', 'hasMany', book);","              self['remove' + assnName] = createMethod('_remove', assnName, k);","            })(assnName);","          }","        }","      });","","    };","","    return ModelItemConstructor;","  };","","  var _createStaticMethodsMixin = function (name) {","    var obj = {};","","    /**","      @name ModelBase.create","      @public","      @static","      @function","      @description Creates an instance of a Geddy ModelBase, validating","      the input parameters","      @param {Object} params Object-literal with updated values for","      the instance","      the result of the save action -- should be in the format of","      function (err, result) {}","      @param {Object} [opts]","        @param {String} [opts.locale=null] Optional locale for","        localizing error messages from validations","     */","    obj.create = function () {","      var args = Array.prototype.slice.call(arguments);","      args.unshift(name);","      return model.createItem.apply(model, args);","    };","","    obj.getAdapter = function() {","      return model.getAdapterForModel(name);","    };","","    // Returns the first item found","    obj.first = function () {","      var args = Array.prototype.slice.call(arguments)","        , callback = args.pop()","        , query = args.shift() || {}","        , opts = args.shift() || {}","        , includeOpts;","","      if (typeof query == 'string' || typeof query == 'number') {","        query = {id: query};","      }","","      if (!opts.id) {","        opts.limit = 1;","        // Can't use simple LIMIT with eager-fetch of associations","        // Do an additional query with LIMIT to fetch the first object,","        // then the normal query by ID with associations","        if (opts.includes) {","          includeOpts = utils.mixin({}, opts);","          delete includeOpts.includes;","          return obj.all(query, includeOpts, function (err, data) {","            if (err) {","              return callback(err, null);","            }","            if (data && data.id) {","              delete opts.limit;","              // TODO: If queries eventually return EventEmitters,","              // need to proxy the events upward to the wrapping query","              obj.all({id: data.id}, opts, function (err, data) {","                if (err) {","                  return callback(err, null);","                }","                if (data && data.length) {","                  callback(null, data[0]);","                }","                else {","                  callback(null, null);","                }","              });","            }","            else {","              callback(null, null);","            }","          });","        }","      }","","      return obj.all(query, opts, callback);","    };","","    obj.count = function() {","      var args = Array.prototype.slice.call(arguments)","        , callback = args.pop() || function () {}","        , query = args.shift() || {}","        , opts = args.shift() || {};","      opts.count = true;","      if (opts.includes) {","        throw new Error('`count` cannot be used with eager fetch of associations.');","      }","      return obj.all.apply(obj, [query, opts, callback]);","    };","","    // TODO: Deprecate","    obj.load = obj.first;","","    obj.all = function () {","      var args = Array.prototype.slice.call(arguments)","      // Important: do not stub out a callback -- if a callback is","      // defined, all results of the query will be buffered","        , callback = typeof args[args.length - 1] == 'function' ?","              args.pop() : null","        , query = args.shift() || {}","        , opts = args.shift() || {}","        , adapt;","","      opts.scenario = opts.scenario || 'reify';","","      query = new Query(model[name], query, opts);","","      adapt = model.getAdapterForModel(name);","      if (opts.includes && adapt.type != 'sql') {","        throw new Error('Only SQL adapters support ' +","            'the \"includes\" option for queries.');","      }","","      return adapt.load.apply(adapt, [query, callback]);","    };","","    obj.save = function () {","      var args = Array.prototype.slice.call(arguments)","        , beforeSaveArgs = args.slice()","        , emitFunc = function () {","            model[name].emit.apply(model[name], beforeSaveArgs);","          }","        , data = args.shift()","        , callback = args.pop() || function () {}","        , opts = args.shift() || {}","        , adapt","        , saved","        , item","        , isCollection;","","      beforeSaveArgs.unshift('beforeSave');","","      adapt = model.getAdapterForModel(name);","","      isCollection = Array.isArray(data);","      // Collection","      // Bulk save only works on new items -- existing item should only","      // be when doing instance.save because update takes only one set","      // of edited props to be applied to all items","      if (isCollection) {","","        emitFunc();","","        saved = false;","        for (var i = 0, ii = data.length; i < ii; i++) {","          item = data[i];","          if (item._saved) {","            return callback(new Error('A bulk-save can only have new ' +","                'items in it.'), null);","          }","          // Bail out if any instance isn't valid and no force flag","          if (!(item.isValid() || opts.force)) {","            return callback(item.errors, null);","          }","        }","      }","      // Single item","      else {","","        saved = data._saved;","        // Bail out if instance isn't valid","        if (!(data.isValid() || opts.force)) {","          return callback(data.errors, null);","        }","        // Already existing instance, use update","        if (saved) {","          if (model.config.useTimestamps) {","            data.updatedAt = new Date();","          }","          // Re-route to update","          return obj.update.apply(obj, [data, {id: data.id},","              opts, callback]);","        }","","        if (typeof data.beforeSave === 'function') {","          data.beforeSave();","        }","        data.emit('beforeSave');","        emitFunc();","      }","","      return adapt.insert.apply(adapt, [data, opts, function (err, res) {","        if (!err) {","          model[name].emit('save', res);","          if (!isCollection) {","            if (typeof data.afterSave === 'function') {","              data.afterSave();","            }","","            data.emit('save');","          }","        }","        callback(err, res);","      }]);","    };","","    obj.update = function () {","      var args = Array.prototype.slice.call(arguments)","        , data","        , callback","        , query","        , opts","        , adapt;","","      args.unshift('beforeUpdate');","      model[name].emit.apply(model[name], args);","      args.shift();","","      data = args.shift();","      callback = args.pop() || function () {};","      query = args.shift() || {};","      opts = args.shift() || {};","","      if (typeof query == 'string' || typeof query == 'number') {","        query = {id: query};","      }","","      // Data may by just a bag or params, or an actual instance","      if (data instanceof model.ModelBase) {","        // Bail out if instance isn't valid","        if (!(data.isValid() || opts.force)) {","          return callback(data.errors, null);","        }","        data.emit('beforeUpdate');","      }","","      query = new Query(model[name], query, opts);","","      adapt = model.getAdapterForModel(name);","","      return adapt.update.apply(adapt, [data, query, function (err, res) {","        if (!err) {","          model[name].emit('update', res);","          // Data may by just a bag or params, or an actual instance","          if (typeof data.emit == 'function') {","            if (typeof data.afterUpdate === 'function') {","              data.afterUpdate();","            }","            data.emit('update');","          }","        }","        callback(err, res);","      }]);","    };","","    obj.remove = function () {","      var args = Array.prototype.slice.call(arguments)","        , query","        , callback","        , opts","        , adapt;","","      args.unshift('beforeRemove');","      model[name].emit.apply(model[name], args);","      args.shift();","","      query = args.shift();","      callback = args.pop() || function () {};","      opts = args.shift() || {};","","      if (typeof query == 'string' || typeof query == 'number') {","        query = {id: query};","        opts.limit = 1;","      }","","      query = new Query(model[name], query, opts);","","      adapt = model.getAdapterForModel(name);","","      return adapt.remove.apply(adapt, [query, function (err, res) {","        if (!err) {","          model[name].emit('remove', res);","        }","        callback(err, res);","      }]);","    };","","    obj.getPropertyNames = function () {","      var reg = model.descriptionRegistry[name]","        , properties = reg.properties;","      return Object.keys(properties);","    };","","    obj.modelName = name;","","    return obj;","  };","","  this.clearDefinitions = function (defs) {","    var self = this;","    defs.forEach(function (m) {","      // Prefer 'name', accept older 'ctorName'","      var name = m.name || m.ctorName;","      // Registration may have happened in the model definition file","      // if using the old templates. Don't re-register","      delete self[name];","    });","  };","","  this.registerDefinitions = function (defs) {","    var self = this;","    defs.forEach(function (m) {","      // Prefer 'name', accept older 'ctorName'","      var name = m.name || m.ctorName;","      // Registration may have happened in the model definition file","      // if using the old templates. Don't re-register","      if (!self[name]) {","        self.registerDefinition(name, m.ctor);","      }","    });","    this.createForeignKeys();","  };","","  // Alias to single-def registration method","  this.register = function (name, ModelDefinition) {","    return this.registerDefinition(name, ModelDefinition);","  };","","  this.registerDefinition = function (name, ModelDefinition) {","    var origProto = ModelDefinition.prototype","      , defined","      , ModelCtor;","","    // Create the place to store the metadata about the model structure","    // to use to do validations, etc. when constructing","    model.descriptionRegistry[name] = new model.ModelDescription(name);","    // Execute all the definition methods to create that metadata","    ModelDefinition.prototype = new model.ModelDefinitionBase(name);","    defined = new ModelDefinition();","","    // Create the constructor function to use when calling static","    // ModelCtor.create. Gives them the proper instanceof value,","    // and .valid, etc. instance-methods.","    ModelCtor = _createModelItemConstructor(defined);","","    // Mix in the static methods like .create and .load","    utils.mixin(ModelCtor, _createStaticMethodsMixin(name));","    // Mix on the statics on the definition 'ctor' onto the","    // instantiated ModelDefinition instance","    utils.mixin(defined, ModelDefinition);","    // Mix ModelDefinition instance properties as static properties","    // for the model item 'ctor'","    utils.mixin(ModelCtor, defined);","    // Same with EventEmitter methods","    utils.enhance(ModelCtor, new EventEmitter());","","    // Mix any functions defined directly in the model-item definition","    // 'constructor' into the original prototype, and set it as the prototype of the","    // actual constructor","    utils.mixin(origProto, defined);","","    ModelCtor.prototype = new model.ModelBase();","    // Preserve any inherited shit from the definition proto","    utils.enhance(ModelCtor.prototype, origProto);","","    model[name] = ModelCtor;","","    return ModelCtor;","  };","","  this.createItem = function (name, p, o) {","    var params = p || {}","      , opts = o || {}","      , item = new model[name](params);","","    // Default to the 'create' scenario","    opts.scenario = opts.scenario || 'create'","","    model[name].emit('beforeCreate', p, o);","","    this.validateAndUpdateFromParams(item, params, opts);","","    if (this.config.useTimestamps && !item.createdAt) {","      item.createdAt = new Date();","    }","","    if (typeof item.afterCreate === 'function') {","      item.afterCreate();","    }","    model[name].emit('create', item);","    return item;","  };","","  this.updateItem = function (item, params, opts) {","    var data = {}","      , name = item.type","      , opts = opts || {};","","    // Default to the 'update' scenario","    opts.scenario = opts.scenario || 'update'","","    model[name].emit('beforeUpdateProperties', item, params, opts);","    item.emit('beforeUpdateProperties');","","    utils.mixin(data, item);","    utils.mixin(data, params);","    this.validateAndUpdateFromParams(item, data, opts);","","    if (typeof item.afterUpdateProperties === 'function') {","      item.afterUpdateProperties();","    }","","    model[name].emit('updateProperties', item);","    item.emit('updateProperties');","","    return item;","  };","","  this.validateAndUpdateFromParams = function (item, passedParams, opts) {","    var params","      , name = item.type","      , type = model.descriptionRegistry[name]","      , properties = type.properties","      , validated = null","      , errs = null","      , camelizedKey","      , skip = opts.skip","      , scenario = opts.scenario","      , skipKeys = {}","      , val;","","    if (typeof item.beforeValidate === 'function') {","      item.beforeValidate(passedParams);","    }","    item.emit('beforeValidate')","    model[name].emit('beforeValidate', item, passedParams);","","    // May be revalidating, clear errors","    delete item.errors;","","    // Convert snake_case names in params to camelCase","    if (this.config.forceCamel) {","      params = {};","      for (var p in passedParams) {","        // Allow leading underscores in the keys for pseudo-privates","        camelizedKey = utils.string.camelize(p, {leadingUnderscore: true});","        params[camelizedKey] = passedParams[p];","      }","    }","    else {","      params = passedParams;","    }","","    // User-input should never contain these -- but we still want","    // to validate them to make sure the format didn't get fucked up","    if (typeof item.createdAt != 'undefined') {","      params.createdAt = item.createdAt;","    }","    if (typeof item.updatedAt != 'undefined') {","      params.updatedAt = item.updatedAt;","    }","","    if (skip) {","      for (var i in skip) {","        skipKeys[skip[i]] = true;","      }","    }","","    for (var p in properties) {","      if (skipKeys[p]) {","        continue;","      }","","      validated = this.validateProperty(properties[p], params, {scenario: scenario});","      // If there are any failed validations, the errs param","      // contains an Object literal keyed by field name, and the","      // error message for the first failed validation for that","      // property","      // Use raw, invalid value on the instance","      if (validated.err) {","        errs = errs || {};","        errs[p] = validated.err;","        item[p] = params[p];","      }","      // Otherwise add the type-coerced, valid value to the return item","      else {","        item[p] = validated.val;","      }","    }","","    // Should never have been incuded in user input, so safe to","    // rm these from the params","    delete params.createdAt;","    delete params.updatedAt;","","    if (errs) {","      item.errors = errs;","    }","","    if (typeof item.afterValidate === 'function') {","      item.afterValidate();","    }","","    item.emit('validate')","    model[name].emit('validate', item);","","    return item;","  };","","  this.validateProperty = function (prop, params, opts) {","","    var options = opts || {}","      , name = prop.name","      , val = params[name]","      , datatypeName = prop.datatype.toLowerCase()","      , datatypeValidator = this.datatypes[datatypeName].validate","      , result","      , scenario = opts.scenario","      , locale = options.locale || utils.i18n.getDefaultLocale();","","    // Validate for the base datatype only if there actually is a value --","    // e.g., undefined will fail the validation for Number, even if the","    // field is optional","    if (!utils.isEmpty(val)) {","      // 'Any' datatype","      if (prop.datatype == '*') {","        result = {","          val: val","        };","      }","      // Specific datatype -- perform validation/type-coercion","      else {","        result = datatypeValidator(name, val, locale);","        if (result.err) {","          return {","            err: result.err,","            val: null","          };","        }","      }","      // Value may have been modified in the datatype check -- e.g.,","      // 'false' changed to false, '8.0' changed to 8, '2112' changed to","      // 2112, etc.","      val = result.val;","    }","","    // Now go through all the base validations for this property","    var validations = prop.validations","      , validator","      , err","      , rule;","","    for (var p in validations) {","      validator = model.validators[p]","      rule = utils.mixin({}, validations[p], {scenario: opts.scenario});","","      if (typeof validator != 'function') {","        throw new Error(p + ' is not a valid validator');","      }","","      err = validator(name, val, params, rule, locale);","      // If there's an error for a validation, don't bother","      // trying to continue with more validations -- just return","      // this first error message","      if (err) {","        return {","          err: err,","          val: null","        };","      }","    }","","    // If there weren't any errors, return the value for this property","    // and no error","    return {","      err: null,","      val: val","    };","  };","","  this.createAdapter = function (name, config) {","    return adapters.create(name, config);","  };","","  this.getAdapterInfo = function (name) {","    return adapters.getAdapterInfo(name);","  };","","  this.getAdapterForModel = function (modelName) {","    var ctor = this[modelName]","      , adapter = (ctor && ctor.adapter) || this.defaultAdapter;","    if (!adapter) {","      throw new Error('No adapter found for ' + modelName +","          '. Please define one with `setAdapter`, or define a default' +","          ' adapter with `model.setDefaultAdapter`.');","    }","    return adapter;","  };","","  this.setDefaultAdapter = function (name, config) {","    var adapter = adapters.create(name, config);","    this.defaultAdapter = adapter;","  };","","  // FIXME: Move this into an associations lib","  this.getAssociation = function (main, assn) {","    var mainName = utils.string.getInflection(main, 'constructor', 'singular')","      , assnName = utils.string.getInflection(assn, 'constructor', 'singular')","      , assn","      , assnItem;","    assn = this.descriptionRegistry[mainName].associations;","    for (var p in assn) {","      assnItem = assn[p][assnName];","      if (assnItem) {","        return assnItem;","      }","    }","  };","","  this.getAssociationType = function (main, assn) {","    var mainName = utils.string.getInflection(main, 'constructor', 'singular')","      , assnName = utils.string.getInflection(assn, 'constructor', 'singular')","      , assn","      , assnItem;","    assn = this.descriptionRegistry[mainName].associations;","    for (var p in assn) {","      assnItem = assn[p][assnName];","      if (assnItem) {","        return p;","      }","    }","  };","","  this.getModelByName = function (name) {","    return this[name];","  };","","  this.createForeignKeys = function () {","    var creator;","    while((creator = _foreignKeyCreators.pop())) {","      creator();","    }","  };","","  this.setLocalRequireError = function (msg) {","    this.localRequireError = msg;","  };","","})());","","model.ModelDefinitionBase = function (name) {","  var self = this","    , reg = model.descriptionRegistry","    , _createValidator = function (p) {","        return function () {","          var args = Array.prototype.slice.call(arguments);","          args.unshift(p);","          return self.validates.apply(self, args);","        };","      };","","  this.name = name;","","  this.setAdapter = function (name, config) {","    var adapter = adapters.create(name, config);","    this.adapter = adapter;","  };","","  this.property = function (name, datatype, options) {","    var opts = options || {};","","    // Don't allow users to define properties with the same","    // name as magical system properties","    if (!opts.isSystem && _systemProperties[name]) {","      throw new Error('You cannot define the property \"' + name +","          '\" on a model, as it\\'s a reserved system-property name.');","    }","","    reg[this.name].properties[name] =","      new model.PropertyDescription(name, datatype, opts);","  };","","  this.defineProperties = function (obj) {","    var type","      , options","      , property;","","    for (var name in obj) {","      property = obj[name];","","      if (typeof property === 'string') {","        type = property;","        options = {};","      }","      else {","        type = property.type;","        options = property;","      }","","      this.property(name, type, options);","    }","  }","","  // (condition, name, [reference], [opts])","  this.validates = function () {","    var args = Array.prototype.slice.call(arguments)","      , arg","      , condition = args.shift()","      , name = args.shift()","      , reference","      , opts = {};","    while ((arg = args.pop())) {","      // Regex for validatesFormat or function for validatesWithFunction","      // or string param name for validatesConfirmed","      if (arg instanceof RegExp || typeof arg == 'function' ||","          typeof arg == 'string') {","        reference = arg;","      }","      else {","        opts = utils.mixin(opts, arg);","      }","    }","","    // Old API allows passing simple number to validatesLength","    if (!isNaN(opts)) {","      opts = {is: opts};","    }","","    // Default to 'create' and 'update' only for scenarios","    opts.on = opts.on || ['create', 'update'];","","    if (typeof reg[this.name].properties[name] === 'undefined') {","      throw new Error('Validation cannot be added for \"' + name +","                      '\": property does not exist on the ' + this.name +","                      ' model.');","    }","","    reg[this.name].properties[name].validations[condition] =","        new model.ValidationDescription(condition, reference, opts);","  };","","  // For each of the validators, create a validatesFooBar from","  // validates('fooBar' ...","  for (var p in model.validators) {","    this['validates' + utils.string.capitalize(p)] = _createValidator(p);","  }","","  // Add the base model properties -- these should not be handled by user input","  if (model.config.useTimestamps) {","    this.property('createdAt', 'datetime', {isSystem: true});","    this.property('updatedAt', 'datetime', {isSystem: true});","  }","","  ['hasMany', 'hasOne', 'belongsTo'].forEach(function (assnKey) {","    self[assnKey] = function (name, options) {","      var opts = options || {}","        , assn = reg[self.name].associations[assnKey] || {}","        , assnName = name","        , modelName = opts.model || name;","","      // Normalize inflection; we don't care which they use","      assnName = utils.string.getInflection(assnName, 'constructor', 'singular');","      modelName = utils.string.getInflection(modelName, 'constructor', 'singular');","","      assn[assnName] = {","        name: assnName","      , model: modelName","      , through: opts.through","      , type: assnKey","      };","","      reg[self.name].associations[assnKey] = assn;","","      // Set up foreign keys","      var createForeignKey = function (assnName) {","        return function () {","          var ownerModelName","            , ownedModelName","            , idKey","            , datatype","            , def;","","          if (assnKey == 'belongsTo') {","            ownerModelName = modelName;","            ownedModelName = self.name;","            idKey = modelName;","          }","          else {","            ownerModelName = self.name;","            ownedModelName = modelName;","            idKey = self.name;","          }","","          if (assnName == modelName) {","            idKey = utils.string.decapitalize(idKey) + 'Id'","          }","          else {","            idKey = utils.string.decapitalize(assnName) + idKey  + 'Id'","          }","","          if (!reg[ownedModelName]) {","            throw new Error('Model ' + ownedModelName + ' does not exist.');","          }","","          if (!reg[ownedModelName].properties[idKey]) {","            def = model[ownerModelName];","            datatype = model.config.autoIncrementId ? 'int' : 'string';","","            reg[ownedModelName].properties[idKey] =","              new model.PropertyDescription(idKey, datatype);","          }","        }","      };","","      // Set up foreign keys except in the case of virtual 'throughs'","      // FIXME: Hack, let other models get defined first","      // Should probably listen for an event that signals","      // base models are set up","      if (!opts.through) {","        _foreignKeyCreators.push(createForeignKey(assnName));","      }","    };","  });","};","","model.ModelDescription = function (name) {","  this.name = name;","  this.properties = {};","  this.associations = {};","};","","model.PropertyDescription = function (name, datatype, o) {","  var opts = o || {}","    , validations = {}","    , validationOpts = utils.mixin({}, opts);","","  delete validationOpts.required;","  delete validationOpts.length;","  delete validationOpts.format;","","  this.name = name;","  this.datatype = datatype;","  this.options = opts;","","  // Creates results similar to `this.validates`, above in ModelDefinitionBase","  // Would be great to remove the duplication of logic","  for (var p in opts) {","    if (opts.required || opts.length) {","      validations.present =","          new model.ValidationDescription('present', null, validationOpts);","    }","    if (opts.length) {","      if (typeof opts.length == 'object') {","      // {min: 1, max: 2} or {is: 3}","      validations.length =","          new model.ValidationDescription('length', null,","              utils.mixin(opts.length, validationOpts));","      }","      // 1 or '1'","      else {","      validations.length =","          new model.ValidationDescription('length', null,","              utils.mixin({is: opts.length}, validationOpts));","      }","    }","    if (opts.format) {","      validations.format =","          new model.ValidationDescription('length', opts.format,","              validationOpts);","    }","  }","  this.validations = validations;","};","","model.ValidationDescription = function (type, reference, opts) {","  this.type = type;","  this.reference = reference;","  this.opts = opts || {};","};","","module.exports = model;","","// Load last, these depend on index.js","Query = require('./query/query').Query;","model.datatypes = require('./datatypes');","association = require('./association');","",""],"l":{"44":1,"54":1,"62":1,"64":1,"65":1,"66":1,"67":1,"68":1,"70":1,"71":1,"72":1,"73":1,"74":1,"76":1,"78":1,"80":0,"81":0,"84":0,"86":0,"91":0,"92":0,"95":0,"96":0,"111":0,"112":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"121":0,"139":0,"140":0,"143":0,"151":0,"152":0,"167":0,"170":0,"171":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"186":0,"187":0,"188":0,"192":0,"195":0,"196":0,"198":0,"199":0,"204":0,"205":0,"207":0,"208":0,"209":0,"213":0,"217":0,"218":0,"219":0,"220":0,"228":0,"229":0,"232":0,"233":0,"234":0,"236":0,"241":0,"242":0,"244":0,"245":0,"246":0,"247":0,"248":0,"251":0,"252":0,"253":0,"254":0,"261":0,"266":0,"270":0,"278":0,"281":1,"282":0,"299":0,"300":0,"301":0,"302":0,"305":0,"306":0,"310":0,"311":0,"317":0,"318":0,"321":0,"322":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"333":0,"334":0,"337":0,"338":0,"339":0,"341":0,"342":0,"345":0,"350":0,"356":0,"359":0,"360":0,"364":0,"365":0,"366":0,"368":0,"372":0,"374":0,"375":0,"384":0,"386":0,"388":0,"389":0,"390":0,"394":0,"397":0,"398":0,"401":0,"411":0,"413":0,"415":0,"420":0,"422":0,"424":0,"425":0,"426":0,"427":0,"428":0,"432":0,"433":0,"440":0,"442":0,"443":0,"446":0,"447":0,"448":0,"451":0,"455":0,"456":0,"458":0,"459":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"470":0,"473":0,"477":0,"478":0,"485":0,"486":0,"487":0,"489":0,"490":0,"491":0,"492":0,"494":0,"495":0,"499":0,"501":0,"502":0,"504":0,"507":0,"509":0,"511":0,"512":0,"513":0,"515":0,"516":0,"517":0,"519":0,"522":0,"526":0,"527":0,"533":0,"534":0,"535":0,"537":0,"538":0,"539":0,"541":0,"542":0,"543":0,"546":0,"548":0,"550":0,"551":0,"552":0,"554":0,"558":0,"559":0,"561":0,"564":0,"566":0,"569":1,"570":0,"571":0,"573":0,"576":0,"580":1,"581":0,"582":0,"584":0,"587":0,"588":0,"591":0,"595":1,"596":0,"599":1,"600":0,"606":0,"608":0,"609":0,"614":0,"617":0,"620":0,"623":0,"625":0,"630":0,"632":0,"634":0,"636":0,"638":0,"641":1,"642":0,"647":0,"649":0,"651":0,"653":0,"654":0,"657":0,"658":0,"660":0,"661":0,"664":1,"665":0,"670":0,"672":0,"673":0,"675":0,"676":0,"677":0,"679":0,"680":0,"683":0,"684":0,"686":0,"689":1,"690":0,"702":0,"703":0,"705":0,"706":0,"709":0,"712":0,"713":0,"714":0,"716":0,"717":0,"721":0,"726":0,"727":0,"729":0,"730":0,"733":0,"734":0,"735":0,"739":0,"740":0,"741":0,"744":0,"750":0,"751":0,"752":0,"753":0,"757":0,"763":0,"764":0,"766":0,"767":0,"770":0,"771":0,"774":0,"775":0,"777":0,"780":1,"782":0,"794":0,"796":0,"797":0,"803":0,"804":0,"805":0,"814":0,"818":0,"823":0,"824":0,"825":0,"827":0,"828":0,"831":0,"835":0,"836":0,"845":0,"851":1,"852":0,"855":1,"856":0,"859":1,"860":0,"862":0,"863":0,"867":0,"870":1,"871":0,"872":0,"876":1,"877":0,"881":0,"882":0,"883":0,"884":0,"885":0,"890":1,"891":0,"895":0,"896":0,"897":0,"898":0,"899":0,"904":1,"905":0,"908":1,"909":0,"910":0,"911":0,"915":1,"916":0,"921":1,"922":0,"925":0,"926":0,"927":0,"928":0,"932":0,"934":0,"935":0,"936":0,"939":0,"940":0,"944":0,"945":0,"949":0,"953":0,"954":0,"958":0,"959":0,"961":0,"962":0,"963":0,"966":0,"967":0,"970":0,"975":0,"976":0,"982":0,"985":0,"987":0,"990":0,"995":0,"996":0,"1000":0,"1002":0,"1003":0,"1008":0,"1014":0,"1015":0,"1019":0,"1020":0,"1021":0,"1024":0,"1025":0,"1026":0,"1032":0,"1033":0,"1035":0,"1042":0,"1045":0,"1046":0,"1047":0,"1053":0,"1054":0,"1055":0,"1056":0,"1059":0,"1060":0,"1061":0,"1064":0,"1065":0,"1068":0,"1071":0,"1072":0,"1075":0,"1076":0,"1077":0,"1079":0,"1089":0,"1090":0,"1096":1,"1097":0,"1098":0,"1099":0,"1102":1,"1103":0,"1107":0,"1108":0,"1109":0,"1111":0,"1112":0,"1113":0,"1117":0,"1118":0,"1119":0,"1122":0,"1123":0,"1125":0,"1131":0,"1136":0,"1137":0,"1142":0,"1145":1,"1146":0,"1147":0,"1148":0,"1151":1,"1154":1,"1155":1,"1156":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/base_config.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/base_config.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":8,"column":2}},"2":{"start":{"line":10,"column":0},"end":{"line":10,"column":24}}},"branchMap":{},"code":["","var config = {","  useTimestamps: true",", useUTC: true",", forceCamel: true",", autoIncrementId: false",", defaultAdapter: null","};","","module.exports = config;",""],"l":{"2":1,"10":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/adapters/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/adapters/index.js","s":{"1":1,"2":1,"3":1,"4":1,"5":8,"6":1,"7":1,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":69,"loc":{"start":{"line":69,"column":16},"end":{"line":69,"column":28}}},"2":{"name":"(anonymous_2)","line":71,"loc":{"start":{"line":71,"column":24},"end":{"line":71,"column":43}}},"3":{"name":"(anonymous_3)","line":77,"loc":{"start":{"line":77,"column":16},"end":{"line":77,"column":40}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":6,"column":11}},"2":{"start":{"line":8,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":22,"column":0},"end":{"line":63,"column":2}},"4":{"start":{"line":65,"column":0},"end":{"line":67,"column":1}},"5":{"start":{"line":66,"column":2},"end":{"line":66,"column":24}},"6":{"start":{"line":69,"column":0},"end":{"line":92,"column":5}},"7":{"start":{"line":71,"column":2},"end":{"line":75,"column":4}},"8":{"start":{"line":72,"column":4},"end":{"line":73,"column":39}},"9":{"start":{"line":74,"column":4},"end":{"line":74,"column":27}},"10":{"start":{"line":77,"column":2},"end":{"line":90,"column":4}},"11":{"start":{"line":78,"column":4},"end":{"line":80,"column":13}},"12":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"13":{"start":{"line":83,"column":6},"end":{"line":83,"column":64}},"14":{"start":{"line":86,"column":4},"end":{"line":86,"column":46}},"15":{"start":{"line":87,"column":4},"end":{"line":87,"column":37}},"16":{"start":{"line":89,"column":4},"end":{"line":89,"column":34}},"17":{"start":{"line":94,"column":0},"end":{"line":94,"column":26}}},"branchMap":{"1":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":11},"end":{"line":74,"column":18}},{"start":{"line":74,"column":22},"end":{"line":74,"column":26}}]},"2":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"3":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":26}},{"start":{"line":89,"column":30},"end":{"line":89,"column":32}}]}},"code":["","var adapters","  , path = require('path')","  , _aliases","  , _adapters","  , _paths;","","_aliases = {","  postgres: 'postgres'",", pg: 'postgres'",", postgresql: 'postgres'",", mysql: 'mysql'",", sqlite: 'sqlite'",", riak: 'riak'",", mongo: 'mongo'",", mongodb: 'mongo'",", memory: 'memory'",", filesystem: 'filesystem'",", level: 'level'","};","","_adapters = {","  postgres: {","    path: 'sql/postgres'","  , lib: 'pg'","  , type: 'sql'","  }",", mysql: {","    path: 'sql/mysql'","  , lib: 'mysql'","  , type: 'sql'","  }",", sqlite: {","    path: 'sql/sqlite'","  , lib: 'sqlite3'","  , type: 'sql'","  }",", riak: {","    path: 'riak/index'","  , lib: null","  , type: 'nosql'","  }",", mongo: {","    path: 'mongo/index'","  , lib: 'mongodb'","  , type: 'nosql'","  }",", memory: {","    path: 'memory/index'","  , lib: null","  , type: 'nosql'","  }",", filesystem: {","    path: 'filesystem/index'","  , lib: null","  , type: 'nosql'","  }",", level: {","    path: 'level/index'","  , lib: 'level'","  , type: 'nosql'","  }","};","","for (var p in _adapters) {","  _adapters[p].name = p;","}","","adapters = new (function () {","","  this.getAdapterInfo = function (adapter) {","    var canonical = _aliases[adapter]","      , adapter = _adapters[canonical];","    return adapter || null;","  };","","  this.create = function (name, config) {","    var info = this.getAdapterInfo(name)","      , ctorPath","      , ctor;","","    if (!info) {","      throw new Error('\"' + name + '\" is not a valid adapter.');","    }","","    ctorPath = path.join(__dirname, info.path)","    ctor = require(ctorPath).Adapter;","","    return new ctor(config || {});","  };","","})();","","module.exports = adapters;",""],"l":{"2":1,"8":1,"22":1,"65":1,"66":8,"69":1,"71":1,"72":0,"74":0,"77":1,"78":0,"82":0,"83":0,"86":0,"87":0,"89":0,"94":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/validators.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/validators.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":6,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":6,"70":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":6,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":37,"loc":{"start":{"line":37,"column":11},"end":{"line":37,"column":54}}},"2":{"name":"(anonymous_2)","line":47,"loc":{"start":{"line":47,"column":10},"end":{"line":47,"column":53}}},"3":{"name":"(anonymous_3)","line":57,"loc":{"start":{"line":57,"column":13},"end":{"line":57,"column":56}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":10},"end":{"line":69,"column":53}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":10},"end":{"line":79,"column":53}}},"6":{"name":"(anonymous_6)","line":142,"loc":{"start":{"line":142,"column":16},"end":{"line":142,"column":59}}},"7":{"name":"(anonymous_7)","line":164,"loc":{"start":{"line":164,"column":33},"end":{"line":164,"column":58}}},"8":{"name":"(anonymous_8)","line":165,"loc":{"start":{"line":165,"column":9},"end":{"line":165,"column":52}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":23,"column":35}},"2":{"start":{"line":36,"column":0},"end":{"line":162,"column":2}},"3":{"start":{"line":38,"column":4},"end":{"line":38,"column":12}},"4":{"start":{"line":39,"column":4},"end":{"line":43,"column":5}},"5":{"start":{"line":41,"column":6},"end":{"line":42,"column":30}},"6":{"start":{"line":44,"column":4},"end":{"line":44,"column":15}},"7":{"start":{"line":48,"column":4},"end":{"line":48,"column":12}},"8":{"start":{"line":49,"column":4},"end":{"line":53,"column":5}},"9":{"start":{"line":51,"column":6},"end":{"line":52,"column":30}},"10":{"start":{"line":54,"column":4},"end":{"line":54,"column":15}},"11":{"start":{"line":58,"column":4},"end":{"line":59,"column":12}},"12":{"start":{"line":60,"column":4},"end":{"line":65,"column":5}},"13":{"start":{"line":63,"column":6},"end":{"line":64,"column":42}},"14":{"start":{"line":66,"column":4},"end":{"line":66,"column":15}},"15":{"start":{"line":70,"column":4},"end":{"line":70,"column":12}},"16":{"start":{"line":71,"column":4},"end":{"line":75,"column":5}},"17":{"start":{"line":73,"column":6},"end":{"line":74,"column":30}},"18":{"start":{"line":76,"column":4},"end":{"line":76,"column":15}},"19":{"start":{"line":80,"column":4},"end":{"line":86,"column":57}},"20":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"21":{"start":{"line":91,"column":6},"end":{"line":91,"column":95}},"22":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"23":{"start":{"line":96,"column":6},"end":{"line":96,"column":30}},"24":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"25":{"start":{"line":101,"column":6},"end":{"line":101,"column":24}},"26":{"start":{"line":105,"column":4},"end":{"line":105,"column":33}},"27":{"start":{"line":106,"column":4},"end":{"line":133,"column":5}},"28":{"start":{"line":107,"column":6},"end":{"line":107,"column":28}},"29":{"start":{"line":108,"column":6},"end":{"line":111,"column":7}},"30":{"start":{"line":109,"column":8},"end":{"line":110,"column":45}},"31":{"start":{"line":114,"column":6},"end":{"line":114,"column":36}},"32":{"start":{"line":115,"column":6},"end":{"line":121,"column":7}},"33":{"start":{"line":116,"column":8},"end":{"line":116,"column":30}},"34":{"start":{"line":117,"column":8},"end":{"line":120,"column":9}},"35":{"start":{"line":118,"column":10},"end":{"line":119,"column":49}},"36":{"start":{"line":123,"column":6},"end":{"line":132,"column":7}},"37":{"start":{"line":124,"column":8},"end":{"line":124,"column":38}},"38":{"start":{"line":125,"column":8},"end":{"line":131,"column":9}},"39":{"start":{"line":126,"column":10},"end":{"line":126,"column":32}},"40":{"start":{"line":127,"column":10},"end":{"line":130,"column":11}},"41":{"start":{"line":128,"column":10},"end":{"line":129,"column":49}},"42":{"start":{"line":135,"column":4},"end":{"line":137,"column":5}},"43":{"start":{"line":136,"column":6},"end":{"line":136,"column":30}},"44":{"start":{"line":139,"column":4},"end":{"line":139,"column":15}},"45":{"start":{"line":143,"column":4},"end":{"line":144,"column":12}},"46":{"start":{"line":145,"column":4},"end":{"line":148,"column":5}},"47":{"start":{"line":146,"column":6},"end":{"line":147,"column":35}},"48":{"start":{"line":150,"column":4},"end":{"line":150,"column":45}},"49":{"start":{"line":151,"column":4},"end":{"line":158,"column":5}},"50":{"start":{"line":152,"column":6},"end":{"line":152,"column":29}},"51":{"start":{"line":154,"column":9},"end":{"line":158,"column":5}},"52":{"start":{"line":156,"column":8},"end":{"line":157,"column":32}},"53":{"start":{"line":160,"column":4},"end":{"line":160,"column":15}},"54":{"start":{"line":164,"column":0},"end":{"line":200,"column":2}},"55":{"start":{"line":165,"column":2},"end":{"line":199,"column":3}},"56":{"start":{"line":166,"column":4},"end":{"line":168,"column":31}},"57":{"start":{"line":171,"column":4},"end":{"line":173,"column":5}},"58":{"start":{"line":172,"column":6},"end":{"line":172,"column":28}},"59":{"start":{"line":176,"column":4},"end":{"line":191,"column":5}},"60":{"start":{"line":178,"column":6},"end":{"line":180,"column":7}},"61":{"start":{"line":179,"column":8},"end":{"line":179,"column":42}},"62":{"start":{"line":183,"column":6},"end":{"line":185,"column":7}},"63":{"start":{"line":184,"column":8},"end":{"line":184,"column":60}},"64":{"start":{"line":190,"column":6},"end":{"line":190,"column":75}},"65":{"start":{"line":193,"column":4},"end":{"line":198,"column":5}},"66":{"start":{"line":194,"column":6},"end":{"line":194,"column":60}},"67":{"start":{"line":197,"column":6},"end":{"line":197,"column":18}},"68":{"start":{"line":203,"column":0},"end":{"line":205,"column":1}},"69":{"start":{"line":204,"column":2},"end":{"line":204,"column":72}},"70":{"start":{"line":207,"column":0},"end":{"line":207,"column":28}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"2":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":12},"end":{"line":41,"column":29}},{"start":{"line":41,"column":33},"end":{"line":42,"column":29}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"4":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":12},"end":{"line":51,"column":29}},{"start":{"line":51,"column":33},"end":{"line":52,"column":29}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"6":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":12},"end":{"line":63,"column":29}},{"start":{"line":63,"column":33},"end":{"line":64,"column":41}}]},"7":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"8":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":12},"end":{"line":73,"column":29}},{"start":{"line":73,"column":33},"end":{"line":74,"column":29}}]},"9":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":90,"column":4}},{"start":{"line":90,"column":4},"end":{"line":90,"column":4}}]},"10":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":13},"end":{"line":91,"column":30}},{"start":{"line":91,"column":34},"end":{"line":91,"column":94}}]},"11":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"12":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"13":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"14":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":6},"end":{"line":108,"column":6}},{"start":{"line":108,"column":6},"end":{"line":108,"column":6}}]},"15":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":14},"end":{"line":109,"column":31}},{"start":{"line":109,"column":35},"end":{"line":110,"column":44}}]},"16":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":6}},{"start":{"line":115,"column":6},"end":{"line":115,"column":6}}]},"17":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":8},"end":{"line":117,"column":8}},{"start":{"line":117,"column":8},"end":{"line":117,"column":8}}]},"18":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":16},"end":{"line":118,"column":33}},{"start":{"line":118,"column":37},"end":{"line":119,"column":48}}]},"19":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":6},"end":{"line":123,"column":6}},{"start":{"line":123,"column":6},"end":{"line":123,"column":6}}]},"20":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":8}},{"start":{"line":125,"column":8},"end":{"line":125,"column":8}}]},"21":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":10},"end":{"line":127,"column":10}},{"start":{"line":127,"column":10},"end":{"line":127,"column":10}}]},"22":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":16},"end":{"line":128,"column":33}},{"start":{"line":128,"column":37},"end":{"line":129,"column":48}}]},"23":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"24":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":4},"end":{"line":145,"column":4}},{"start":{"line":145,"column":4},"end":{"line":145,"column":4}}]},"25":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"26":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":9},"end":{"line":154,"column":9}},{"start":{"line":154,"column":9},"end":{"line":154,"column":9}}]},"27":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":14},"end":{"line":156,"column":31}},{"start":{"line":156,"column":35},"end":{"line":157,"column":31}}]},"28":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":25},"end":{"line":166,"column":34}},{"start":{"line":166,"column":38},"end":{"line":166,"column":50}}]},"29":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"30":{"line":176,"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":176,"column":4}},{"start":{"line":176,"column":4},"end":{"line":176,"column":4}}]},"31":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":6},"end":{"line":178,"column":6}},{"start":{"line":178,"column":6},"end":{"line":178,"column":6}}]},"32":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]}},"code":["/*"," * Geddy JavaScript Web development framework"," * Copyright 2112 Matthew Eernisse (mde@fleegix.org)"," *"," * Licensed under the Apache License, Version 2.0 (the \"License\");"," * you may not use this file except in compliance with the License."," * You may obtain a copy of the License at"," *"," *         http://www.apache.org/licenses/LICENSE-2.0"," *"," * Unless required by applicable law or agreed to in writing, software"," * distributed under the License is distributed on an \"AS IS\" BASIS,"," * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," * See the License for the specific language governing permissions and"," * limitations under the License."," *","*/","","var utils = require('utilities')","  , i18n = utils.i18n","  , validators = {}","  , baseValidators","  , createScenarioWrappedValidator;","","/*"," * Basic validators -- name is the field name, params is the entire params"," * collection (needed for stuff like password confirmation so it's possible"," * to compare with other field values, and the rule is the data for this"," * particular validation"," * Rules can look like this:"," * present: {opts: {message: 'Gotta be here'}}"," * length: {opts: {min: 2, max: 12}}"," * withFunction: {reference: function (s) { return true },"," *    message: 'Something is wrong'}"," */","baseValidators = {","  present: function (name, val, params, rule, locale) {","    var msg;","    if (utils.isEmpty(val)) {","      //'Field \"' + name + '\" is required.';","      msg = rule.opts.message || i18n.getText('model.validatesPresent',","        {name: name}, locale);","    }","    return msg;","  },","","  absent: function (name, val, params, rule, locale) {","    var msg;","    if (val) {","      //return rule.opts.message || 'Field \"' + name + '\" must not be filled in.';","      msg = rule.opts.message || i18n.getText('model.validatesAbsent',","        {name: name}, locale);","    }","    return msg;","  },","","  confirmed: function (name, val, params, rule, locale) {","    var qual = rule.reference","      , msg;","    if (val != params[qual]) {","      //return rule.opts.message || 'Field \"' + name + '\" and field \"' + qual +","      //    '\" must match.';","      msg = rule.opts.message || i18n.getText('model.validatesConfirmed',","        {name: name, qual: qual}, locale);","    }","    return msg;","  },","","  format: function (name, val, params, rule, locale) {","    var msg;","    if (!rule.reference.test(val)) {","      //return rule.opts.message || 'Field \"' + name + '\" is not correctly formatted.';","      msg = rule.opts.message || i18n.getText('model.validatesFormat',","        {name: name}, locale);","    }","    return msg;","  },","","  length: function (name, val, params, rule, locale) {","    var qual = rule.opts","      , validQualifier = false","      , err","      , msg","      , numVal","      , errMsg = 'validatesLength must be set to a integer ' +","            'or object with min/max integer properties.';","","    // If a specific length is wanted, there has to be a value","    // in the first place","    if (!val) {","      return rule.opts.message || i18n.getText('model.validatesPresent', {name: name}, locale);","    }","","    // Validate that there's a opts to check against","    if (!qual) {","      throw new Error(errMsg);","    }","","    // Check if using old API of passing just a number","    if (typeof qual != 'object') {","      qual = {is: qual};","    }","","    // First check for an exact length qualifier","    numVal = parseFloat(qual.is);","    if (!isNaN(numVal)) {","      validQualifier = true;","      if (val.length !== numVal) {","        msg = rule.opts.message || i18n.getText('model.validatesExactLength',","          {name: name, is: qual.is}, locale);","      }","    }","    else {","      numVal = parseFloat(qual.min);","      if (!isNaN(numVal)) {","        validQualifier = true;","        if (val.length < numVal) {","          msg = rule.opts.message || i18n.getText('model.validatesMinLength',","            {name: name, min: qual.min}, locale);","        }","      }","      // Still valid, check for a max","      if (!msg) {","        numVal = parseFloat(qual.max);","        if (!isNaN(numVal)) {","          validQualifier = true;","          if (val.length > numVal) {","          msg = rule.opts.message || i18n.getText('model.validatesMaxLength',","            {name: name, max: qual.max}, locale);","          }","        }","      }","    }","","    if (!validQualifier) {","      throw new Error(errMsg);","    }","","    return msg;","  },","","  withFunction: function (name, val, params, rule, locale) {","    var func = rule.reference","      , msg;","    if (typeof func != 'function') {","      throw new Error('withFunction validator for field \"' + name +","          '\" must be a function.');","    }","    ","    var resultValidation = func(val, params);","    if (typeof resultValidation === typeof \"\") {","      msg = resultValidation;","    } ","    else if (!resultValidation) {","        //return rule.opts.message || 'Field \"' + name + '\" is not valid.';","        msg = rule.opts.message || i18n.getText('model.validatesWithFunction',","          {name: name}, locale);","    }","","    return msg;","  }","};","","createScenarioWrappedValidator = function (baseValidator) {","  return function (name, val, params, rule, locale) {","    var validScenarios = rule.opts && rule.opts.on","      , scenario = rule.scenario","      , shouldValidate = false;","","    // By default, we should validate on all scenarios","    if (!validScenarios) {","      shouldValidate = true;","    }","","    // If the user specified scenarios","    if (!shouldValidate) {","      // Accept strings too","      if (! validScenarios instanceof Array) {","        validScenarios = [validScenarios];","      }","","      // Normalize the input","      for(var i=0, ii=validScenarios.length; i < ii; i++) {","        validScenarios[i] = validScenarios[i].toLowerCase();","      }","","      // Scenario might be undefined here, but don't hide the error as","      // we should always validate with a scenario in mind lest something","      // unexpected happen.","      shouldValidate = validScenarios.indexOf(scenario.toLowerCase()) >= 0;","    }","","    if (shouldValidate) {","      return baseValidator(name, val, params, rule, locale);","    }","    else {","      return null;","    }","  }","};","","// Wrap all the base validators in a scenario-aware wrapper","for (var key in baseValidators) {","  validators[key] = createScenarioWrappedValidator(baseValidators[key]);","}","","module.exports = validators;",""],"l":{"19":1,"36":1,"38":0,"39":0,"41":0,"44":0,"48":0,"49":0,"51":0,"54":0,"58":0,"60":0,"63":0,"66":0,"70":0,"71":0,"73":0,"76":0,"80":0,"90":0,"91":0,"95":0,"96":0,"100":0,"101":0,"105":0,"106":0,"107":0,"108":0,"109":0,"114":0,"115":0,"116":0,"117":0,"118":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"135":0,"136":0,"139":0,"143":0,"145":0,"146":0,"150":0,"151":0,"152":0,"154":0,"156":0,"160":0,"164":1,"165":6,"166":0,"171":0,"172":0,"176":0,"178":0,"179":0,"183":0,"184":0,"190":0,"193":0,"194":0,"197":0,"203":1,"204":6,"207":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/formatters.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/formatters.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":1},"b":{},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":2,"loc":{"start":{"line":2,"column":21},"end":{"line":2,"column":33}}},"2":{"name":"(anonymous_2)","line":3,"loc":{"start":{"line":3,"column":14},"end":{"line":3,"column":29}}},"3":{"name":"(anonymous_3)","line":7,"loc":{"start":{"line":7,"column":14},"end":{"line":7,"column":29}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":11,"column":4}},"2":{"start":{"line":3,"column":2},"end":{"line":5,"column":4}},"3":{"start":{"line":4,"column":4},"end":{"line":4,"column":61}},"4":{"start":{"line":7,"column":2},"end":{"line":9,"column":4}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":61}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}}},"branchMap":{},"code":["","var formatters = new function () {","  this.date = function (val) {","    return geddy.date.strftime(val, geddy.config.dateFormat);","  };","","  this.time = function (val) {","    return geddy.date.strftime(val, geddy.config.timeFormat);","  };","","}();","","module.exports = formatters;",""],"l":{"2":1,"3":1,"4":0,"7":1,"8":0,"13":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/migration/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/migration/index.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":3,"loc":{"start":{"line":3,"column":21},"end":{"line":3,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":49}},"2":{"start":{"line":3,"column":0},"end":{"line":6,"column":5}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}}},"branchMap":{},"code":["var Migration = require('./migration').Migration;","","var migration = new (function () {","","","})();","","migration.Migration = Migration;","","module.exports = migration;",""],"l":{"1":1,"3":1,"8":1,"10":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/migration/migration.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/migration/migration.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":1,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":1,"42":1,"43":0,"44":1,"45":0,"46":1,"47":1,"48":0,"49":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":12},"end":{"line":8,"column":37}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":27},"end":{"line":14,"column":39}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":28}}},"4":{"name":"(anonymous_4)","line":20,"loc":{"start":{"line":20,"column":14},"end":{"line":20,"column":30}}},"5":{"name":"(anonymous_5)","line":25,"loc":{"start":{"line":25,"column":19},"end":{"line":25,"column":74}}},"6":{"name":"(anonymous_6)","line":45,"loc":{"start":{"line":45,"column":22},"end":{"line":45,"column":51}}},"7":{"name":"(anonymous_7)","line":56,"loc":{"start":{"line":56,"column":18},"end":{"line":56,"column":56}}},"8":{"name":"(anonymous_8)","line":59,"loc":{"start":{"line":59,"column":22},"end":{"line":59,"column":70}}},"9":{"name":"(anonymous_9)","line":79,"loc":{"start":{"line":79,"column":22},"end":{"line":79,"column":62}}},"10":{"name":"(anonymous_10)","line":91,"loc":{"start":{"line":91,"column":21},"end":{"line":91,"column":67}}},"11":{"name":"(anonymous_11)","line":100,"loc":{"start":{"line":100,"column":21},"end":{"line":100,"column":33}}},"12":{"name":"(anonymous_12)","line":132,"loc":{"start":{"line":132,"column":19},"end":{"line":132,"column":39}}},"13":{"name":"(anonymous_13)","line":138,"loc":{"start":{"line":138,"column":21},"end":{"line":138,"column":50}}},"14":{"name":"(anonymous_14)","line":142,"loc":{"start":{"line":142,"column":30},"end":{"line":142,"column":49}}},"15":{"name":"(anonymous_15)","line":146,"loc":{"start":{"line":146,"column":13},"end":{"line":146,"column":25}}},"16":{"name":"(anonymous_16)","line":149,"loc":{"start":{"line":149,"column":28},"end":{"line":149,"column":40}}},"17":{"name":"(anonymous_17)","line":151,"loc":{"start":{"line":151,"column":16},"end":{"line":151,"column":42}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":8,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":19}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":43}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":42}},"6":{"start":{"line":14,"column":0},"end":{"line":140,"column":5}},"7":{"start":{"line":16,"column":2},"end":{"line":18,"column":4}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":11}},"9":{"start":{"line":20,"column":2},"end":{"line":22,"column":4}},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":11}},"11":{"start":{"line":25,"column":2},"end":{"line":42,"column":4}},"12":{"start":{"line":26,"column":4},"end":{"line":32,"column":31}},"13":{"start":{"line":34,"column":4},"end":{"line":40,"column":7}},"14":{"start":{"line":41,"column":4},"end":{"line":41,"column":31}},"15":{"start":{"line":45,"column":2},"end":{"line":53,"column":4}},"16":{"start":{"line":46,"column":4},"end":{"line":51,"column":7}},"17":{"start":{"line":52,"column":4},"end":{"line":52,"column":31}},"18":{"start":{"line":56,"column":2},"end":{"line":56,"column":59}},"19":{"start":{"line":59,"column":2},"end":{"line":76,"column":4}},"20":{"start":{"line":60,"column":4},"end":{"line":66,"column":31}},"21":{"start":{"line":68,"column":4},"end":{"line":74,"column":7}},"22":{"start":{"line":75,"column":4},"end":{"line":75,"column":31}},"23":{"start":{"line":79,"column":2},"end":{"line":88,"column":4}},"24":{"start":{"line":80,"column":4},"end":{"line":86,"column":7}},"25":{"start":{"line":87,"column":4},"end":{"line":87,"column":31}},"26":{"start":{"line":91,"column":2},"end":{"line":129,"column":4}},"27":{"start":{"line":94,"column":4},"end":{"line":102,"column":31}},"28":{"start":{"line":105,"column":4},"end":{"line":112,"column":5}},"29":{"start":{"line":106,"column":6},"end":{"line":111,"column":7}},"30":{"start":{"line":107,"column":8},"end":{"line":107,"column":25}},"31":{"start":{"line":110,"column":8},"end":{"line":110,"column":19}},"32":{"start":{"line":114,"column":4},"end":{"line":114,"column":20}},"33":{"start":{"line":116,"column":4},"end":{"line":125,"column":5}},"34":{"start":{"line":117,"column":6},"end":{"line":120,"column":8}},"35":{"start":{"line":121,"column":6},"end":{"line":124,"column":8}},"36":{"start":{"line":127,"column":4},"end":{"line":127,"column":62}},"37":{"start":{"line":128,"column":4},"end":{"line":128,"column":31}},"38":{"start":{"line":132,"column":2},"end":{"line":135,"column":4}},"39":{"start":{"line":133,"column":4},"end":{"line":133,"column":54}},"40":{"start":{"line":134,"column":4},"end":{"line":134,"column":31}},"41":{"start":{"line":138,"column":2},"end":{"line":138,"column":53}},"42":{"start":{"line":142,"column":0},"end":{"line":144,"column":2}},"43":{"start":{"line":143,"column":2},"end":{"line":143,"column":27}},"44":{"start":{"line":146,"column":0},"end":{"line":148,"column":2}},"45":{"start":{"line":147,"column":2},"end":{"line":147,"column":17}},"46":{"start":{"line":149,"column":0},"end":{"line":158,"column":5}},"47":{"start":{"line":151,"column":2},"end":{"line":156,"column":4}},"48":{"start":{"line":152,"column":4},"end":{"line":155,"column":6}},"49":{"start":{"line":160,"column":0},"end":{"line":160,"column":30}}},"branchMap":{"1":{"line":10,"type":"binary-expr","locations":[{"start":{"line":10,"column":17},"end":{"line":10,"column":24}},{"start":{"line":10,"column":28},"end":{"line":10,"column":42}}]},"2":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":15},"end":{"line":32,"column":25}},{"start":{"line":32,"column":29},"end":{"line":32,"column":31}}]},"3":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":15},"end":{"line":66,"column":25}},{"start":{"line":66,"column":29},"end":{"line":66,"column":31}}]},"4":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":6},"end":{"line":106,"column":6}},{"start":{"line":106,"column":6},"end":{"line":106,"column":6}}]},"5":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":4},"end":{"line":116,"column":4}},{"start":{"line":116,"column":4},"end":{"line":116,"column":4}}]}},"code":["","var utils = require('utilities')","  , Generator = require('../generators/sql').Generator","  , Migration","  , Columnator","  , defaultAdapter = null;","","Migration = function (name, adapter) {","  this.name = name;","  this.adapter = adapter || defaultAdapter;","  this.generator = this.adapter.generator;","};","","Migration.prototype = new (function () {","","  this.up = function (next) {","    next();","  };","","  this.down = function (next) {","    next();","  };","","  // ALTER TABLE distributors ADD COLUMN address varchar(30);","  this.addColumn = function (/* table, column, datatype, [options], cb*/) {","    var args = Array.prototype.slice.call(arguments)","      , sql = ''","      , table = args.shift()","      , column = args.shift()","      , datatype = args.shift()","      , cb = args.pop()","      , opts = args.pop() || {} // Optional","","    sql = this.generator.alterTableStatement(table, {","      operation: 'add'","    , property: {","        name: column","      , datatype: datatype","      }","    });","    this.adapter.exec(sql, cb);","  };","","  // ALTER TABLE distributors DROP COLUMN address;","  this.removeColumn = function (table, column, cb) {","    var sql = this.generator.alterTableStatement(table, {","      operation: 'drop'","    , property: {","        name: column","      }","    });","    this.adapter.exec(sql, cb);","  };","","  // TODO","  this.addIndex = function (table, column, options, cb) {};","","  // ALTER TABLE distributors ALTER COLUMN address TYPE varchar(30);","  this.changeColumn = function (table, column, datatype, options, cb) {","    var args = Array.prototype.slice.call(arguments)","      , sql = ''","      , table = args.shift()","      , column = args.shift()","      , datatype = args.shift()","      , cb = args.pop()","      , opts = args.pop() || {} // Optional","","    sql = this.generator.alterTableStatement(table, {","      operation: 'alter'","    , property: {","        name: column","      , datatype: datatype","      }","    });","    this.adapter.exec(sql, cb);","  };","","  // ALTER TABLE distributors RENAME COLUMN address TO city;","  this.renameColumn = function (table, column, newColumn, cb) {","    var sql = this.generator.alterTableStatement(table, {","      operation: 'rename'","    , property: {","        name: column","      , newName: newColumn","      }","    });","    this.adapter.exec(sql, cb);","  };","","  // CREATE TABLE distributors (did integer, name varchar(40));","  this.createTable = function (/*name, [opts], [definition], cb*/) {","    // FIXME: Shouldn't have to late-require 'model' here","    // Why is order of loading a problem here?","    var model = require('../index')","      , args = Array.prototype.slice.call(arguments)","      , arg","      , sql = ''","      , name = args.shift()","      , opts = {}","      , definition = function () {}","      , cb = args.pop()","      , col = new Columnator();","","    // Optional opts/callback or callback/opts","    while ((arg = args.pop())) {","      if (typeof arg == 'function') {","        definition = arg;","      }","      else {","        opts = arg;","      }","    }","","    definition(col);","","    if (model.config.useTimestamps) {","      col.cols.createdAt = {","        name: 'createdAt'","      , datatype: 'datetime'","      };","      col.cols.updatedAt = {","        name: 'updatedAt'","      , datatype: 'datetime'","      };","    }","","    sql = this.generator.createTableStatement(name, col.cols);","    this.adapter.exec(sql, cb);","  };","","  // DROP TABLE IF EXISTS distributors;","  this.dropTable = function (name, cb) {","    var sql = this.generator.dropTableStatement(name);","    this.adapter.exec(sql, cb);","  };","","  // TODO","  this.removeIndex = function (table, column, cb) {};","","})();","","Migration.setDefaultAdapter = function (adapter) {","  defaultAdapter = adapter;","};","","Columnator = function () {","  this.cols = {};","};","Columnator.prototype = new (function () {","","  this.column = function (name, datatype) {","    this.cols[name] = {","      name: name","    , datatype: datatype","    };","  };","","})();","","exports.Migration = Migration;",""],"l":{"2":1,"8":1,"9":0,"10":0,"11":0,"14":1,"16":1,"17":0,"20":1,"21":0,"25":1,"26":0,"34":0,"41":0,"45":1,"46":0,"52":0,"56":1,"59":1,"60":0,"68":0,"75":0,"79":1,"80":0,"87":0,"91":1,"94":0,"105":0,"106":0,"107":0,"110":0,"114":0,"116":0,"117":0,"121":0,"127":0,"128":0,"132":1,"133":0,"134":0,"138":1,"142":1,"143":0,"146":1,"147":0,"149":1,"151":1,"152":0,"160":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/generators/sql.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/generators/sql.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":1,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":1,"74":1,"75":0,"76":0,"77":0,"78":0,"79":1,"80":1,"81":0,"82":0,"83":0,"84":0,"85":1,"86":0,"87":1,"88":1,"89":0,"90":0,"91":1,"92":1,"93":0,"94":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"(anonymous_1)","line":22,"loc":{"start":{"line":22,"column":20},"end":{"line":22,"column":32}}},"2":{"name":"(anonymous_2)","line":27,"loc":{"start":{"line":27,"column":35},"end":{"line":27,"column":47}}},"3":{"name":"(anonymous_3)","line":29,"loc":{"start":{"line":29,"column":21},"end":{"line":29,"column":39}}},"4":{"name":"(anonymous_4)","line":33,"loc":{"start":{"line":33,"column":28},"end":{"line":33,"column":53}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":29},"end":{"line":47,"column":45}}},"6":{"name":"(anonymous_6)","line":54,"loc":{"start":{"line":54,"column":30},"end":{"line":54,"column":46}}},"7":{"name":"(anonymous_7)","line":62,"loc":{"start":{"line":62,"column":31},"end":{"line":62,"column":47}}},"8":{"name":"(anonymous_8)","line":71,"loc":{"start":{"line":71,"column":30},"end":{"line":71,"column":62}}},"9":{"name":"(anonymous_9)","line":110,"loc":{"start":{"line":110,"column":29},"end":{"line":110,"column":67}}},"10":{"name":"(anonymous_10)","line":122,"loc":{"start":{"line":122,"column":18},"end":{"line":122,"column":34}}},"11":{"name":"(anonymous_11)","line":130,"loc":{"start":{"line":130,"column":28},"end":{"line":130,"column":44}}},"12":{"name":"(anonymous_12)","line":137,"loc":{"start":{"line":137,"column":21},"end":{"line":137,"column":43}}},"13":{"name":"(anonymous_13)","line":145,"loc":{"start":{"line":145,"column":18},"end":{"line":145,"column":34}}},"14":{"name":"(anonymous_14)","line":152,"loc":{"start":{"line":152,"column":19},"end":{"line":152,"column":41}}},"15":{"name":"(anonymous_15)","line":157,"loc":{"start":{"line":157,"column":18},"end":{"line":157,"column":34}}},"16":{"name":"(anonymous_16)","line":165,"loc":{"start":{"line":165,"column":20},"end":{"line":165,"column":32}}},"17":{"name":"(anonymous_17)","line":175,"loc":{"start":{"line":175,"column":17},"end":{"line":175,"column":29}}},"18":{"name":"(anonymous_18)","line":185,"loc":{"start":{"line":185,"column":48},"end":{"line":185,"column":64}}},"19":{"name":"(anonymous_19)","line":193,"loc":{"start":{"line":193,"column":18},"end":{"line":193,"column":30}}},"20":{"name":"(anonymous_20)","line":197,"loc":{"start":{"line":197,"column":49},"end":{"line":197,"column":65}}},"21":{"name":"(anonymous_21)","line":214,"loc":{"start":{"line":214,"column":26},"end":{"line":214,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":7,"column":17}},"2":{"start":{"line":10,"column":0},"end":{"line":20,"column":2}},"3":{"start":{"line":22,"column":0},"end":{"line":25,"column":2}},"4":{"start":{"line":23,"column":2},"end":{"line":23,"column":49}},"5":{"start":{"line":24,"column":2},"end":{"line":24,"column":35}},"6":{"start":{"line":27,"column":0},"end":{"line":163,"column":5}},"7":{"start":{"line":29,"column":2},"end":{"line":31,"column":4}},"8":{"start":{"line":30,"column":4},"end":{"line":30,"column":35}},"9":{"start":{"line":33,"column":2},"end":{"line":45,"column":4}},"10":{"start":{"line":34,"column":4},"end":{"line":36,"column":47}},"11":{"start":{"line":37,"column":6},"end":{"line":37,"column":70}},"12":{"start":{"line":38,"column":6},"end":{"line":40,"column":7}},"13":{"start":{"line":39,"column":8},"end":{"line":39,"column":53}},"14":{"start":{"line":41,"column":6},"end":{"line":43,"column":7}},"15":{"start":{"line":42,"column":8},"end":{"line":42,"column":33}},"16":{"start":{"line":44,"column":6},"end":{"line":44,"column":17}},"17":{"start":{"line":47,"column":2},"end":{"line":52,"column":4}},"18":{"start":{"line":48,"column":4},"end":{"line":49,"column":47}},"19":{"start":{"line":50,"column":4},"end":{"line":50,"column":68}},"20":{"start":{"line":51,"column":4},"end":{"line":51,"column":15}},"21":{"start":{"line":54,"column":2},"end":{"line":60,"column":4}},"22":{"start":{"line":55,"column":4},"end":{"line":56,"column":47}},"23":{"start":{"line":57,"column":4},"end":{"line":57,"column":74}},"24":{"start":{"line":58,"column":4},"end":{"line":58,"column":53}},"25":{"start":{"line":59,"column":4},"end":{"line":59,"column":15}},"26":{"start":{"line":62,"column":2},"end":{"line":68,"column":4}},"27":{"start":{"line":63,"column":4},"end":{"line":64,"column":47}},"28":{"start":{"line":65,"column":4},"end":{"line":65,"column":74}},"29":{"start":{"line":66,"column":4},"end":{"line":66,"column":79}},"30":{"start":{"line":67,"column":4},"end":{"line":67,"column":15}},"31":{"start":{"line":71,"column":2},"end":{"line":108,"column":4}},"32":{"start":{"line":72,"column":4},"end":{"line":77,"column":21}},"33":{"start":{"line":79,"column":4},"end":{"line":79,"column":71}},"34":{"start":{"line":81,"column":4},"end":{"line":81,"column":46}},"35":{"start":{"line":85,"column":4},"end":{"line":96,"column":5}},"36":{"start":{"line":86,"column":6},"end":{"line":88,"column":44}},"37":{"start":{"line":92,"column":6},"end":{"line":95,"column":34}},"38":{"start":{"line":97,"column":4},"end":{"line":97,"column":24}},"39":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"40":{"start":{"line":100,"column":6},"end":{"line":100,"column":54}},"41":{"start":{"line":102,"column":4},"end":{"line":102,"column":30}},"42":{"start":{"line":103,"column":4},"end":{"line":103,"column":16}},"43":{"start":{"line":106,"column":4},"end":{"line":106,"column":42}},"44":{"start":{"line":107,"column":4},"end":{"line":107,"column":15}},"45":{"start":{"line":110,"column":2},"end":{"line":128,"column":4}},"46":{"start":{"line":111,"column":4},"end":{"line":116,"column":18}},"47":{"start":{"line":118,"column":4},"end":{"line":118,"column":71}},"48":{"start":{"line":119,"column":4},"end":{"line":119,"column":44}},"49":{"start":{"line":122,"column":4},"end":{"line":124,"column":7}},"50":{"start":{"line":123,"column":6},"end":{"line":123,"column":77}},"51":{"start":{"line":125,"column":4},"end":{"line":125,"column":31}},"52":{"start":{"line":126,"column":4},"end":{"line":126,"column":15}},"53":{"start":{"line":127,"column":4},"end":{"line":127,"column":15}},"54":{"start":{"line":130,"column":2},"end":{"line":135,"column":4}},"55":{"start":{"line":131,"column":4},"end":{"line":132,"column":75}},"56":{"start":{"line":133,"column":4},"end":{"line":133,"column":54}},"57":{"start":{"line":134,"column":4},"end":{"line":134,"column":15}},"58":{"start":{"line":137,"column":2},"end":{"line":150,"column":4}},"59":{"start":{"line":138,"column":4},"end":{"line":144,"column":38}},"60":{"start":{"line":145,"column":4},"end":{"line":148,"column":7}},"61":{"start":{"line":146,"column":6},"end":{"line":146,"column":35}},"62":{"start":{"line":147,"column":6},"end":{"line":147,"column":52}},"63":{"start":{"line":149,"column":4},"end":{"line":149,"column":15}},"64":{"start":{"line":152,"column":2},"end":{"line":161,"column":4}},"65":{"start":{"line":153,"column":4},"end":{"line":156,"column":38}},"66":{"start":{"line":157,"column":4},"end":{"line":159,"column":7}},"67":{"start":{"line":158,"column":6},"end":{"line":158,"column":43}},"68":{"start":{"line":160,"column":4},"end":{"line":160,"column":15}},"69":{"start":{"line":165,"column":0},"end":{"line":172,"column":2}},"70":{"start":{"line":166,"column":2},"end":{"line":166,"column":31}},"71":{"start":{"line":167,"column":2},"end":{"line":167,"column":49}},"72":{"start":{"line":168,"column":2},"end":{"line":171,"column":5}},"73":{"start":{"line":173,"column":0},"end":{"line":173,"column":73}},"74":{"start":{"line":175,"column":0},"end":{"line":183,"column":2}},"75":{"start":{"line":176,"column":2},"end":{"line":176,"column":31}},"76":{"start":{"line":177,"column":2},"end":{"line":177,"column":49}},"77":{"start":{"line":178,"column":2},"end":{"line":181,"column":5}},"78":{"start":{"line":182,"column":2},"end":{"line":182,"column":35}},"79":{"start":{"line":184,"column":0},"end":{"line":184,"column":70}},"80":{"start":{"line":185,"column":0},"end":{"line":191,"column":2}},"81":{"start":{"line":186,"column":2},"end":{"line":187,"column":45}},"82":{"start":{"line":188,"column":2},"end":{"line":188,"column":72}},"83":{"start":{"line":189,"column":2},"end":{"line":189,"column":41}},"84":{"start":{"line":190,"column":2},"end":{"line":190,"column":13}},"85":{"start":{"line":193,"column":0},"end":{"line":195,"column":2}},"86":{"start":{"line":194,"column":2},"end":{"line":194,"column":31}},"87":{"start":{"line":196,"column":0},"end":{"line":196,"column":71}},"88":{"start":{"line":197,"column":0},"end":{"line":204,"column":2}},"89":{"start":{"line":198,"column":2},"end":{"line":202,"column":102}},"90":{"start":{"line":203,"column":2},"end":{"line":203,"column":23}},"91":{"start":{"line":206,"column":0},"end":{"line":210,"column":2}},"92":{"start":{"line":212,"column":0},"end":{"line":218,"column":2}},"93":{"start":{"line":215,"column":4},"end":{"line":215,"column":42}},"94":{"start":{"line":216,"column":4},"end":{"line":216,"column":22}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":15},"end":{"line":35,"column":22}},{"start":{"line":35,"column":26},"end":{"line":35,"column":28}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":6}},{"start":{"line":38,"column":6},"end":{"line":38,"column":6}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":6}},{"start":{"line":41,"column":6},"end":{"line":41,"column":6}}]},"4":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":15},"end":{"line":74,"column":22}},{"start":{"line":74,"column":26},"end":{"line":74,"column":28}}]},"5":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"6":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":15},"end":{"line":113,"column":22}},{"start":{"line":113,"column":26},"end":{"line":113,"column":28}}]},"7":{"line":114,"type":"cond-expr","locations":[{"start":{"line":114,"column":45},"end":{"line":114,"column":56}},{"start":{"line":114,"column":59},"end":{"line":114,"column":72}}]},"8":{"line":143,"type":"cond-expr","locations":[{"start":{"line":144,"column":12},"end":{"line":144,"column":22}},{"start":{"line":144,"column":25},"end":{"line":144,"column":37}}]},"9":{"line":155,"type":"cond-expr","locations":[{"start":{"line":156,"column":12},"end":{"line":156,"column":22}},{"start":{"line":156,"column":25},"end":{"line":156,"column":37}}]}},"code":["var utils = require('utilities')","  , StandardGenerator","  , MySQLGenerator","  , PostgresGenerator","  , SQLiteGenerator","  , datatypeMap","  , generatorMap;","","// TODO Better map, SQL-implementation specific","datatypeMap = {","  'string': 'VARCHAR(255)'",", 'text': 'TEXT'",", 'number': 'REAL'",", 'int': 'INTEGER'",", 'boolean': 'BOOLEAN'",", 'date': 'DATE'",", 'datetime': 'TIMESTAMP'",", 'time': 'TIME'",", 'object': 'TEXT'","};","","StandardGenerator = function () {","  this._datatypes = utils.mixin({}, datatypeMap);","  this.COLUMN_NAME_DELIMITER = '\"';","};","","StandardGenerator.prototype = new (function () {","","  this.getDatatype = function (jsType) {","    return this._datatypes[jsType];","  };","","  this.addColumnStatement = function (prop, options) {","    var sql = 'ADD COLUMN '","      , opts = options || {}","      , delimiter = this.COLUMN_NAME_DELIMITER;","      sql += delimiter + utils.string.snakeize(prop.name) + delimiter;","      if (prop.datatype) {","        sql += ' ' + this.getDatatype(prop.datatype);","      }","      if (opts.append) {","        sql += ' ' + opts.append;","      }","      return sql;","  };","","  this.dropColumnStatement = function (prop) {","    var sql = 'DROP COLUMN '","      , delimiter = this.COLUMN_NAME_DELIMITER;","    sql += delimiter + utils.string.snakeize(prop.name) + delimiter;","    return sql;","  };","","  this.alterColumnStatement = function (prop) {","    var sql = 'ALTER COLUMN '","      , delimiter = this.COLUMN_NAME_DELIMITER;","    sql += delimiter + utils.string.snakeize(prop.name) + delimiter + ' ';","    sql += 'TYPE ' + this.getDatatype(prop.datatype);","    return sql;","  };","","  this.renameColumnStatement = function (prop) {","    var sql = 'RENAME COLUMN '","      , delimiter = this.COLUMN_NAME_DELIMITER;","    sql += delimiter + utils.string.snakeize(prop.name) + delimiter + ' ';","    sql += 'TO ' + delimiter + utils.string.snakeize(prop.newName) + delimiter;","    return sql;","  };","","  // CREATE TABLE distributors (did integer, name varchar(40));","  this.createTableStatement = function (name, props, options) {","    var model = require('../index')","      , sql = ''","      , opts = options || {}","      , tableName","      , idCol","      , propArr = [];","","    tableName = utils.string.getInflection(name, 'filename', 'plural');","","    sql += 'CREATE TABLE ' + tableName + ' (';","","    // Use DB auto-increment","    // FIXME: Is this syntax Postgres-specific?","    if (model.config.autoIncrementId) {","      idCol = this.addColumnStatement({","        name: 'id'","      }, {append: 'BIGSERIAL PRIMARY KEY'});","    }","    // Use string UUIDs","    else {","      idCol = this.addColumnStatement({","        name: 'id'","      , datatype: 'string'","      }, {append: 'PRIMARY KEY'});","    }","    propArr.push(idCol);","","    for (var p in props) {","      propArr.push(this.addColumnStatement(props[p]));","    }","    sql += propArr.join(', ');","    sql += ');';","    // Strip out the ADD COLUMN commands, which are implicit","    // in a CREATE TABLE","    sql = sql.replace(/ADD COLUMN /g, '');","    return sql;","  };","","  this.alterTableStatement = function (name, alterations, options) {","    var self = this","      , sql = ''","      , opts = options || {}","      , alter = Array.isArray(alterations) ? alterations : [alterations]","      , alterArr = []","      , tableName;","","    tableName = utils.string.getInflection(name, 'filename', 'plural');","    sql += 'ALTER TABLE ' + tableName + ' ';","","    // {operation: 'add', property: {name: 'foo', datatype: 'string'}}","    alter.forEach(function (item) {","      alterArr.push(self[item.operation + 'ColumnStatement'](item.property));","    });","    sql += alterArr.join(', ');","    sql += ';';","    return sql;","  };","","  this.dropTableStatement = function (name) {","    var sql = ''","      , tableName = utils.string.getInflection(name, 'filename', 'plural');","    sql += 'DROP TABLE IF EXISTS ' + tableName + '; ';","    return sql;","  };","","  this.createTable = function (modelNames) {","    var model = require('../index')","      , self = this","      , sql = ''","      , reg = model.descriptionRegistry","      , props","      , names = Array.isArray(modelNames) ?","            modelNames : [modelNames];","    names.forEach(function (name) {","      props = reg[name].properties;","      sql += self.createTableStatement(name, props);","    });","    return sql;","  };","","  this.dropTable = function (modelNames) {","    var self = this","      , sql = ''","      , names = Array.isArray(modelNames) ?","            modelNames : [modelNames];","    names.forEach(function (name) {","      sql += self.dropTableStatement(name);","    });","    return sql;","  };","","})();","","PostgresGenerator = function () {","  StandardGenerator.call(this);","  this._datatypes = utils.mixin({}, datatypeMap);","  utils.mixin(this._datatypes, {","    'int': 'BIGINT'","  , 'object': 'JSON'","  });","};","PostgresGenerator.prototype = Object.create(StandardGenerator.prototype);","","MySQLGenerator = function () {","  StandardGenerator.call(this);","  this._datatypes = utils.mixin({}, datatypeMap);","  utils.mixin(this._datatypes, {","    'int': 'BIGINT'","  , 'datetime': 'TIMESTAMP NULL'","  });","  this.COLUMN_NAME_DELIMITER = '`';","};","MySQLGenerator.prototype = Object.create(StandardGenerator.prototype);","MySQLGenerator.prototype.alterColumnStatement = function (prop) {","  var sql = 'MODIFY COLUMN '","    , delimiter = this.COLUMN_NAME_DELIMITER;","  sql += delimiter + utils.string.snakeize(prop.name) + delimiter + ' ';","  sql += this.getDatatype(prop.datatype);","  return sql;","};","","SQLiteGenerator = function () {","  StandardGenerator.call(this);","};","SQLiteGenerator.prototype = Object.create(StandardGenerator.prototype);","SQLiteGenerator.prototype.alterColumnStatement = function (prop) {","  var msg = 'Sorry, SQLite does not support ALTER COLUMN: ' +","      'http://www.sqlite.org/lang_altertable.html\\n' +","      'Please use PostgreSQL or MySQL, ' +","      'or work around using ADD/REMOVE and a temp column: ' +","      'http://stackoverflow.com/questions/805363/how-do-i-rename-a-column-in-a-sqlite-database-table';","  throw new Error(msg);","};","","generatorMap = {","  postgres: PostgresGenerator",", mysql: MySQLGenerator",", sqlite: SQLiteGenerator","};","","module.exports = {","  StandardGenerator: StandardGenerator",", getGeneratorForAdapter: function (adapter) {","    var ctor = generatorMap[adapter.name];","    return new ctor();","  }","};","",""],"l":{"1":1,"10":1,"22":1,"23":0,"24":0,"27":1,"29":1,"30":0,"33":1,"34":0,"37":0,"38":0,"39":0,"41":0,"42":0,"44":0,"47":1,"48":0,"50":0,"51":0,"54":1,"55":0,"57":0,"58":0,"59":0,"62":1,"63":0,"65":0,"66":0,"67":0,"71":1,"72":0,"79":0,"81":0,"85":0,"86":0,"92":0,"97":0,"99":0,"100":0,"102":0,"103":0,"106":0,"107":0,"110":1,"111":0,"118":0,"119":0,"122":0,"123":0,"125":0,"126":0,"127":0,"130":1,"131":0,"133":0,"134":0,"137":1,"138":0,"145":0,"146":0,"147":0,"149":0,"152":1,"153":0,"157":0,"158":0,"160":0,"165":1,"166":0,"167":0,"168":0,"173":1,"175":1,"176":0,"177":0,"178":0,"182":0,"184":1,"185":1,"186":0,"188":0,"189":0,"190":0,"193":1,"194":0,"196":1,"197":1,"198":0,"203":0,"206":1,"212":1,"215":0,"216":0}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/query/query.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/query/query.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":1,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":1},"b":{"1":[0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":9,"loc":{"start":{"line":9,"column":8},"end":{"line":9,"column":46}}},"2":{"name":"(anonymous_2)","line":26,"loc":{"start":{"line":26,"column":23},"end":{"line":26,"column":35}}},"3":{"name":"(anonymous_3)","line":35,"loc":{"start":{"line":35,"column":23},"end":{"line":35,"column":38}}},"4":{"name":"(anonymous_4)","line":41,"loc":{"start":{"line":41,"column":31},"end":{"line":41,"column":46}}},"5":{"name":"(anonymous_5)","line":53,"loc":{"start":{"line":53,"column":30},"end":{"line":53,"column":42}}},"6":{"name":"(anonymous_6)","line":60,"loc":{"start":{"line":60,"column":15},"end":{"line":60,"column":28}}},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":25},"end":{"line":113,"column":52}}},"8":{"name":"(anonymous_8)","line":140,"loc":{"start":{"line":140,"column":27},"end":{"line":140,"column":40}}},"9":{"name":"(anonymous_9)","line":173,"loc":{"start":{"line":173,"column":27},"end":{"line":173,"column":41}}},"10":{"name":"(anonymous_10)","line":195,"loc":{"start":{"line":195,"column":26},"end":{"line":195,"column":46}}},"11":{"name":"(anonymous_11)","line":285,"loc":{"start":{"line":285,"column":30},"end":{"line":285,"column":67}}},"12":{"name":"(anonymous_12)","line":291,"loc":{"start":{"line":291,"column":28},"end":{"line":291,"column":41}}},"13":{"name":"(anonymous_13)","line":309,"loc":{"start":{"line":309,"column":19},"end":{"line":309,"column":38}}},"14":{"name":"(anonymous_14)","line":328,"loc":{"start":{"line":328,"column":28},"end":{"line":328,"column":41}}},"15":{"name":"(anonymous_15)","line":374,"loc":{"start":{"line":374,"column":21},"end":{"line":374,"column":39}}},"16":{"name":"(anonymous_16)","line":386,"loc":{"start":{"line":386,"column":20},"end":{"line":386,"column":60}}}},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":7,"column":41}},"2":{"start":{"line":9,"column":0},"end":{"line":13,"column":2}},"3":{"start":{"line":10,"column":2},"end":{"line":10,"column":20}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":25}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":41}},"6":{"start":{"line":15,"column":0},"end":{"line":24,"column":2}},"7":{"start":{"line":26,"column":0},"end":{"line":396,"column":5}},"8":{"start":{"line":28,"column":2},"end":{"line":384,"column":8}},"9":{"start":{"line":37,"column":8},"end":{"line":38,"column":62}},"10":{"start":{"line":43,"column":8},"end":{"line":50,"column":9}},"11":{"start":{"line":45,"column":10},"end":{"line":49,"column":11}},"12":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"13":{"start":{"line":47,"column":14},"end":{"line":47,"column":23}},"14":{"start":{"line":54,"column":8},"end":{"line":59,"column":14}},"15":{"start":{"line":60,"column":8},"end":{"line":110,"column":10}},"16":{"start":{"line":61,"column":10},"end":{"line":65,"column":30}},"17":{"start":{"line":69,"column":10},"end":{"line":69,"column":42}},"18":{"start":{"line":73,"column":10},"end":{"line":96,"column":11}},"19":{"start":{"line":74,"column":12},"end":{"line":76,"column":13}},"20":{"start":{"line":75,"column":14},"end":{"line":75,"column":107}},"21":{"start":{"line":78,"column":12},"end":{"line":78,"column":44}},"22":{"start":{"line":80,"column":12},"end":{"line":93,"column":13}},"23":{"start":{"line":81,"column":14},"end":{"line":82,"column":70}},"24":{"start":{"line":84,"column":14},"end":{"line":84,"column":43}},"25":{"start":{"line":86,"column":14},"end":{"line":92,"column":15}},"26":{"start":{"line":87,"column":16},"end":{"line":88,"column":76}},"27":{"start":{"line":91,"column":16},"end":{"line":91,"column":38}},"28":{"start":{"line":95,"column":12},"end":{"line":95,"column":35}},"29":{"start":{"line":98,"column":10},"end":{"line":98,"column":64}},"30":{"start":{"line":100,"column":10},"end":{"line":109,"column":11}},"31":{"start":{"line":101,"column":12},"end":{"line":105,"column":14}},"32":{"start":{"line":108,"column":12},"end":{"line":108,"column":24}},"33":{"start":{"line":114,"column":8},"end":{"line":121,"column":17}},"34":{"start":{"line":124,"column":8},"end":{"line":191,"column":9}},"35":{"start":{"line":125,"column":10},"end":{"line":125,"column":31}},"36":{"start":{"line":128,"column":10},"end":{"line":188,"column":11}},"37":{"start":{"line":132,"column":12},"end":{"line":132,"column":42}},"38":{"start":{"line":137,"column":12},"end":{"line":147,"column":13}},"39":{"start":{"line":139,"column":14},"end":{"line":139,"column":47}},"40":{"start":{"line":140,"column":14},"end":{"line":142,"column":17}},"41":{"start":{"line":141,"column":16},"end":{"line":141,"column":70}},"42":{"start":{"line":146,"column":14},"end":{"line":146,"column":67}},"43":{"start":{"line":151,"column":12},"end":{"line":155,"column":13}},"44":{"start":{"line":152,"column":14},"end":{"line":152,"column":47}},"45":{"start":{"line":153,"column":14},"end":{"line":153,"column":38}},"46":{"start":{"line":154,"column":14},"end":{"line":154,"column":35}},"47":{"start":{"line":161,"column":12},"end":{"line":163,"column":13}},"48":{"start":{"line":162,"column":14},"end":{"line":162,"column":39}},"49":{"start":{"line":166,"column":12},"end":{"line":187,"column":13}},"50":{"start":{"line":168,"column":14},"end":{"line":168,"column":48}},"51":{"start":{"line":173,"column":14},"end":{"line":181,"column":17}},"52":{"start":{"line":174,"column":16},"end":{"line":174,"column":27}},"53":{"start":{"line":175,"column":16},"end":{"line":175,"column":26}},"54":{"start":{"line":176,"column":16},"end":{"line":176,"column":36}},"55":{"start":{"line":177,"column":16},"end":{"line":179,"column":17}},"56":{"start":{"line":178,"column":18},"end":{"line":178,"column":77}},"57":{"start":{"line":180,"column":16},"end":{"line":180,"column":70}},"58":{"start":{"line":186,"column":14},"end":{"line":186,"column":65}},"59":{"start":{"line":190,"column":10},"end":{"line":190,"column":26}},"60":{"start":{"line":192,"column":8},"end":{"line":192,"column":18}},"61":{"start":{"line":196,"column":8},"end":{"line":204,"column":28}},"62":{"start":{"line":206,"column":8},"end":{"line":206,"column":40}},"63":{"start":{"line":207,"column":8},"end":{"line":207,"column":34}},"64":{"start":{"line":211,"column":8},"end":{"line":235,"column":9}},"65":{"start":{"line":212,"column":10},"end":{"line":214,"column":11}},"66":{"start":{"line":213,"column":12},"end":{"line":213,"column":105}},"67":{"start":{"line":216,"column":10},"end":{"line":216,"column":42}},"68":{"start":{"line":217,"column":10},"end":{"line":217,"column":43}},"69":{"start":{"line":219,"column":10},"end":{"line":232,"column":11}},"70":{"start":{"line":220,"column":12},"end":{"line":221,"column":68}},"71":{"start":{"line":223,"column":12},"end":{"line":223,"column":41}},"72":{"start":{"line":225,"column":12},"end":{"line":231,"column":13}},"73":{"start":{"line":226,"column":14},"end":{"line":227,"column":74}},"74":{"start":{"line":230,"column":14},"end":{"line":230,"column":36}},"75":{"start":{"line":234,"column":10},"end":{"line":234,"column":33}},"76":{"start":{"line":237,"column":8},"end":{"line":237,"column":64}},"77":{"start":{"line":238,"column":8},"end":{"line":238,"column":31}},"78":{"start":{"line":241,"column":8},"end":{"line":255,"column":9}},"79":{"start":{"line":242,"column":10},"end":{"line":242,"column":22}},"80":{"start":{"line":247,"column":10},"end":{"line":247,"column":45}},"81":{"start":{"line":248,"column":10},"end":{"line":254,"column":11}},"82":{"start":{"line":249,"column":12},"end":{"line":249,"column":28}},"83":{"start":{"line":253,"column":12},"end":{"line":253,"column":25}},"84":{"start":{"line":259,"column":8},"end":{"line":274,"column":9}},"85":{"start":{"line":260,"column":10},"end":{"line":265,"column":11}},"86":{"start":{"line":261,"column":12},"end":{"line":261,"column":29}},"87":{"start":{"line":264,"column":12},"end":{"line":264,"column":32}},"88":{"start":{"line":268,"column":10},"end":{"line":271,"column":11}},"89":{"start":{"line":269,"column":12},"end":{"line":270,"column":72}},"90":{"start":{"line":273,"column":10},"end":{"line":273,"column":36}},"91":{"start":{"line":276,"column":8},"end":{"line":276,"column":82}},"92":{"start":{"line":281,"column":8},"end":{"line":282,"column":42}},"93":{"start":{"line":286,"column":8},"end":{"line":288,"column":21}},"94":{"start":{"line":289,"column":8},"end":{"line":300,"column":9}},"95":{"start":{"line":290,"column":10},"end":{"line":299,"column":11}},"96":{"start":{"line":291,"column":12},"end":{"line":295,"column":13}},"97":{"start":{"line":292,"column":14},"end":{"line":292,"column":30}},"98":{"start":{"line":294,"column":14},"end":{"line":294,"column":32}},"99":{"start":{"line":298,"column":12},"end":{"line":298,"column":30}},"100":{"start":{"line":302,"column":8},"end":{"line":304,"column":9}},"101":{"start":{"line":303,"column":10},"end":{"line":303,"column":37}},"102":{"start":{"line":306,"column":8},"end":{"line":306,"column":19}},"103":{"start":{"line":310,"column":8},"end":{"line":316,"column":31}},"104":{"start":{"line":317,"column":8},"end":{"line":368,"column":9}},"105":{"start":{"line":318,"column":10},"end":{"line":318,"column":27}},"106":{"start":{"line":319,"column":10},"end":{"line":367,"column":11}},"107":{"start":{"line":322,"column":14},"end":{"line":324,"column":15}},"108":{"start":{"line":323,"column":16},"end":{"line":323,"column":37}},"109":{"start":{"line":326,"column":14},"end":{"line":334,"column":15}},"110":{"start":{"line":327,"column":16},"end":{"line":327,"column":28}},"111":{"start":{"line":328,"column":16},"end":{"line":330,"column":19}},"112":{"start":{"line":329,"column":18},"end":{"line":329,"column":41}},"113":{"start":{"line":333,"column":16},"end":{"line":333,"column":29}},"114":{"start":{"line":336,"column":14},"end":{"line":355,"column":15}},"115":{"start":{"line":337,"column":16},"end":{"line":337,"column":46}},"116":{"start":{"line":338,"column":16},"end":{"line":338,"column":55}},"117":{"start":{"line":339,"column":16},"end":{"line":342,"column":17}},"118":{"start":{"line":340,"column":18},"end":{"line":341,"column":44}},"119":{"start":{"line":343,"column":16},"end":{"line":347,"column":17}},"120":{"start":{"line":344,"column":18},"end":{"line":346,"column":48}},"121":{"start":{"line":348,"column":16},"end":{"line":354,"column":17}},"122":{"start":{"line":349,"column":18},"end":{"line":349,"column":101}},"123":{"start":{"line":350,"column":18},"end":{"line":350,"column":40}},"124":{"start":{"line":353,"column":18},"end":{"line":353,"column":37}},"125":{"start":{"line":356,"column":14},"end":{"line":356,"column":36}},"126":{"start":{"line":357,"column":14},"end":{"line":357,"column":20}},"127":{"start":{"line":360,"column":14},"end":{"line":362,"column":15}},"128":{"start":{"line":361,"column":16},"end":{"line":361,"column":68}},"129":{"start":{"line":363,"column":14},"end":{"line":363,"column":38}},"130":{"start":{"line":364,"column":14},"end":{"line":364,"column":20}},"131":{"start":{"line":366,"column":14},"end":{"line":366,"column":30}},"132":{"start":{"line":369,"column":8},"end":{"line":369,"column":19}},"133":{"start":{"line":376,"column":8},"end":{"line":378,"column":9}},"134":{"start":{"line":377,"column":10},"end":{"line":377,"column":22}},"135":{"start":{"line":380,"column":8},"end":{"line":382,"column":9}},"136":{"start":{"line":381,"column":10},"end":{"line":381,"column":22}},"137":{"start":{"line":383,"column":8},"end":{"line":383,"column":44}},"138":{"start":{"line":386,"column":2},"end":{"line":394,"column":4}},"139":{"start":{"line":388,"column":4},"end":{"line":388,"column":23}},"140":{"start":{"line":389,"column":4},"end":{"line":389,"column":46}},"141":{"start":{"line":390,"column":4},"end":{"line":390,"column":59}},"142":{"start":{"line":391,"column":4},"end":{"line":391,"column":53}},"143":{"start":{"line":392,"column":4},"end":{"line":392,"column":70}},"144":{"start":{"line":393,"column":4},"end":{"line":393,"column":41}},"145":{"start":{"line":398,"column":0},"end":{"line":398,"column":20}},"146":{"start":{"line":400,"column":0},"end":{"line":400,"column":23}}},"branchMap":{"1":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":16},"end":{"line":37,"column":19}},{"start":{"line":37,"column":23},"end":{"line":37,"column":45}},{"start":{"line":37,"column":49},"end":{"line":37,"column":71}},{"start":{"line":38,"column":12},"end":{"line":38,"column":37}},{"start":{"line":38,"column":41},"end":{"line":38,"column":60}}]},"2":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":43,"column":8}},{"start":{"line":43,"column":8},"end":{"line":43,"column":8}}]},"3":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":12},"end":{"line":46,"column":12}},{"start":{"line":46,"column":12},"end":{"line":46,"column":12}}]},"4":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":10},"end":{"line":73,"column":10}},{"start":{"line":73,"column":10},"end":{"line":73,"column":10}}]},"5":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":74,"column":12}},{"start":{"line":74,"column":12},"end":{"line":74,"column":12}}]},"6":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":15},"end":{"line":74,"column":32}},{"start":{"line":74,"column":36},"end":{"line":74,"column":59}}]},"7":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":14},"end":{"line":86,"column":14}},{"start":{"line":86,"column":14},"end":{"line":86,"column":14}}]},"8":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":10},"end":{"line":100,"column":10}},{"start":{"line":100,"column":10},"end":{"line":100,"column":10}}]},"9":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":14},"end":{"line":100,"column":32}},{"start":{"line":100,"column":36},"end":{"line":100,"column":48}}]},"10":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":19},"end":{"line":115,"column":22}},{"start":{"line":115,"column":26},"end":{"line":115,"column":31}}]},"11":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":10},"end":{"line":128,"column":10}},{"start":{"line":128,"column":10},"end":{"line":128,"column":10}}]},"12":{"line":132,"type":"cond-expr","locations":[{"start":{"line":132,"column":32},"end":{"line":132,"column":37}},{"start":{"line":132,"column":40},"end":{"line":132,"column":41}}]},"13":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":12},"end":{"line":137,"column":12}},{"start":{"line":137,"column":12},"end":{"line":137,"column":12}}]},"14":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":12},"end":{"line":151,"column":12}},{"start":{"line":151,"column":12},"end":{"line":151,"column":12}}]},"15":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":12},"end":{"line":161,"column":12}},{"start":{"line":161,"column":12},"end":{"line":161,"column":12}}]},"16":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":12},"end":{"line":166,"column":12}},{"start":{"line":166,"column":12},"end":{"line":166,"column":12}}]},"17":{"line":166,"type":"binary-expr","locations":[{"start":{"line":166,"column":16},"end":{"line":166,"column":20}},{"start":{"line":166,"column":24},"end":{"line":166,"column":39}}]},"18":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":16},"end":{"line":177,"column":16}},{"start":{"line":177,"column":16},"end":{"line":177,"column":16}}]},"19":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":8},"end":{"line":211,"column":8}},{"start":{"line":211,"column":8},"end":{"line":211,"column":8}}]},"20":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":10},"end":{"line":212,"column":10}},{"start":{"line":212,"column":10},"end":{"line":212,"column":10}}]},"21":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":13},"end":{"line":212,"column":30}},{"start":{"line":212,"column":34},"end":{"line":212,"column":57}}]},"22":{"line":225,"type":"if","locations":[{"start":{"line":225,"column":12},"end":{"line":225,"column":12}},{"start":{"line":225,"column":12},"end":{"line":225,"column":12}}]},"23":{"line":241,"type":"if","locations":[{"start":{"line":241,"column":8},"end":{"line":241,"column":8}},{"start":{"line":241,"column":8},"end":{"line":241,"column":8}}]},"24":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":10},"end":{"line":248,"column":10}},{"start":{"line":248,"column":10},"end":{"line":248,"column":10}}]},"25":{"line":259,"type":"if","locations":[{"start":{"line":259,"column":8},"end":{"line":259,"column":8}},{"start":{"line":259,"column":8},"end":{"line":259,"column":8}}]},"26":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":10},"end":{"line":260,"column":10}},{"start":{"line":260,"column":10},"end":{"line":260,"column":10}}]},"27":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":10},"end":{"line":268,"column":10}},{"start":{"line":268,"column":10},"end":{"line":268,"column":10}}]},"28":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":8},"end":{"line":289,"column":8}},{"start":{"line":289,"column":8},"end":{"line":289,"column":8}}]},"29":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":12},"end":{"line":289,"column":18}},{"start":{"line":289,"column":23},"end":{"line":289,"column":43}},{"start":{"line":289,"column":47},"end":{"line":289,"column":65}}]},"30":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":10},"end":{"line":290,"column":10}},{"start":{"line":290,"column":10},"end":{"line":290,"column":10}}]},"31":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":12},"end":{"line":291,"column":12}},{"start":{"line":291,"column":12},"end":{"line":291,"column":12}}]},"32":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":8},"end":{"line":302,"column":8}},{"start":{"line":302,"column":8},"end":{"line":302,"column":8}}]},"33":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":11},"end":{"line":302,"column":36}},{"start":{"line":302,"column":40},"end":{"line":302,"column":57}}]},"34":{"line":310,"type":"binary-expr","locations":[{"start":{"line":310,"column":19},"end":{"line":310,"column":26}},{"start":{"line":310,"column":30},"end":{"line":310,"column":32}}]},"35":{"line":319,"type":"switch","locations":[{"start":{"line":320,"column":12},"end":{"line":357,"column":20}},{"start":{"line":358,"column":12},"end":{"line":358,"column":25}},{"start":{"line":359,"column":12},"end":{"line":364,"column":20}},{"start":{"line":365,"column":12},"end":{"line":366,"column":30}}]},"36":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":14},"end":{"line":322,"column":14}},{"start":{"line":322,"column":14},"end":{"line":322,"column":14}}]},"37":{"line":326,"type":"if","locations":[{"start":{"line":326,"column":14},"end":{"line":326,"column":14}},{"start":{"line":326,"column":14},"end":{"line":326,"column":14}}]},"38":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":16},"end":{"line":339,"column":16}},{"start":{"line":339,"column":16},"end":{"line":339,"column":16}}]},"39":{"line":343,"type":"if","locations":[{"start":{"line":343,"column":16},"end":{"line":343,"column":16}},{"start":{"line":343,"column":16},"end":{"line":343,"column":16}}]},"40":{"line":343,"type":"binary-expr","locations":[{"start":{"line":343,"column":22},"end":{"line":343,"column":34}},{"start":{"line":343,"column":38},"end":{"line":343,"column":51}}]},"41":{"line":348,"type":"if","locations":[{"start":{"line":348,"column":16},"end":{"line":348,"column":16}},{"start":{"line":348,"column":16},"end":{"line":348,"column":16}}]},"42":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":14},"end":{"line":360,"column":14}},{"start":{"line":360,"column":14},"end":{"line":360,"column":14}}]},"43":{"line":376,"type":"if","locations":[{"start":{"line":376,"column":8},"end":{"line":376,"column":8}},{"start":{"line":376,"column":8},"end":{"line":376,"column":8}}]},"44":{"line":380,"type":"if","locations":[{"start":{"line":380,"column":8},"end":{"line":380,"column":8}},{"start":{"line":380,"column":8},"end":{"line":380,"column":8}}]},"45":{"line":383,"type":"cond-expr","locations":[{"start":{"line":383,"column":27},"end":{"line":383,"column":36}},{"start":{"line":383,"column":39},"end":{"line":383,"column":43}}]},"46":{"line":391,"type":"binary-expr","locations":[{"start":{"line":391,"column":40},"end":{"line":391,"column":44}},{"start":{"line":391,"column":48},"end":{"line":391,"column":50}}]}},"code":["","var query = {}","  , Query","  , utils = require('utilities')","  , model = require('../index')","  , operation = require('./operation')","  , comparison = require('./comparison');","","Query = function (model, conditions, options) {","  this.model = null;","  this.conditions = null;","  this.initialize.apply(this, arguments);","};","","Query.comparisonTypes = {","  'eql': 'EqualTo'",", 'ne': 'NotEqualTo'",", 'in': 'Inclusion'",", 'like': 'Like'",", 'gt': 'GreaterThan'",", 'lt': 'LessThan'",", 'gte': 'GreaterThanOrEqual'",", 'lte': 'LessThanOrEqual'","};","","Query.prototype = new (function () {","","  var _operationTypes = {","        'and': true","      , 'or': true","      , 'not': true","      , 'null': true","      }","","    , _isQueryObject = function (obj) {","        // Just generic query object -- not null, Date, or Boolean, or Array","        return (obj && typeof obj == 'object' && !(obj instanceof Date) &&","            !(obj instanceof Boolean) && !Array.isArray(obj));","      }","","    , _extractComparisonType = function (obj) {","        // Just generic query object -- not null, Date, or Boolean","        if (_isQueryObject(obj)) {","          // Return any valid comparison type used as key","          for (var p in obj) {","            if (Query.comparisonTypes[p]) {","              return p;","            }","          }","        }","      }","","    , _createFieldValidator = function () {","        var self = this","          , baseProps = {","              id: true","            , createdAt: true","            , updatedAt: true","            };","        return function (k) {","          var keyName = k","            , keyNameArr","            , modelName","            , reg","            , assnTokens = [];","","          // Users.loginId, Teams.name","          // Sort on nested association property","          modelName = self.model.modelName","","          // Walks through the associations and updates modelName","          // until we reach the property name","          if (keyName.indexOf('.') > -1) {","            if(self.opts != null && self.opts.limit != null) {","              throw new Error('It is not possible to query on an association when there is a limit clause')","            }","","            keyNameArr = keyName.split('.');","","            while(keyNameArr.length > 1) {","              var tempAssnName = keyNameArr.shift()","                , assn = model.getAssociation(modelName, tempAssnName)","","              assnTokens.push(tempAssnName)","","              if(!assn) {","                throw new Error('The association \"' + tempAssnName + '\" is not a valid ' +","                                'property on the ' + modelName + ' model.');","              }","              else {","                modelName = assn.model","              }","            }","","            keyName = keyNameArr[0]","          }","","          reg = model.descriptionRegistry[modelName].properties;","","          if (baseProps[keyName] || reg[keyName]) {","            return {","              modelName: modelName","            , propertyName: keyName","            , assnTokens: assnTokens","            };","          }","          else {","            return null;","          }","        };","      }","","    , _createOperation = function (conditions, key) {","        var self = this","          , type = key || 'and'","          , cond","          , item","          , op = operation.create(type)","          , notOperand","          , operand","          , keys;","","        // TODO: Handle associations","        for (var k in conditions) {","          cond = conditions[k];","","          // Operation type, can contain other operations/conditions","          if (_operationTypes[k]) {","            // Base operation-type to create: if the type is a 'not',","            // create a single 'and' with the same conditions to wrap","            // in a 'not'","            type = k == 'not' ? 'and' : k;","","            // If the conditions are an array, create a single 'and'","            // op that wraps each set of conditions in each item, and","            // add to the wrapper","            if (Array.isArray(cond)) {","              // Create empty wrapper","              operand = operation.create(type);","              cond.forEach(function (c) {","                operand.add(_createOperation.apply(self, [c, 'and']));","              });","            }","            // Simple object-literal, just create an operation","            else {","              operand = _createOperation.apply(this, [cond, type]);","            }","","            // If this was a 'not' operation, create a wrapping 'not'","            // to contain the single operation created","            if (k == 'not') {","              notOperand = operation.create(k);","              notOperand.add(operand);","              operand = notOperand;","            }","          }","          // Condition, may be leaf-node or multiple comparisions","          // ANDed on the same field","          else {","            // Exclude null, exclude array-values, only consider actual objects","            if (_isQueryObject(cond)) {","              keys = Object.keys(cond);","            }","            // If there are multiple keys, means it's multiple comparisons on","            // the same field","            if (keys && keys.length > 1) {","              // Create wrapper operation","              operand = operation.create('and');","              // Go through each of the comparision keys in the object","              // and create single comparisions which can be ANDed together.","              // E.g.: {foo: {gte: 1, lte: 5}} =>","              // {and: [{foo: {gte: 1}}, {foo: {lte: 5}}]}","              keys.forEach(function (kk) {","                var q = {};","                q[k] = {};","                q[k][kk] = cond[kk];","                if (!Query.comparisonTypes[kk]) {","                  throw new Error(kk + ' is not a valid type of comparison');","                }","                operand.add(_createOperation.apply(self, [q, 'and']));","              });","            }","            // Simple condition (leaf-node)","            // {foo: {ne: 'asdf'} or {foo: 1} or {foo: [1, 2, 3]}","            else {","              operand = _createComparison.apply(this, [cond, k]);","            }","          }","","          op.add(operand);","        }","        return op;","      }","","    , _createComparison = function (val, key) {","        var type","          , keyName = key","          , keyNameArr","          , modelName","          , props","          , descr","          , datatype","          , opts","          , assnTokens = [];","","        modelName = this.model.modelName","        assnTokens.push(modelName)","","        // Walks through the associations and updates modelName","        // until we reach the property name","        if (keyName.indexOf('.') > -1) {","          if(this.opts != null && this.opts.limit != null) {","            throw new Error('It is not possible to query on an association when there is a limit clause')","          }","","          keyNameArr = keyName.split('.');","          modelName = this.model.modelName;","","          while(keyNameArr.length > 1) {","            var tempAssnName = keyNameArr.shift()","              , assn = model.getAssociation(modelName, tempAssnName)","","            assnTokens.push(tempAssnName)","","            if(!assn) {","              throw new Error('The association \"' + tempAssnName + '\" is not a valid ' +","                              'property on the ' + modelName + ' model.');","            }","            else {","              modelName = assn.model","            }","          }","","          keyName = keyNameArr[0]","        }","","        props = model.descriptionRegistry[modelName].properties;","        descr = props[keyName];","","          // {id: ['foo', 'bar', 'baz']}, shorthand for Inclusion","        if (Array.isArray(val)) {","          type = 'in';","        }","        else {","          // Single query objects -- not null, Date, Boolean","          // e.g., {id: {'like': 'foo'}}","          type = _extractComparisonType(val);","          if (type) {","            val = val[type];","          }","          // Simple scalar value, default to equality","          else {","            type = 'eql';","          }","        }","","        // FIXME: How the fuck to handle IDs?","        // id isn't in the defined props","        if (keyName == 'id') {","          if (model.config.autoIncrementId) {","            datatype = 'int';","          }","          else {","            datatype = 'string';","          }","        }","        else {","          if (typeof descr === 'undefined') {","            throw new Error('The property \"' + keyName + '\" is not a valid ' +","                            'property on the ' + modelName + ' model.');","          }","","          datatype = descr.datatype;","        }","","        opts = _createComparisonOpts.apply(this, [keyName, datatype, assnTokens]);","","        // TODO: Validate the value for both the particular field","        // (e.g., must be a numeric) and the type of comparison","        // (e.g., 'IN' must be a collection, etc)","        return comparison.create(Query.comparisonTypes[type], modelName,","            keyName, val, datatype, opts);","      }","","    , _createComparisonOpts = function (key, datatype, assnTokens) {","        var opts = this.opts","          , nocase = opts.nocase","          , ret = {};","        if (nocase && (datatype == 'string' || datatype == 'text')) {","          if (Array.isArray(nocase)) {","            if (nocase.some(function (o) {","              return o == key;","            })) {","              ret.nocase = true;","            }","          }","          else {","            ret.nocase = true;","          }","        }","","        if(Array.isArray(assnTokens) && assnTokens.length) {","          ret.assnTokens = assnTokens","        }","","        return ret;","      }","","    , _parseOpts = function (options) {","        var opts = options || {}","          , ret = {}","          , val","          , parsed","          , validatedField","          , validated = {}","          , defaultDir = 'asc';","        for (var prop in opts) {","          val = opts[prop];","          switch (prop) {","            case 'sort':","              // 'foo,bar,baz'","              if (typeof val == 'string') {","                val = val.split(',');","              }","              // ['foo', 'bar', 'baz']","              if (Array.isArray(val)) {","                parsed = {};","                val.forEach(function (v) {","                  parsed[v] = defaultDir;","                });","              }","              else {","                parsed = val;","              }","              // Now there's a well-formed obj, validate fields","              for (var p in parsed) {","                val = parsed[p].toLowerCase();","                validatedField = this.getValidField(p);","                if (!validatedField) {","                  throw new Error(p + ' is not a valid field for ' +","                      this.model.modelName);","                }","                if (!(val == 'asc' || val == 'desc')) {","                  throw new Error('Sort directon for ' + p +","                      ' field on ' + validatedField.modelName + ' must be ' +","                      'either \"asc\" or \"desc\"');","                }","                if (validatedField.assnTokens.length) {","                  var temp = validatedField.assnTokens.concat(validatedField.propertyName).join('.');","                  validated[temp] = val;","                }","                else {","                  validated[p] = val;","                }","              }","              ret[prop] = validated;","              break;","            case 'limit':","            case 'skip':","              if (isNaN(val)) {","                throw new Error('\"' + prop + '\" must be a number.');","              }","              ret[prop] = Number(val);","              break;","            default:","              ret[prop] = val;","          }","        }","        return ret;","      }","","    // If there's an 'id' property in the top-level of the query","    // object, allow non-relational stores to optimize","    , _isByIdQuery = function (params) {","        // Don't optimize if there is more than one property","        if(Object.keys(params).length > 1) {","          return null;","        }","        // Don't optimize if it's a list of ids","        if (Array.isArray(params.id)) {","          return null;","        }","        return params.id ? params.id : null;","      };","","  this.initialize = function (model, conditionParams, opts) {","","    this.model = model;","    this.byId = _isByIdQuery(conditionParams);","    this.getValidField = _createFieldValidator.apply(this);","    this.opts = _parseOpts.apply(this, [opts || {}]);","    this.conditions = _createOperation.apply(this, [conditionParams]);","    this.rawConditions = conditionParams;","  };","","})();","","query.Query = Query;","","module.exports = query;",""],"l":{"2":1,"9":1,"10":0,"11":0,"12":0,"15":1,"26":1,"28":1,"37":0,"43":0,"45":0,"46":0,"47":0,"54":0,"60":0,"61":0,"69":0,"73":0,"74":0,"75":0,"78":0,"80":0,"81":0,"84":0,"86":0,"87":0,"91":0,"95":0,"98":0,"100":0,"101":0,"108":0,"114":0,"124":0,"125":0,"128":0,"132":0,"137":0,"139":0,"140":0,"141":0,"146":0,"151":0,"152":0,"153":0,"154":0,"161":0,"162":0,"166":0,"168":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"180":0,"186":0,"190":0,"192":0,"196":0,"206":0,"207":0,"211":0,"212":0,"213":0,"216":0,"217":0,"219":0,"220":0,"223":0,"225":0,"226":0,"230":0,"234":0,"237":0,"238":0,"241":0,"242":0,"247":0,"248":0,"249":0,"253":0,"259":0,"260":0,"261":0,"264":0,"268":0,"269":0,"273":0,"276":0,"281":0,"286":0,"289":0,"290":0,"291":0,"292":0,"294":0,"298":0,"302":0,"303":0,"306":0,"310":0,"317":0,"318":0,"319":0,"322":0,"323":0,"326":0,"327":0,"328":0,"329":0,"333":0,"336":0,"337":0,"338":0,"339":0,"340":0,"343":0,"344":0,"348":0,"349":0,"350":0,"353":0,"356":0,"357":0,"360":0,"361":0,"363":0,"364":0,"366":0,"369":0,"376":0,"377":0,"380":0,"381":0,"383":0,"386":1,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"398":1,"400":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/query/operation.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/query/operation.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":4,"11":0,"12":0,"13":0,"14":0,"15":0,"16":4,"17":0,"18":4,"19":0,"20":4,"21":0,"22":0,"23":0,"24":4,"25":0,"26":4,"27":0,"28":0,"29":0,"30":0,"31":4,"32":0,"33":0,"34":0,"35":4,"36":0,"37":4,"38":0,"39":4,"40":0,"41":4,"42":0,"43":4,"44":0,"45":4,"46":0,"47":0,"48":0,"49":0,"50":0,"51":4,"52":0,"53":0,"54":4,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":1,"112":1,"113":4,"114":4,"115":4,"116":1,"117":1,"118":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":4,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":19},"end":{"line":6,"column":31}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":16},"end":{"line":20,"column":28}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":20},"end":{"line":22,"column":32}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":17},"end":{"line":32,"column":30}}},"5":{"name":"(anonymous_5)","line":36,"loc":{"start":{"line":36,"column":17},"end":{"line":36,"column":29}}},"6":{"name":"(anonymous_6)","line":40,"loc":{"start":{"line":40,"column":17},"end":{"line":40,"column":29}}},"7":{"name":"(anonymous_7)","line":42,"loc":{"start":{"line":42,"column":51},"end":{"line":42,"column":65}}},"8":{"name":"(anonymous_8)","line":47,"loc":{"start":{"line":47,"column":22},"end":{"line":47,"column":36}}},"9":{"name":"(anonymous_9)","line":52,"loc":{"start":{"line":52,"column":13},"end":{"line":52,"column":32}}},"10":{"name":"(anonymous_10)","line":64,"loc":{"start":{"line":64,"column":15},"end":{"line":64,"column":35}}},"11":{"name":"(anonymous_11)","line":68,"loc":{"start":{"line":68,"column":16},"end":{"line":68,"column":30}}},"12":{"name":"(anonymous_12)","line":73,"loc":{"start":{"line":73,"column":15},"end":{"line":73,"column":32}}},"13":{"name":"(anonymous_13)","line":77,"loc":{"start":{"line":77,"column":23},"end":{"line":77,"column":35}}},"14":{"name":"(anonymous_14)","line":81,"loc":{"start":{"line":81,"column":20},"end":{"line":81,"column":32}}},"15":{"name":"(anonymous_15)","line":85,"loc":{"start":{"line":85,"column":18},"end":{"line":85,"column":30}}},"16":{"name":"(anonymous_16)","line":89,"loc":{"start":{"line":89,"column":15},"end":{"line":89,"column":27}}},"17":{"name":"(anonymous_17)","line":93,"loc":{"start":{"line":93,"column":26},"end":{"line":93,"column":38}}},"18":{"name":"(anonymous_18)","line":95,"loc":{"start":{"line":95,"column":38},"end":{"line":95,"column":52}}},"19":{"name":"(anonymous_19)","line":103,"loc":{"start":{"line":103,"column":23},"end":{"line":103,"column":35}}},"20":{"name":"(anonymous_20)","line":104,"loc":{"start":{"line":104,"column":41},"end":{"line":104,"column":55}}},"21":{"name":"(anonymous_21)","line":111,"loc":{"start":{"line":111,"column":16},"end":{"line":111,"column":28}}},"22":{"name":"(anonymous_22)","line":118,"loc":{"start":{"line":118,"column":16},"end":{"line":118,"column":28}}},"23":{"name":"(anonymous_23)","line":120,"loc":{"start":{"line":120,"column":19},"end":{"line":120,"column":37}}},"24":{"name":"(anonymous_24)","line":121,"loc":{"start":{"line":121,"column":33},"end":{"line":121,"column":47}}},"25":{"name":"(anonymous_25)","line":127,"loc":{"start":{"line":127,"column":20},"end":{"line":127,"column":32}}},"26":{"name":"(anonymous_26)","line":130,"loc":{"start":{"line":130,"column":49},"end":{"line":130,"column":63}}},"27":{"name":"(anonymous_27)","line":145,"loc":{"start":{"line":145,"column":15},"end":{"line":145,"column":27}}},"28":{"name":"(anonymous_28)","line":147,"loc":{"start":{"line":147,"column":19},"end":{"line":147,"column":37}}},"29":{"name":"(anonymous_29)","line":148,"loc":{"start":{"line":148,"column":32},"end":{"line":148,"column":46}}},"30":{"name":"(anonymous_30)","line":154,"loc":{"start":{"line":154,"column":19},"end":{"line":154,"column":31}}},"31":{"name":"(anonymous_31)","line":156,"loc":{"start":{"line":156,"column":52},"end":{"line":156,"column":66}}},"32":{"name":"(anonymous_32)","line":161,"loc":{"start":{"line":161,"column":20},"end":{"line":161,"column":32}}},"33":{"name":"(anonymous_33)","line":164,"loc":{"start":{"line":164,"column":48},"end":{"line":164,"column":62}}},"34":{"name":"(anonymous_34)","line":179,"loc":{"start":{"line":179,"column":16},"end":{"line":179,"column":28}}},"35":{"name":"(anonymous_35)","line":180,"loc":{"start":{"line":180,"column":15},"end":{"line":180,"column":34}}},"36":{"name":"(anonymous_36)","line":192,"loc":{"start":{"line":192,"column":20},"end":{"line":192,"column":32}}},"37":{"name":"(anonymous_37)","line":206,"loc":{"start":{"line":206,"column":19},"end":{"line":206,"column":31}}},"38":{"name":"(anonymous_38)","line":211,"loc":{"start":{"line":211,"column":21},"end":{"line":211,"column":33}}},"39":{"name":"(anonymous_39)","line":217,"loc":{"start":{"line":217,"column":17},"end":{"line":217,"column":29}}},"40":{"name":"(anonymous_40)","line":220,"loc":{"start":{"line":220,"column":19},"end":{"line":220,"column":39}}},"41":{"name":"(anonymous_41)","line":224,"loc":{"start":{"line":224,"column":19},"end":{"line":224,"column":31}}},"42":{"name":"(anonymous_42)","line":228,"loc":{"start":{"line":228,"column":18},"end":{"line":228,"column":30}}},"43":{"name":"(anonymous_43)","line":235,"loc":{"start":{"line":235,"column":1},"end":{"line":235,"column":13}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":4,"column":19}},"2":{"start":{"line":6,"column":0},"end":{"line":17,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":10,"column":11}},"4":{"start":{"line":12,"column":4},"end":{"line":12,"column":32}},"5":{"start":{"line":13,"column":4},"end":{"line":13,"column":22}},"6":{"start":{"line":14,"column":4},"end":{"line":14,"column":21}},"7":{"start":{"line":15,"column":4},"end":{"line":15,"column":38}},"8":{"start":{"line":16,"column":4},"end":{"line":16,"column":16}},"9":{"start":{"line":20,"column":0},"end":{"line":115,"column":2}},"10":{"start":{"line":22,"column":2},"end":{"line":30,"column":4}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":57}},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":23}},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":26}},"14":{"start":{"line":27,"column":4},"end":{"line":27,"column":23}},"15":{"start":{"line":29,"column":4},"end":{"line":29,"column":25}},"16":{"start":{"line":32,"column":2},"end":{"line":34,"column":4}},"17":{"start":{"line":33,"column":4},"end":{"line":33,"column":29}},"18":{"start":{"line":36,"column":2},"end":{"line":38,"column":4}},"19":{"start":{"line":37,"column":4},"end":{"line":37,"column":33}},"20":{"start":{"line":40,"column":2},"end":{"line":45,"column":4}},"21":{"start":{"line":41,"column":4},"end":{"line":41,"column":20}},"22":{"start":{"line":42,"column":4},"end":{"line":44,"column":8}},"23":{"start":{"line":43,"column":6},"end":{"line":43,"column":35}},"24":{"start":{"line":47,"column":2},"end":{"line":50,"column":4}},"25":{"start":{"line":48,"column":4},"end":{"line":49,"column":26}},"26":{"start":{"line":52,"column":2},"end":{"line":61,"column":4}},"27":{"start":{"line":54,"column":4},"end":{"line":60,"column":5}},"28":{"start":{"line":55,"column":6},"end":{"line":55,"column":35}},"29":{"start":{"line":58,"column":6},"end":{"line":58,"column":34}},"30":{"start":{"line":59,"column":6},"end":{"line":59,"column":28}},"31":{"start":{"line":64,"column":2},"end":{"line":71,"column":4}},"32":{"start":{"line":65,"column":4},"end":{"line":67,"column":57}},"33":{"start":{"line":68,"column":4},"end":{"line":70,"column":7}},"34":{"start":{"line":69,"column":6},"end":{"line":69,"column":19}},"35":{"start":{"line":73,"column":2},"end":{"line":75,"column":4}},"36":{"start":{"line":74,"column":4},"end":{"line":74,"column":50}},"37":{"start":{"line":77,"column":2},"end":{"line":79,"column":4}},"38":{"start":{"line":78,"column":4},"end":{"line":78,"column":51}},"39":{"start":{"line":81,"column":2},"end":{"line":83,"column":4}},"40":{"start":{"line":82,"column":4},"end":{"line":82,"column":66}},"41":{"start":{"line":85,"column":2},"end":{"line":87,"column":4}},"42":{"start":{"line":86,"column":4},"end":{"line":86,"column":16}},"43":{"start":{"line":89,"column":2},"end":{"line":91,"column":4}},"44":{"start":{"line":90,"column":4},"end":{"line":90,"column":23}},"45":{"start":{"line":93,"column":2},"end":{"line":101,"column":4}},"46":{"start":{"line":94,"column":4},"end":{"line":94,"column":20}},"47":{"start":{"line":95,"column":4},"end":{"line":100,"column":7}},"48":{"start":{"line":96,"column":6},"end":{"line":97,"column":29}},"49":{"start":{"line":98,"column":6},"end":{"line":98,"column":24}},"50":{"start":{"line":99,"column":6},"end":{"line":99,"column":17}},"51":{"start":{"line":103,"column":2},"end":{"line":108,"column":4}},"52":{"start":{"line":104,"column":4},"end":{"line":107,"column":7}},"53":{"start":{"line":105,"column":6},"end":{"line":106,"column":29}},"54":{"start":{"line":111,"column":2},"end":{"line":113,"column":4}},"55":{"start":{"line":112,"column":4},"end":{"line":112,"column":17}},"56":{"start":{"line":117,"column":0},"end":{"line":233,"column":2}},"57":{"start":{"line":120,"column":4},"end":{"line":125,"column":6}},"58":{"start":{"line":121,"column":6},"end":{"line":124,"column":9}},"59":{"start":{"line":122,"column":8},"end":{"line":123,"column":36}},"60":{"start":{"line":127,"column":4},"end":{"line":142,"column":6}},"61":{"start":{"line":128,"column":6},"end":{"line":128,"column":30}},"62":{"start":{"line":130,"column":6},"end":{"line":134,"column":7}},"63":{"start":{"line":131,"column":8},"end":{"line":131,"column":27}},"64":{"start":{"line":133,"column":8},"end":{"line":133,"column":30}},"65":{"start":{"line":136,"column":6},"end":{"line":136,"column":27}},"66":{"start":{"line":138,"column":6},"end":{"line":140,"column":7}},"67":{"start":{"line":139,"column":8},"end":{"line":139,"column":32}},"68":{"start":{"line":141,"column":6},"end":{"line":141,"column":18}},"69":{"start":{"line":147,"column":4},"end":{"line":152,"column":5}},"70":{"start":{"line":148,"column":6},"end":{"line":151,"column":9}},"71":{"start":{"line":149,"column":8},"end":{"line":150,"column":36}},"72":{"start":{"line":154,"column":4},"end":{"line":159,"column":6}},"73":{"start":{"line":155,"column":6},"end":{"line":155,"column":22}},"74":{"start":{"line":156,"column":6},"end":{"line":158,"column":10}},"75":{"start":{"line":157,"column":8},"end":{"line":157,"column":37}},"76":{"start":{"line":161,"column":4},"end":{"line":176,"column":6}},"77":{"start":{"line":162,"column":6},"end":{"line":162,"column":30}},"78":{"start":{"line":164,"column":6},"end":{"line":168,"column":7}},"79":{"start":{"line":165,"column":8},"end":{"line":165,"column":27}},"80":{"start":{"line":167,"column":8},"end":{"line":167,"column":30}},"81":{"start":{"line":170,"column":6},"end":{"line":170,"column":27}},"82":{"start":{"line":172,"column":6},"end":{"line":174,"column":7}},"83":{"start":{"line":173,"column":8},"end":{"line":173,"column":32}},"84":{"start":{"line":175,"column":6},"end":{"line":175,"column":18}},"85":{"start":{"line":180,"column":4},"end":{"line":190,"column":6}},"86":{"start":{"line":182,"column":6},"end":{"line":184,"column":7}},"87":{"start":{"line":183,"column":8},"end":{"line":183,"column":68}},"88":{"start":{"line":186,"column":6},"end":{"line":188,"column":7}},"89":{"start":{"line":187,"column":8},"end":{"line":187,"column":81}},"90":{"start":{"line":189,"column":6},"end":{"line":189,"column":60}},"91":{"start":{"line":192,"column":4},"end":{"line":204,"column":6}},"92":{"start":{"line":193,"column":6},"end":{"line":193,"column":17}},"93":{"start":{"line":194,"column":6},"end":{"line":194,"column":30}},"94":{"start":{"line":195,"column":6},"end":{"line":195,"column":27}},"95":{"start":{"line":197,"column":6},"end":{"line":197,"column":31}},"96":{"start":{"line":198,"column":6},"end":{"line":203,"column":7}},"97":{"start":{"line":199,"column":8},"end":{"line":199,"column":40}},"98":{"start":{"line":202,"column":8},"end":{"line":202,"column":20}},"99":{"start":{"line":206,"column":4},"end":{"line":208,"column":6}},"100":{"start":{"line":207,"column":6},"end":{"line":207,"column":59}},"101":{"start":{"line":211,"column":4},"end":{"line":214,"column":6}},"102":{"start":{"line":212,"column":6},"end":{"line":212,"column":31}},"103":{"start":{"line":213,"column":6},"end":{"line":213,"column":50}},"104":{"start":{"line":220,"column":4},"end":{"line":222,"column":6}},"105":{"start":{"line":221,"column":6},"end":{"line":221,"column":18}},"106":{"start":{"line":224,"column":4},"end":{"line":226,"column":6}},"107":{"start":{"line":225,"column":6},"end":{"line":225,"column":18}},"108":{"start":{"line":228,"column":4},"end":{"line":230,"column":6}},"109":{"start":{"line":229,"column":6},"end":{"line":229,"column":18}},"110":{"start":{"line":235,"column":0},"end":{"line":242,"column":5}},"111":{"start":{"line":236,"column":2},"end":{"line":236,"column":11}},"112":{"start":{"line":237,"column":2},"end":{"line":241,"column":3}},"113":{"start":{"line":238,"column":4},"end":{"line":238,"column":29}},"114":{"start":{"line":239,"column":4},"end":{"line":239,"column":41}},"115":{"start":{"line":240,"column":4},"end":{"line":240,"column":38}},"116":{"start":{"line":245,"column":0},"end":{"line":245,"column":39}},"117":{"start":{"line":246,"column":0},"end":{"line":246,"column":40}},"118":{"start":{"line":248,"column":0},"end":{"line":248,"column":27}}},"branchMap":{"1":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":12},"end":{"line":42,"column":27}},{"start":{"line":42,"column":31},"end":{"line":44,"column":6}}]},"2":{"line":48,"type":"cond-expr","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":18}},{"start":{"line":49,"column":21},"end":{"line":49,"column":25}}]},"3":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"4":{"line":66,"type":"cond-expr","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":16}},{"start":{"line":67,"column":19},"end":{"line":67,"column":56}}]},"5":{"line":96,"type":"cond-expr","locations":[{"start":{"line":97,"column":10},"end":{"line":97,"column":23}},{"start":{"line":97,"column":26},"end":{"line":97,"column":28}}]},"6":{"line":105,"type":"cond-expr","locations":[{"start":{"line":106,"column":8},"end":{"line":106,"column":21}},{"start":{"line":106,"column":24},"end":{"line":106,"column":28}}]},"7":{"line":122,"type":"cond-expr","locations":[{"start":{"line":123,"column":10},"end":{"line":123,"column":28}},{"start":{"line":123,"column":31},"end":{"line":123,"column":35}}]},"8":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":6},"end":{"line":130,"column":6}},{"start":{"line":130,"column":6},"end":{"line":130,"column":6}}]},"9":{"line":130,"type":"binary-expr","locations":[{"start":{"line":130,"column":10},"end":{"line":130,"column":25}},{"start":{"line":130,"column":29},"end":{"line":132,"column":8}}]},"10":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":6},"end":{"line":138,"column":6}},{"start":{"line":138,"column":6},"end":{"line":138,"column":6}}]},"11":{"line":149,"type":"cond-expr","locations":[{"start":{"line":150,"column":10},"end":{"line":150,"column":28}},{"start":{"line":150,"column":31},"end":{"line":150,"column":35}}]},"12":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":14},"end":{"line":156,"column":29}},{"start":{"line":156,"column":33},"end":{"line":158,"column":8}}]},"13":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":6},"end":{"line":164,"column":6}},{"start":{"line":164,"column":6},"end":{"line":164,"column":6}}]},"14":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":10},"end":{"line":164,"column":25}},{"start":{"line":164,"column":29},"end":{"line":166,"column":8}}]},"15":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":6}},{"start":{"line":172,"column":6},"end":{"line":172,"column":6}}]},"16":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":6},"end":{"line":182,"column":6}},{"start":{"line":182,"column":6},"end":{"line":182,"column":6}}]},"17":{"line":186,"type":"if","locations":[{"start":{"line":186,"column":6},"end":{"line":186,"column":6}},{"start":{"line":186,"column":6},"end":{"line":186,"column":6}}]},"18":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":6},"end":{"line":198,"column":6}},{"start":{"line":198,"column":6},"end":{"line":198,"column":6}}]},"19":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":10},"end":{"line":198,"column":17}},{"start":{"line":198,"column":21},"end":{"line":198,"column":67}}]},"20":{"line":207,"type":"binary-expr","locations":[{"start":{"line":207,"column":13},"end":{"line":207,"column":38}},{"start":{"line":207,"column":42},"end":{"line":207,"column":58}}]},"21":{"line":213,"type":"cond-expr","locations":[{"start":{"line":213,"column":24},"end":{"line":213,"column":42}},{"start":{"line":213,"column":45},"end":{"line":213,"column":49}}]}},"code":["var utils = require('utilities')","  , operation = {}","  , OperationBase","  , operationTypes;","","operation.create = function () {","  var args = Array.prototype.slice.call(arguments)","    , type = args.shift()","    , ctor = utils.string.capitalize(type) + 'Operation'","    , inst;","","    ctor = operationTypes[ctor];","    inst = new ctor();","    inst.type = type;","    inst.initialize.apply(inst, args);","    return inst;","};","","","OperationBase = function () {","","  this.initialize = function () {","    var operands = Array.prototype.slice.call(arguments);","","    this.parent = null;","    this.descendants = [];","    this.operands = [];","","    this.merge(operands);","  };","","  this.forEach = function (f) {","    this.operands.forEach(f);","  };","","  this.isEmpty = function () {","    return !this.operands.length;","  };","","  this.isValid = function () {","    var self = this;","    return (!this.isEmpty() && this.operands.every(function (op) {","      return self.validOperand(op);","    }));","  };","","  this.validOperand = function (op) {","    return typeof op.isValid == 'function' ?","      op.isValid() : true;","  };","","  this.add = function (operand) {","    // Flatten if same type, to create a shallower tree","    if (operand.type == this.type) {","      this.merge(operand.operands);","    }","    else {","      this.operands.push(operand);","      operand.parent = this;","    }","  };","","  // Can take args or a single array-arg","  this.merge = function (operands) {","    var self = this","      , ops = Array.isArray(operands) ?","        operands : Array.prototype.slice.call(arguments);","    ops.forEach(function (op) {","      self.add(op);","    });","  };","","  this.union = function (other) {","    return (create('or', this, other)).minimize();","  };","","  this.intersection  = function () {","    return (create('and', this, other)).minimize();","  };","","  this.difference = function () {","    return (create('and', this, create('not', other))).minimize();","  };","","  this.minimize = function () {","    return this;","  };","","  this.clear = function () {","    this.operands = [];","  };","","  this.minimizeOperands = function () {","    var self = this;","    this.operands = this.operands.map(function (op) {","      var min = typeof op.minimize == 'function' ?","          op.minimize() : op;","      min.parent = self;","      return min;","    });","  };","","  this.pruneOperands = function () {","    this.operands = this.operands.filter(function (op) {","      return typeof op.isEmpty == 'function' ?","        !op.isEmpty() : true;","    });","  };","","  // FIXME: Is this needed?","  this.isNull = function () {","    return false;","  };","","};","","operationTypes = {","  AndOperation: function () {","","    this.matches = function (record) {","      return this.operands.every(function (op) {","        return typeof op.matches == 'function' ?","          op.matches(record) : true;","      });","    };","","    this.minimize = function () {","      this.minimizeOperands();","","      if (!this.isEmpty() && this.operands.every(function (op) {","        return op.isNull();","      })) {","        return create('null');","      }","","      this.pruneOperands();","","      if (this.operands.length == 1) {","        return this.operands[0];","      }","      return this;","    };","  }","",", OrOperation: function () {","","    this.matches = function (record) {","      return this.operands.some(function (op) {","        return typeof op.matches == 'function' ?","          op.matches(record) : true;","      });","    }","","    this.isValid = function () {","      var self = this;","      return (!this.isEmpty() && this.operands.some(function (op) {","        return self.validOperand(op);","      }));","    };","","    this.minimize = function () {","      this.minimizeOperands();","","      if (!this.isEmpty() && this.operands.some(function (op) {","        return op.isNull();","      })) {","        return create('null');","      }","","      this.pruneOperands();","","      if (this.operands.length == 1) {","        return this.operands[0];","      }","      return this;","    };","  }","",", NotOperation: function () {","    this.add = function (operand) {","      // Assert there's only one operand","      if (this.operands.length) {","        throw new Error('Not operation can only have one operand.');","      }","      // Assert that the single operand isn't a self-reference","      if (this.operand === this) {","        throw new Error('Operand for Not operation can\\'t be a self-reference.');","      }","      this.constructor.prototype.add.apply(this, arguments);","    };","","    this.minimize = function () {","      var operand","      this.minimizeOperands();","      this.pruneOperands();","      // Try to factor out double negatives","      operand = this.operand();","      if (operand && operand instanceof operationTypes.NotOperation) {","        return this.operands[0].operand;","      }","      else {","        return this;","      }","    };","","    this.operand = function () {","      return this.operands.length == 1 && this.operands[0];","    };","","    // FIXME: \"Defaults to false\"?","    this.isNegated = function () {","      var parent = this.parent;","      return !!parent ? parent.isNegated() : true;","    };","  }","",", NullOperation: function () {","","    // TODO: Make sure it's either a Hash or a Resource","    this.matches = function (resource) {","      return true;","    };","","    this.isValid = function () {","      return true;","    };","","    this.isNull = function () {","      return true;","    };","","  }","};","","(function () {","  var ctor;","  for (var t in operationTypes) {","    ctor = operationTypes[t];","    ctor.prototype = new OperationBase();","    ctor.prototype.constructor = ctor;","  }","})();","","// Export the specific constructors as well as the `create` function","utils.mixin(operation, operationTypes);","operation.OperationBase = OperationBase;","","module.exports = operation;","",""],"l":{"1":1,"6":1,"7":0,"12":0,"13":0,"14":0,"15":0,"16":0,"20":1,"22":4,"23":0,"25":0,"26":0,"27":0,"29":0,"32":4,"33":0,"36":4,"37":0,"40":4,"41":0,"42":0,"43":0,"47":4,"48":0,"52":4,"54":0,"55":0,"58":0,"59":0,"64":4,"65":0,"68":0,"69":0,"73":4,"74":0,"77":4,"78":0,"81":4,"82":0,"85":4,"86":0,"89":4,"90":0,"93":4,"94":0,"95":0,"96":0,"98":0,"99":0,"103":4,"104":0,"105":0,"111":4,"112":0,"117":1,"120":0,"121":0,"122":0,"127":0,"128":0,"130":0,"131":0,"133":0,"136":0,"138":0,"139":0,"141":0,"147":0,"148":0,"149":0,"154":0,"155":0,"156":0,"157":0,"161":0,"162":0,"164":0,"165":0,"167":0,"170":0,"172":0,"173":0,"175":0,"180":0,"182":0,"183":0,"186":0,"187":0,"189":0,"192":0,"193":0,"194":0,"195":0,"197":0,"198":0,"199":0,"202":0,"206":0,"207":0,"211":0,"212":0,"213":0,"220":0,"221":0,"224":0,"225":0,"228":0,"229":0,"235":1,"236":1,"237":1,"238":4,"239":4,"240":4,"245":1,"246":1,"248":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/query/comparison.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/query/comparison.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":8,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":8,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":1,"50":1,"51":8,"52":8,"53":8,"54":1,"55":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":8,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":23},"end":{"line":8,"column":38}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":20},"end":{"line":14,"column":32}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":17},"end":{"line":27,"column":29}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":20},"end":{"line":28,"column":67}}},"5":{"name":"(anonymous_5)","line":41,"loc":{"start":{"line":41,"column":17},"end":{"line":41,"column":29}}},"6":{"name":"(anonymous_6)","line":47,"loc":{"start":{"line":47,"column":21},"end":{"line":47,"column":33}}},"7":{"name":"(anonymous_7)","line":52,"loc":{"start":{"line":52,"column":24},"end":{"line":52,"column":36}}},"8":{"name":"(anonymous_8)","line":57,"loc":{"start":{"line":57,"column":25},"end":{"line":57,"column":37}}},"9":{"name":"(anonymous_9)","line":62,"loc":{"start":{"line":62,"column":22},"end":{"line":62,"column":34}}},"10":{"name":"(anonymous_10)","line":67,"loc":{"start":{"line":67,"column":32},"end":{"line":67,"column":44}}},"11":{"name":"(anonymous_11)","line":72,"loc":{"start":{"line":72,"column":29},"end":{"line":72,"column":41}}},"12":{"name":"(anonymous_12)","line":77,"loc":{"start":{"line":77,"column":23},"end":{"line":77,"column":35}}},"13":{"name":"(anonymous_13)","line":80,"loc":{"start":{"line":80,"column":19},"end":{"line":80,"column":31}}},"14":{"name":"(anonymous_14)","line":86,"loc":{"start":{"line":86,"column":23},"end":{"line":86,"column":39}}},"15":{"name":"(anonymous_15)","line":92,"loc":{"start":{"line":92,"column":18},"end":{"line":92,"column":30}}},"16":{"name":"(anonymous_16)","line":95,"loc":{"start":{"line":95,"column":19},"end":{"line":95,"column":31}}},"17":{"name":"(anonymous_17)","line":105,"loc":{"start":{"line":105,"column":1},"end":{"line":105,"column":13}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":9,"column":2},"end":{"line":10,"column":49}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":24}},"5":{"start":{"line":14,"column":0},"end":{"line":25,"column":2}},"6":{"start":{"line":15,"column":2},"end":{"line":18,"column":11}},"7":{"start":{"line":20,"column":4},"end":{"line":20,"column":33}},"8":{"start":{"line":21,"column":4},"end":{"line":21,"column":22}},"9":{"start":{"line":22,"column":4},"end":{"line":22,"column":21}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":38}},"11":{"start":{"line":24,"column":4},"end":{"line":24,"column":16}},"12":{"start":{"line":27,"column":0},"end":{"line":44,"column":2}},"13":{"start":{"line":28,"column":2},"end":{"line":37,"column":4}},"14":{"start":{"line":29,"column":4},"end":{"line":29,"column":23}},"15":{"start":{"line":30,"column":4},"end":{"line":30,"column":26}},"16":{"start":{"line":32,"column":4},"end":{"line":32,"column":23}},"17":{"start":{"line":33,"column":4},"end":{"line":33,"column":23}},"18":{"start":{"line":34,"column":4},"end":{"line":34,"column":23}},"19":{"start":{"line":35,"column":4},"end":{"line":35,"column":29}},"20":{"start":{"line":36,"column":4},"end":{"line":36,"column":27}},"21":{"start":{"line":41,"column":2},"end":{"line":43,"column":4}},"22":{"start":{"line":42,"column":4},"end":{"line":42,"column":58}},"23":{"start":{"line":46,"column":0},"end":{"line":103,"column":2}},"24":{"start":{"line":48,"column":4},"end":{"line":48,"column":35}},"25":{"start":{"line":49,"column":4},"end":{"line":49,"column":35}},"26":{"start":{"line":53,"column":4},"end":{"line":53,"column":35}},"27":{"start":{"line":54,"column":4},"end":{"line":54,"column":36}},"28":{"start":{"line":58,"column":4},"end":{"line":58,"column":34}},"29":{"start":{"line":59,"column":4},"end":{"line":59,"column":35}},"30":{"start":{"line":63,"column":4},"end":{"line":63,"column":34}},"31":{"start":{"line":64,"column":4},"end":{"line":64,"column":35}},"32":{"start":{"line":68,"column":4},"end":{"line":68,"column":35}},"33":{"start":{"line":69,"column":4},"end":{"line":69,"column":36}},"34":{"start":{"line":73,"column":4},"end":{"line":73,"column":35}},"35":{"start":{"line":74,"column":4},"end":{"line":74,"column":36}},"36":{"start":{"line":78,"column":4},"end":{"line":78,"column":36}},"37":{"start":{"line":80,"column":4},"end":{"line":89,"column":6}},"38":{"start":{"line":81,"column":6},"end":{"line":82,"column":27}},"39":{"start":{"line":83,"column":6},"end":{"line":85,"column":7}},"40":{"start":{"line":84,"column":8},"end":{"line":84,"column":21}},"41":{"start":{"line":86,"column":6},"end":{"line":88,"column":9}},"42":{"start":{"line":87,"column":8},"end":{"line":87,"column":56}},"43":{"start":{"line":93,"column":4},"end":{"line":93,"column":38}},"44":{"start":{"line":95,"column":4},"end":{"line":100,"column":6}},"45":{"start":{"line":96,"column":6},"end":{"line":98,"column":7}},"46":{"start":{"line":97,"column":8},"end":{"line":97,"column":21}},"47":{"start":{"line":99,"column":6},"end":{"line":99,"column":59}},"48":{"start":{"line":105,"column":0},"end":{"line":112,"column":5}},"49":{"start":{"line":106,"column":2},"end":{"line":106,"column":11}},"50":{"start":{"line":107,"column":2},"end":{"line":111,"column":3}},"51":{"start":{"line":108,"column":4},"end":{"line":108,"column":30}},"52":{"start":{"line":109,"column":4},"end":{"line":109,"column":42}},"53":{"start":{"line":110,"column":4},"end":{"line":110,"column":38}},"54":{"start":{"line":115,"column":0},"end":{"line":115,"column":41}},"55":{"start":{"line":117,"column":0},"end":{"line":117,"column":28}}},"branchMap":{"1":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":20}},{"start":{"line":36,"column":24},"end":{"line":36,"column":26}}]},"2":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"3":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":6},"end":{"line":96,"column":6}},{"start":{"line":96,"column":6},"end":{"line":96,"column":6}}]},"4":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":12},"end":{"line":96,"column":37}},{"start":{"line":96,"column":41},"end":{"line":96,"column":64}}]}},"code":["var utils = require('utilities')","  , datatypes = require('../datatypes')","  , comparison = {}","  , ComparisonBase","  , comparisonTypes","  , _validateForDatatype;","","_validateForDatatype = function (val) {","  var validator = datatypes[this.datatype].validate","    , validated = validator(this.field, val, {});","  return !validated.err;","};","","comparison.create = function () {","  var args = Array.prototype.slice.call(arguments)","    , type = args.shift()","    , ctor = utils.string.capitalize(type) + 'Comparison'","    , inst;","","    ctor = comparisonTypes[ctor];","    inst = new ctor();","    inst.type = type;","    inst.initialize.apply(inst, args);","    return inst;","};","","ComparisonBase = function () {","  this.initialize = function (model, field, value, datatype, opts) {","    this.parent = null;","    this.descendants = [];","    // FIXME: Should use Property objects","    this.model = model;","    this.field = field;","    this.value = value;","    this.datatype = datatype;","    this.opts = opts || {};","  };","","  // Most basic validation is to check that the value for the","  // comparison is actually valid for this field","  this.isValid = function () {","    return _validateForDatatype.apply(this, [this.value]);","  };","};","","comparisonTypes = {","  EqualToComparison: function () {","    this.jsComparatorString = '==';","    this.sqlComparatorString = '=';","  }","",", NotEqualToComparison: function () {","    this.jsComparatorString = '!=';","    this.sqlComparatorString = '!=';","  }","",", GreaterThanComparison: function () {","    this.jsComparatorString = '>';","    this.sqlComparatorString = '>';","  }","",", LessThanComparison: function () {","    this.jsComparatorString = '<';","    this.sqlComparatorString = '<';","  }","",", GreaterThanOrEqualComparison: function () {","    this.jsComparatorString = '>=';","    this.sqlComparatorString = '>=';","  }","",", LessThanOrEqualComparison: function () {","    this.jsComparatorString = '<=';","    this.sqlComparatorString = '<=';","  }","",", InclusionComparison: function () {","    this.sqlComparatorString = 'IN';","","    this.isValid = function () {","      var self = this","        , val = this.value;","      if (!Array.isArray(val)) {","        return false;","      }","      return val.every(function (item) {","        return _validateForDatatype.apply(self, [item]);","      });","    };","  }","",", LikeComparison: function () {","    this.sqlComparatorString = 'LIKE';","","    this.isValid = function () {","      if (!(this.datatype == 'string' || this.datatype == 'text')) {","        return false;","      }","      return this.constructor.prototype.isValid.call(this);","    };","  }","","};","","(function () {","  var ctor;","  for (var t in comparisonTypes) {","    ctor = comparisonTypes[t];","    ctor.prototype = new ComparisonBase();","    ctor.prototype.constructor = ctor;","  }","})();","","// Export the specific constructors as well as the `create` function","utils.mixin(comparison, comparisonTypes);","","module.exports = comparison;","","",""],"l":{"1":1,"8":1,"9":0,"11":0,"14":1,"15":0,"20":0,"21":0,"22":0,"23":0,"24":0,"27":1,"28":8,"29":0,"30":0,"32":0,"33":0,"34":0,"35":0,"36":0,"41":8,"42":0,"46":1,"48":0,"49":0,"53":0,"54":0,"58":0,"59":0,"63":0,"64":0,"68":0,"69":0,"73":0,"74":0,"78":0,"80":0,"81":0,"83":0,"84":0,"86":0,"87":0,"93":0,"95":0,"96":0,"97":0,"99":0,"105":1,"106":1,"107":1,"108":8,"109":8,"110":8,"115":1,"117":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/datatypes.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/datatypes.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":1},"b":{"1":[0,0],"2":[0,0,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0],"13":[0,0,0,0,0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":28,"loc":{"start":{"line":28,"column":11},"end":{"line":28,"column":26}}},"2":{"name":"(anonymous_2)","line":40,"loc":{"start":{"line":40,"column":13},"end":{"line":40,"column":39}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":12},"end":{"line":55,"column":27}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":10},"end":{"line":59,"column":29}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":14},"end":{"line":82,"column":43}}},"6":{"name":"(anonymous_6)","line":88,"loc":{"start":{"line":88,"column":15},"end":{"line":88,"column":41}}},"7":{"name":"(anonymous_7)","line":94,"loc":{"start":{"line":94,"column":14},"end":{"line":94,"column":43}}},"8":{"name":"(anonymous_8)","line":100,"loc":{"start":{"line":100,"column":15},"end":{"line":100,"column":41}}},"9":{"name":"(anonymous_9)","line":106,"loc":{"start":{"line":106,"column":14},"end":{"line":106,"column":43}}},"10":{"name":"(anonymous_10)","line":118,"loc":{"start":{"line":118,"column":15},"end":{"line":118,"column":41}}},"11":{"name":"(anonymous_11)","line":127,"loc":{"start":{"line":127,"column":14},"end":{"line":127,"column":43}}},"12":{"name":"(anonymous_12)","line":140,"loc":{"start":{"line":140,"column":15},"end":{"line":140,"column":41}}},"13":{"name":"(anonymous_13)","line":149,"loc":{"start":{"line":149,"column":14},"end":{"line":149,"column":43}}},"14":{"name":"(anonymous_14)","line":194,"loc":{"start":{"line":194,"column":15},"end":{"line":194,"column":41}}},"15":{"name":"(anonymous_15)","line":203,"loc":{"start":{"line":203,"column":14},"end":{"line":203,"column":43}}},"16":{"name":"(anonymous_16)","line":235,"loc":{"start":{"line":235,"column":15},"end":{"line":235,"column":41}}},"17":{"name":"(anonymous_17)","line":261,"loc":{"start":{"line":261,"column":14},"end":{"line":261,"column":43}}},"18":{"name":"(anonymous_18)","line":276,"loc":{"start":{"line":276,"column":15},"end":{"line":276,"column":41}}},"19":{"name":"(anonymous_19)","line":291,"loc":{"start":{"line":291,"column":14},"end":{"line":291,"column":43}}},"20":{"name":"(anonymous_20)","line":306,"loc":{"start":{"line":306,"column":15},"end":{"line":306,"column":41}}},"21":{"name":"(anonymous_21)","line":323,"loc":{"start":{"line":323,"column":14},"end":{"line":323,"column":43}}},"22":{"name":"(anonymous_22)","line":338,"loc":{"start":{"line":338,"column":15},"end":{"line":338,"column":41}}}},"statementMap":{"1":{"start":{"line":19,"column":0},"end":{"line":26,"column":12}},"2":{"start":{"line":28,"column":0},"end":{"line":38,"column":2}},"3":{"start":{"line":30,"column":2},"end":{"line":32,"column":3}},"4":{"start":{"line":31,"column":4},"end":{"line":31,"column":30}},"5":{"start":{"line":33,"column":2},"end":{"line":37,"column":42}},"6":{"start":{"line":40,"column":0},"end":{"line":53,"column":2}},"7":{"start":{"line":41,"column":2},"end":{"line":42,"column":27}},"8":{"start":{"line":43,"column":2},"end":{"line":45,"column":3}},"9":{"start":{"line":44,"column":4},"end":{"line":44,"column":36}},"10":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"11":{"start":{"line":47,"column":4},"end":{"line":47,"column":25}},"12":{"start":{"line":49,"column":2},"end":{"line":51,"column":3}},"13":{"start":{"line":50,"column":4},"end":{"line":50,"column":28}},"14":{"start":{"line":52,"column":2},"end":{"line":52,"column":13}},"15":{"start":{"line":55,"column":0},"end":{"line":57,"column":1}},"16":{"start":{"line":56,"column":2},"end":{"line":56,"column":30}},"17":{"start":{"line":59,"column":0},"end":{"line":74,"column":2}},"18":{"start":{"line":60,"column":2},"end":{"line":60,"column":10}},"19":{"start":{"line":61,"column":2},"end":{"line":72,"column":3}},"20":{"start":{"line":64,"column":6},"end":{"line":64,"column":34}},"21":{"start":{"line":65,"column":6},"end":{"line":65,"column":12}},"22":{"start":{"line":68,"column":6},"end":{"line":68,"column":35}},"23":{"start":{"line":69,"column":6},"end":{"line":69,"column":12}},"24":{"start":{"line":71,"column":6},"end":{"line":71,"column":66}},"25":{"start":{"line":73,"column":2},"end":{"line":73,"column":13}},"26":{"start":{"line":79,"column":0},"end":{"line":346,"column":2}},"27":{"start":{"line":83,"column":6},"end":{"line":86,"column":8}},"28":{"start":{"line":89,"column":6},"end":{"line":89,"column":40}},"29":{"start":{"line":95,"column":6},"end":{"line":98,"column":8}},"30":{"start":{"line":101,"column":6},"end":{"line":101,"column":40}},"31":{"start":{"line":107,"column":6},"end":{"line":112,"column":7}},"32":{"start":{"line":108,"column":8},"end":{"line":111,"column":10}},"33":{"start":{"line":113,"column":6},"end":{"line":116,"column":8}},"34":{"start":{"line":119,"column":6},"end":{"line":119,"column":31}},"35":{"start":{"line":120,"column":6},"end":{"line":122,"column":9}},"36":{"start":{"line":129,"column":6},"end":{"line":134,"column":7}},"37":{"start":{"line":130,"column":8},"end":{"line":133,"column":10}},"38":{"start":{"line":135,"column":6},"end":{"line":138,"column":8}},"39":{"start":{"line":141,"column":6},"end":{"line":141,"column":31}},"40":{"start":{"line":142,"column":6},"end":{"line":144,"column":9}},"41":{"start":{"line":150,"column":6},"end":{"line":150,"column":20}},"42":{"start":{"line":151,"column":6},"end":{"line":181,"column":7}},"43":{"start":{"line":153,"column":10},"end":{"line":166,"column":11}},"44":{"start":{"line":158,"column":14},"end":{"line":158,"column":31}},"45":{"start":{"line":159,"column":14},"end":{"line":159,"column":20}},"46":{"start":{"line":164,"column":14},"end":{"line":164,"column":32}},"47":{"start":{"line":165,"column":14},"end":{"line":165,"column":20}},"48":{"start":{"line":167,"column":10},"end":{"line":167,"column":16}},"49":{"start":{"line":169,"column":10},"end":{"line":174,"column":11}},"50":{"start":{"line":170,"column":12},"end":{"line":170,"column":29}},"51":{"start":{"line":172,"column":15},"end":{"line":174,"column":11}},"52":{"start":{"line":173,"column":12},"end":{"line":173,"column":30}},"53":{"start":{"line":175,"column":10},"end":{"line":175,"column":16}},"54":{"start":{"line":177,"column":10},"end":{"line":177,"column":26}},"55":{"start":{"line":178,"column":10},"end":{"line":178,"column":16}},"56":{"start":{"line":183,"column":6},"end":{"line":188,"column":7}},"57":{"start":{"line":184,"column":8},"end":{"line":187,"column":10}},"58":{"start":{"line":189,"column":6},"end":{"line":192,"column":8}},"59":{"start":{"line":195,"column":6},"end":{"line":195,"column":31}},"60":{"start":{"line":196,"column":6},"end":{"line":198,"column":9}},"61":{"start":{"line":209,"column":6},"end":{"line":229,"column":7}},"62":{"start":{"line":210,"column":8},"end":{"line":222,"column":9}},"63":{"start":{"line":211,"column":10},"end":{"line":211,"column":36}},"64":{"start":{"line":212,"column":10},"end":{"line":215,"column":11}},"65":{"start":{"line":218,"column":10},"end":{"line":221,"column":11}},"66":{"start":{"line":224,"column":11},"end":{"line":229,"column":7}},"67":{"start":{"line":225,"column":8},"end":{"line":228,"column":10}},"68":{"start":{"line":230,"column":6},"end":{"line":233,"column":8}},"69":{"start":{"line":236,"column":6},"end":{"line":237,"column":31}},"70":{"start":{"line":240,"column":6},"end":{"line":254,"column":7}},"71":{"start":{"line":241,"column":10},"end":{"line":241,"column":38}},"72":{"start":{"line":244,"column":11},"end":{"line":254,"column":7}},"73":{"start":{"line":245,"column":8},"end":{"line":245,"column":31}},"74":{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},"75":{"start":{"line":249,"column":10},"end":{"line":249,"column":38}},"76":{"start":{"line":253,"column":8},"end":{"line":253,"column":36}},"77":{"start":{"line":256,"column":6},"end":{"line":256,"column":35}},"78":{"start":{"line":262,"column":6},"end":{"line":262,"column":37}},"79":{"start":{"line":263,"column":6},"end":{"line":274,"column":7}},"80":{"start":{"line":264,"column":8},"end":{"line":267,"column":10}},"81":{"start":{"line":270,"column":8},"end":{"line":273,"column":10}},"82":{"start":{"line":277,"column":6},"end":{"line":278,"column":31}},"83":{"start":{"line":279,"column":6},"end":{"line":284,"column":7}},"84":{"start":{"line":280,"column":8},"end":{"line":280,"column":38}},"85":{"start":{"line":283,"column":8},"end":{"line":283,"column":20}},"86":{"start":{"line":285,"column":6},"end":{"line":285,"column":43}},"87":{"start":{"line":286,"column":6},"end":{"line":286,"column":35}},"88":{"start":{"line":292,"column":6},"end":{"line":292,"column":37}},"89":{"start":{"line":293,"column":6},"end":{"line":304,"column":7}},"90":{"start":{"line":294,"column":8},"end":{"line":297,"column":10}},"91":{"start":{"line":300,"column":8},"end":{"line":303,"column":10}},"92":{"start":{"line":307,"column":6},"end":{"line":308,"column":31}},"93":{"start":{"line":309,"column":6},"end":{"line":314,"column":7}},"94":{"start":{"line":310,"column":8},"end":{"line":310,"column":38}},"95":{"start":{"line":313,"column":8},"end":{"line":313,"column":20}},"96":{"start":{"line":315,"column":6},"end":{"line":315,"column":51}},"97":{"start":{"line":316,"column":6},"end":{"line":316,"column":38}},"98":{"start":{"line":324,"column":6},"end":{"line":324,"column":37}},"99":{"start":{"line":325,"column":6},"end":{"line":336,"column":7}},"100":{"start":{"line":326,"column":8},"end":{"line":329,"column":10}},"101":{"start":{"line":332,"column":8},"end":{"line":335,"column":10}},"102":{"start":{"line":339,"column":6},"end":{"line":340,"column":31}},"103":{"start":{"line":341,"column":6},"end":{"line":341,"column":43}},"104":{"start":{"line":342,"column":6},"end":{"line":342,"column":35}},"105":{"start":{"line":348,"column":0},"end":{"line":348,"column":27}},"106":{"start":{"line":351,"column":0},"end":{"line":351,"column":27}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":9},"end":{"line":33,"column":12}},{"start":{"line":34,"column":4},"end":{"line":34,"column":27}},{"start":{"line":35,"column":4},"end":{"line":35,"column":34}},{"start":{"line":36,"column":4},"end":{"line":36,"column":36}},{"start":{"line":37,"column":4},"end":{"line":37,"column":41}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":13},"end":{"line":42,"column":20}},{"start":{"line":42,"column":24},"end":{"line":42,"column":26}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"5":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"7":{"line":61,"type":"switch","locations":[{"start":{"line":63,"column":4},"end":{"line":65,"column":12}},{"start":{"line":67,"column":4},"end":{"line":69,"column":12}},{"start":{"line":70,"column":4},"end":{"line":71,"column":66}}]},"8":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":6},"end":{"line":107,"column":6}},{"start":{"line":107,"column":6},"end":{"line":107,"column":6}}]},"9":{"line":119,"type":"binary-expr","locations":[{"start":{"line":119,"column":17},"end":{"line":119,"column":24}},{"start":{"line":119,"column":28},"end":{"line":119,"column":30}}]},"10":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":6}},{"start":{"line":129,"column":6},"end":{"line":129,"column":6}}]},"11":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":17},"end":{"line":141,"column":24}},{"start":{"line":141,"column":28},"end":{"line":141,"column":30}}]},"12":{"line":151,"type":"switch","locations":[{"start":{"line":152,"column":8},"end":{"line":167,"column":16}},{"start":{"line":168,"column":8},"end":{"line":175,"column":16}},{"start":{"line":176,"column":8},"end":{"line":178,"column":16}},{"start":{"line":179,"column":8},"end":{"line":179,"column":16}}]},"13":{"line":153,"type":"switch","locations":[{"start":{"line":154,"column":12},"end":{"line":154,"column":24}},{"start":{"line":155,"column":12},"end":{"line":155,"column":21}},{"start":{"line":156,"column":12},"end":{"line":156,"column":23}},{"start":{"line":157,"column":12},"end":{"line":159,"column":20}},{"start":{"line":160,"column":12},"end":{"line":160,"column":25}},{"start":{"line":161,"column":12},"end":{"line":161,"column":21}},{"start":{"line":162,"column":12},"end":{"line":162,"column":22}},{"start":{"line":163,"column":12},"end":{"line":165,"column":20}}]},"14":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":10},"end":{"line":169,"column":10}},{"start":{"line":169,"column":10},"end":{"line":169,"column":10}}]},"15":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":15},"end":{"line":172,"column":15}},{"start":{"line":172,"column":15},"end":{"line":172,"column":15}}]},"16":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":6},"end":{"line":183,"column":6}},{"start":{"line":183,"column":6},"end":{"line":183,"column":6}}]},"17":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":17},"end":{"line":195,"column":24}},{"start":{"line":195,"column":28},"end":{"line":195,"column":30}}]},"18":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":6},"end":{"line":209,"column":6}},{"start":{"line":209,"column":6},"end":{"line":209,"column":6}}]},"19":{"line":224,"type":"if","locations":[{"start":{"line":224,"column":11},"end":{"line":224,"column":11}},{"start":{"line":224,"column":11},"end":{"line":224,"column":11}}]},"20":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":17},"end":{"line":237,"column":24}},{"start":{"line":237,"column":28},"end":{"line":237,"column":30}}]},"21":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":6},"end":{"line":240,"column":6}},{"start":{"line":240,"column":6},"end":{"line":240,"column":6}}]},"22":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":11},"end":{"line":244,"column":11}},{"start":{"line":244,"column":11},"end":{"line":244,"column":11}}]},"23":{"line":248,"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":248,"column":8}},{"start":{"line":248,"column":8},"end":{"line":248,"column":8}}]},"24":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":6},"end":{"line":263,"column":6}},{"start":{"line":263,"column":6},"end":{"line":263,"column":6}}]},"25":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":17},"end":{"line":278,"column":24}},{"start":{"line":278,"column":28},"end":{"line":278,"column":30}}]},"26":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":6},"end":{"line":279,"column":6}},{"start":{"line":279,"column":6},"end":{"line":279,"column":6}}]},"27":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":6},"end":{"line":293,"column":6}},{"start":{"line":293,"column":6},"end":{"line":293,"column":6}}]},"28":{"line":308,"type":"binary-expr","locations":[{"start":{"line":308,"column":17},"end":{"line":308,"column":24}},{"start":{"line":308,"column":28},"end":{"line":308,"column":30}}]},"29":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":6},"end":{"line":309,"column":6}},{"start":{"line":309,"column":6},"end":{"line":309,"column":6}}]},"30":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":6},"end":{"line":325,"column":6}},{"start":{"line":325,"column":6},"end":{"line":325,"column":6}}]},"31":{"line":340,"type":"binary-expr","locations":[{"start":{"line":340,"column":17},"end":{"line":340,"column":24}},{"start":{"line":340,"column":28},"end":{"line":340,"column":30}}]}},"code":["/*"," * Geddy JavaScript Web development framework"," * Copyright 2112 Matthew Eernisse (mde@fleegix.org)"," *"," * Licensed under the Apache License, Version 2.0 (the \"License\");"," * you may not use this file except in compliance with the License."," * You may obtain a copy of the License at"," *"," *         http://www.apache.org/licenses/LICENSE-2.0"," *"," * Unless required by applicable law or agreed to in writing, software"," * distributed under the License is distributed on an \"AS IS\" BASIS,"," * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."," * See the License for the specific language governing permissions and"," * limitations under the License."," *","*/","","var model = require('./index')","  , utils = require('utilities')","  , i18n = utils.i18n","  , datatypes","  , _isArray","  , _serialize","  , _quoteize","  , _escape;","","_isArray = function (obj) {","  // Defer to native if possible","  if (typeof Array.isArray == 'function') {","    return Array.isArray(obj);","  }","  return obj &&","    typeof obj === 'object' &&","    typeof obj.length === 'number' &&","    typeof obj.splice === 'function' &&","    !(obj.propertyIsEnumerable('length'));","};","","_serialize = function (input, options) {","  var val = String(input)","    , opts = options || {};","  if (opts.escape) {","    val = _escape(val, opts.escape);","  }","  if (opts.useQuotes) {","    val = _quoteize(val);","  }","  if (opts.lowercase) {","    val = val.toLowerCase();","  }","  return val;","};","","_quoteize = function (val) {","  return [\"'\", \"'\"].join(val);","}","","_escape = function (s, type) {","  var ret;","  switch (type) {","    // Scrub input for basic SQL injection protection","    case 'sql':","      ret = s.replace(/'/g, \"''\");","      break;","    // Backslash-esc single quotes for use in M/R JS sourcecode str","    case 'js':","      ret = s.replace(/'/g, \"\\\\'\");","      break;","    default:","      throw new Error(type + ' is not a valid type of escaping.');","  }","  return ret;","};","","/*"," * Datatype verification -- may modify the value by casting"," */","datatypes = {","","  'string': {","    validate: function (name, val, locale) {","      return {","        err: null","      , val: String(val)","      };","    }","  , serialize: function (input, options) {","      return _serialize(input, options);","    }","  }","",", 'text': {","    validate: function (name, val, locale) {","      return {","        err: null","      , val: String(val)","      };","    }","  , serialize: function (input, options) {","      return _serialize(input, options);","    }","  }","",", 'number': {","    validate: function (name, val, locale) {","      if (isNaN(val)) {","        return {","          err: i18n.getText('model.validatesNumber', {name: name}, locale)","        , val: null","        };","      }","      return {","        err: null","      , val: Number(val)","      };","    }","  , serialize: function (input, options) {","      var opts = options || {};","      return _serialize(input, {","        escape: opts.escape","      });","    }","  }","",", 'int': {","    validate: function (name, val, locale) {","      // Allow decimal values like 10.0 and 3.0","      if (Math.round(val) != val) {","        return {","          err: i18n.getText('model.validatesInteger', {name: name}, locale)","        , val: null","        };","      }","      return {","        err: null","      , val: parseInt(val, 10)","      };","    }","  , serialize: function (input, options) {","      var opts = options || {};","      return _serialize(input, {","        escape: opts.escape","      });","    }","  }","",", 'boolean': {","    validate: function (name, val, locale) {","      var validated;","      switch (typeof val) {","        case 'string':","          switch (val) {","            case 'true':","            case 't':","            case 'yes':","            case '1':","              validated = true;","              break;","            case 'false':","            case 'f':","            case 'no':","            case '0':","              validated = false;","              break;","          }","          break;","        case 'number':","          if (val == 1) {","            validated = true;","          }","          else if (val == 0) {","            validated = false;","          }","          break;","        case 'boolean':","          validated = val;","          break;","        default:","          // Nothing","      }","","      if (typeof validated != 'boolean') {","        return {","          err: i18n.getText('model.validatesBoolean', {name: name}, locale)","        , val: null","        };","      }","      return {","        err: null","        , val: validated","      };","    }","  , serialize: function (input, options) {","      var opts = options || {};","      return _serialize(input, {","        escape: opts.escape","      });","    }","  }","",", 'object': {","    validate: function (name, val, locale) {","      // Allow saving of arrays as the datatype array only saves arrays","      // of numbers or strings correctly, but not arrays of objects","      // We're just not bothing with a separate Array datatype anymore","","      // maybe a JSON string?","      if (typeof val === 'string') {","        try {","          var obj = JSON.parse(val);","          return {","            err: null,","            val: obj","          }","        }","        catch(err) {","          return {","            err: i18n.getText('model.validatesObject', {name: name}, locale),","            val: null","          }","        }","      }","      else if (typeof val != 'object') {","        return {","          err: i18n.getText('model.validatesObject', {name: name}, locale)","        , val: null","        };","      }","      return {","        err: null","      , val: val","      };","    }","  , serialize: function (input, options) {","      var val","        , opts = options || {};","","      // Arrays will be converted to JSON","      if (_isArray(input)) {","          val = JSON.stringify(input);","      }","      // Otherwise just try to serialize via toString","      else if (typeof input.toString == 'function') {","        val = input.toString();","        // If this happens the object had no usefull toString()","        // method and we should make JSON out of it","        if (val == \"[object Object]\") {","          val = JSON.stringify(input);","        }","      }","      else {","        val = JSON.stringify(input);","      }","      // FIXME: Does escaping a JSONized object make sense?","      return _serialize(val, opts);","    }","  }","",", 'date': {","    validate: function (name, val, locale) {","      var dt = utils.date.parse(val);","      if (dt) {","        return {","          err: null","        , val: dt","        };","      }","      else {","        return {","          err: i18n.getText('model.validatesDate', {name: name}, locale)","        , val: null","        };","      }","    }","  , serialize: function (input, options) {","      var val","        , opts = options || {};","      if (model.config.useUTC) {","        val = utils.date.toUTC(input);","      }","      else {","        val = input;","      }","      val = utils.date.strftime(val, '%F');","      return _serialize(val, opts);","    }","  }","",", 'datetime': {","    validate: function (name, val, locale) {","      var dt = utils.date.parse(val);","      if (dt) {","        return {","          err: null","        , val: dt","        };","      }","      else {","        return {","          err: i18n.getText('model.validatesDatetime', {name: name}, locale)","        , val: null","        };","      }","    }","  , serialize: function (input, options) {","      var val","        , opts = options || {};","      if (model.config.useUTC) {","        val = utils.date.toUTC(input);","      }","      else {","        val = input;","      }","      val = utils.date.toISO8601(val, {utc: true});","      return _serialize(val, options);","    }","  }","","  // This is a hack -- we're saving times as Dates of 12/31/1969, and the","  // desired time",", 'time': {","    validate: function (name, val, locale) {","      var dt = utils.date.parse(val);","      if (dt) {","        return {","          err: null","        , val: dt","        };","      }","      else {","        return {","          err: i18n.getText('model.validatesTime', {name: name}, locale)","        , val: null","        };","      }","    }","  , serialize: function (input, options) {","      var val","        , opts = options || {};","      val = utils.date.strftime(val, '%T');","      return _serialize(val, opts);","    }","  }","","};","","module.exports = datatypes;","","// Lazy-load; model loads this file first","model = require('./index');",""],"l":{"19":1,"28":1,"30":0,"31":0,"33":0,"40":1,"41":0,"43":0,"44":0,"46":0,"47":0,"49":0,"50":0,"52":0,"55":1,"56":0,"59":1,"60":0,"61":0,"64":0,"65":0,"68":0,"69":0,"71":0,"73":0,"79":1,"83":0,"89":0,"95":0,"101":0,"107":0,"108":0,"113":0,"119":0,"120":0,"129":0,"130":0,"135":0,"141":0,"142":0,"150":0,"151":0,"153":0,"158":0,"159":0,"164":0,"165":0,"167":0,"169":0,"170":0,"172":0,"173":0,"175":0,"177":0,"178":0,"183":0,"184":0,"189":0,"195":0,"196":0,"209":0,"210":0,"211":0,"212":0,"218":0,"224":0,"225":0,"230":0,"236":0,"240":0,"241":0,"244":0,"245":0,"248":0,"249":0,"253":0,"256":0,"262":0,"263":0,"264":0,"270":0,"277":0,"279":0,"280":0,"283":0,"285":0,"286":0,"292":0,"293":0,"294":0,"300":0,"307":0,"309":0,"310":0,"313":0,"315":0,"316":0,"324":0,"325":0,"326":0,"332":0,"339":0,"341":0,"342":0,"348":1,"351":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/association/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/association/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":1,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":5,"loc":{"start":{"line":5,"column":19},"end":{"line":5,"column":31}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":27},"end":{"line":7,"column":70}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":25},"end":{"line":48,"column":37}}},"4":{"name":"(anonymous_4)","line":137,"loc":{"start":{"line":137,"column":45},"end":{"line":137,"column":66}}},"5":{"name":"(anonymous_5)","line":151,"loc":{"start":{"line":151,"column":23},"end":{"line":151,"column":39}}},"6":{"name":"(anonymous_6)","line":174,"loc":{"start":{"line":174,"column":28},"end":{"line":174,"column":40}}},"7":{"name":"(anonymous_7)","line":259,"loc":{"start":{"line":259,"column":26},"end":{"line":259,"column":38}}},"8":{"name":"(anonymous_8)","line":285,"loc":{"start":{"line":285,"column":28},"end":{"line":285,"column":40}}},"9":{"name":"(anonymous_9)","line":376,"loc":{"start":{"line":376,"column":35},"end":{"line":376,"column":55}}},"10":{"name":"(anonymous_10)","line":380,"loc":{"start":{"line":380,"column":15},"end":{"line":380,"column":27}}},"11":{"name":"(anonymous_11)","line":383,"loc":{"start":{"line":383,"column":29},"end":{"line":383,"column":50}}},"12":{"name":"(anonymous_12)","line":394,"loc":{"start":{"line":394,"column":53},"end":{"line":394,"column":74}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":33}},"2":{"start":{"line":5,"column":0},"end":{"line":415,"column":5}},"3":{"start":{"line":7,"column":2},"end":{"line":46,"column":4}},"4":{"start":{"line":8,"column":4},"end":{"line":13,"column":25}},"5":{"start":{"line":15,"column":4},"end":{"line":35,"column":5}},"6":{"start":{"line":16,"column":6},"end":{"line":27,"column":7}},"7":{"start":{"line":19,"column":8},"end":{"line":26,"column":9}},"8":{"start":{"line":20,"column":10},"end":{"line":20,"column":48}},"9":{"start":{"line":21,"column":10},"end":{"line":25,"column":11}},"10":{"start":{"line":22,"column":12},"end":{"line":24,"column":13}},"11":{"start":{"line":23,"column":14},"end":{"line":23,"column":38}},"12":{"start":{"line":28,"column":6},"end":{"line":30,"column":7}},"13":{"start":{"line":29,"column":8},"end":{"line":29,"column":74}},"14":{"start":{"line":31,"column":6},"end":{"line":31,"column":29}},"15":{"start":{"line":34,"column":6},"end":{"line":34,"column":21}},"16":{"start":{"line":37,"column":4},"end":{"line":42,"column":5}},"17":{"start":{"line":38,"column":6},"end":{"line":38,"column":45}},"18":{"start":{"line":41,"column":6},"end":{"line":41,"column":29}},"19":{"start":{"line":43,"column":4},"end":{"line":43,"column":56}},"20":{"start":{"line":45,"column":4},"end":{"line":45,"column":19}},"21":{"start":{"line":48,"column":2},"end":{"line":172,"column":4}},"22":{"start":{"line":49,"column":4},"end":{"line":65,"column":20}},"23":{"start":{"line":68,"column":4},"end":{"line":71,"column":5}},"24":{"start":{"line":69,"column":6},"end":{"line":70,"column":27}},"25":{"start":{"line":73,"column":4},"end":{"line":73,"column":37}},"26":{"start":{"line":74,"column":4},"end":{"line":74,"column":37}},"27":{"start":{"line":77,"column":4},"end":{"line":77,"column":56}},"28":{"start":{"line":78,"column":4},"end":{"line":78,"column":54}},"29":{"start":{"line":81,"column":4},"end":{"line":93,"column":5}},"30":{"start":{"line":82,"column":6},"end":{"line":88,"column":7}},"31":{"start":{"line":83,"column":8},"end":{"line":83,"column":19}},"32":{"start":{"line":84,"column":8},"end":{"line":84,"column":42}},"33":{"start":{"line":87,"column":8},"end":{"line":87,"column":35}},"34":{"start":{"line":92,"column":6},"end":{"line":92,"column":17}},"35":{"start":{"line":95,"column":4},"end":{"line":95,"column":30}},"36":{"start":{"line":99,"column":4},"end":{"line":124,"column":5}},"37":{"start":{"line":100,"column":6},"end":{"line":100,"column":31}},"38":{"start":{"line":101,"column":6},"end":{"line":103,"column":7}},"39":{"start":{"line":102,"column":8},"end":{"line":102,"column":47}},"40":{"start":{"line":104,"column":6},"end":{"line":104,"column":68}},"41":{"start":{"line":105,"column":6},"end":{"line":105,"column":36}},"42":{"start":{"line":111,"column":6},"end":{"line":121,"column":7}},"43":{"start":{"line":112,"column":8},"end":{"line":113,"column":40}},"44":{"start":{"line":116,"column":8},"end":{"line":116,"column":32}},"45":{"start":{"line":117,"column":8},"end":{"line":119,"column":9}},"46":{"start":{"line":118,"column":10},"end":{"line":118,"column":47}},"47":{"start":{"line":120,"column":8},"end":{"line":120,"column":68}},"48":{"start":{"line":123,"column":6},"end":{"line":123,"column":35}},"49":{"start":{"line":126,"column":4},"end":{"line":126,"column":56}},"50":{"start":{"line":135,"column":4},"end":{"line":171,"column":5}},"51":{"start":{"line":136,"column":6},"end":{"line":136,"column":79}},"52":{"start":{"line":137,"column":6},"end":{"line":166,"column":9}},"53":{"start":{"line":138,"column":8},"end":{"line":140,"column":20}},"54":{"start":{"line":142,"column":8},"end":{"line":144,"column":9}},"55":{"start":{"line":143,"column":10},"end":{"line":143,"column":37}},"56":{"start":{"line":146,"column":8},"end":{"line":147,"column":39}},"57":{"start":{"line":149,"column":8},"end":{"line":157,"column":9}},"58":{"start":{"line":150,"column":10},"end":{"line":150,"column":23}},"59":{"start":{"line":151,"column":10},"end":{"line":153,"column":13}},"60":{"start":{"line":152,"column":12},"end":{"line":152,"column":42}},"61":{"start":{"line":156,"column":10},"end":{"line":156,"column":36}},"62":{"start":{"line":159,"column":8},"end":{"line":165,"column":9}},"63":{"start":{"line":160,"column":10},"end":{"line":160,"column":29}},"64":{"start":{"line":163,"column":10},"end":{"line":163,"column":29}},"65":{"start":{"line":164,"column":10},"end":{"line":164,"column":61}},"66":{"start":{"line":170,"column":6},"end":{"line":170,"column":57}},"67":{"start":{"line":174,"column":2},"end":{"line":283,"column":4}},"68":{"start":{"line":175,"column":4},"end":{"line":189,"column":15}},"69":{"start":{"line":192,"column":4},"end":{"line":195,"column":5}},"70":{"start":{"line":193,"column":6},"end":{"line":194,"column":27}},"71":{"start":{"line":197,"column":4},"end":{"line":197,"column":36}},"72":{"start":{"line":198,"column":4},"end":{"line":198,"column":37}},"73":{"start":{"line":201,"column":4},"end":{"line":201,"column":56}},"74":{"start":{"line":202,"column":4},"end":{"line":202,"column":54}},"75":{"start":{"line":204,"column":4},"end":{"line":204,"column":29}},"76":{"start":{"line":205,"column":4},"end":{"line":205,"column":28}},"77":{"start":{"line":208,"column":4},"end":{"line":282,"column":5}},"78":{"start":{"line":209,"column":6},"end":{"line":212,"column":7}},"79":{"start":{"line":210,"column":8},"end":{"line":211,"column":59}},"80":{"start":{"line":214,"column":6},"end":{"line":216,"column":7}},"81":{"start":{"line":215,"column":8},"end":{"line":215,"column":47}},"82":{"start":{"line":217,"column":6},"end":{"line":217,"column":68}},"83":{"start":{"line":219,"column":6},"end":{"line":219,"column":35}},"84":{"start":{"line":220,"column":6},"end":{"line":220,"column":48}},"85":{"start":{"line":221,"column":6},"end":{"line":221,"column":52}},"86":{"start":{"line":222,"column":6},"end":{"line":222,"column":42}},"87":{"start":{"line":226,"column":6},"end":{"line":229,"column":7}},"88":{"start":{"line":227,"column":8},"end":{"line":228,"column":39}},"89":{"start":{"line":237,"column":6},"end":{"line":281,"column":7}},"90":{"start":{"line":239,"column":8},"end":{"line":241,"column":9}},"91":{"start":{"line":240,"column":10},"end":{"line":240,"column":49}},"92":{"start":{"line":242,"column":8},"end":{"line":243,"column":39}},"93":{"start":{"line":244,"column":8},"end":{"line":245,"column":40}},"94":{"start":{"line":247,"column":8},"end":{"line":247,"column":81}},"95":{"start":{"line":249,"column":8},"end":{"line":249,"column":20}},"96":{"start":{"line":250,"column":8},"end":{"line":250,"column":38}},"97":{"start":{"line":251,"column":8},"end":{"line":251,"column":53}},"98":{"start":{"line":253,"column":8},"end":{"line":253,"column":50}},"99":{"start":{"line":254,"column":8},"end":{"line":265,"column":9}},"100":{"start":{"line":256,"column":10},"end":{"line":256,"column":56}},"101":{"start":{"line":259,"column":10},"end":{"line":261,"column":13}},"102":{"start":{"line":260,"column":12},"end":{"line":260,"column":49}},"103":{"start":{"line":264,"column":10},"end":{"line":264,"column":47}},"104":{"start":{"line":267,"column":8},"end":{"line":267,"column":62}},"105":{"start":{"line":268,"column":8},"end":{"line":268,"column":44}},"106":{"start":{"line":272,"column":8},"end":{"line":274,"column":9}},"107":{"start":{"line":273,"column":10},"end":{"line":273,"column":47}},"108":{"start":{"line":275,"column":8},"end":{"line":275,"column":68}},"109":{"start":{"line":277,"column":8},"end":{"line":277,"column":36}},"110":{"start":{"line":278,"column":8},"end":{"line":278,"column":50}},"111":{"start":{"line":279,"column":8},"end":{"line":279,"column":54}},"112":{"start":{"line":280,"column":8},"end":{"line":280,"column":44}},"113":{"start":{"line":285,"column":2},"end":{"line":374,"column":4}},"114":{"start":{"line":286,"column":4},"end":{"line":300,"column":15}},"115":{"start":{"line":303,"column":4},"end":{"line":306,"column":5}},"116":{"start":{"line":304,"column":6},"end":{"line":305,"column":27}},"117":{"start":{"line":308,"column":4},"end":{"line":308,"column":36}},"118":{"start":{"line":309,"column":4},"end":{"line":309,"column":37}},"119":{"start":{"line":312,"column":4},"end":{"line":312,"column":56}},"120":{"start":{"line":313,"column":4},"end":{"line":313,"column":54}},"121":{"start":{"line":315,"column":4},"end":{"line":315,"column":29}},"122":{"start":{"line":316,"column":4},"end":{"line":316,"column":28}},"123":{"start":{"line":319,"column":4},"end":{"line":373,"column":5}},"124":{"start":{"line":320,"column":6},"end":{"line":322,"column":7}},"125":{"start":{"line":321,"column":8},"end":{"line":321,"column":47}},"126":{"start":{"line":323,"column":6},"end":{"line":323,"column":68}},"127":{"start":{"line":325,"column":6},"end":{"line":325,"column":32}},"128":{"start":{"line":326,"column":6},"end":{"line":326,"column":48}},"129":{"start":{"line":327,"column":6},"end":{"line":327,"column":52}},"130":{"start":{"line":328,"column":6},"end":{"line":328,"column":42}},"131":{"start":{"line":339,"column":6},"end":{"line":372,"column":7}},"132":{"start":{"line":341,"column":8},"end":{"line":343,"column":9}},"133":{"start":{"line":342,"column":10},"end":{"line":342,"column":49}},"134":{"start":{"line":344,"column":8},"end":{"line":345,"column":39}},"135":{"start":{"line":346,"column":8},"end":{"line":347,"column":40}},"136":{"start":{"line":349,"column":8},"end":{"line":349,"column":81}},"137":{"start":{"line":352,"column":8},"end":{"line":352,"column":25}},"138":{"start":{"line":353,"column":8},"end":{"line":353,"column":43}},"139":{"start":{"line":354,"column":8},"end":{"line":354,"column":44}},"140":{"start":{"line":356,"column":8},"end":{"line":356,"column":50}},"141":{"start":{"line":358,"column":8},"end":{"line":358,"column":82}},"142":{"start":{"line":359,"column":8},"end":{"line":359,"column":44}},"143":{"start":{"line":363,"column":8},"end":{"line":365,"column":9}},"144":{"start":{"line":364,"column":10},"end":{"line":364,"column":47}},"145":{"start":{"line":366,"column":8},"end":{"line":366,"column":68}},"146":{"start":{"line":368,"column":8},"end":{"line":368,"column":33}},"147":{"start":{"line":369,"column":8},"end":{"line":369,"column":50}},"148":{"start":{"line":370,"column":8},"end":{"line":370,"column":54}},"149":{"start":{"line":371,"column":8},"end":{"line":371,"column":44}},"150":{"start":{"line":376,"column":2},"end":{"line":413,"column":4}},"151":{"start":{"line":377,"column":4},"end":{"line":410,"column":10}},"152":{"start":{"line":381,"column":10},"end":{"line":409,"column":11}},"153":{"start":{"line":382,"column":12},"end":{"line":405,"column":13}},"154":{"start":{"line":383,"column":14},"end":{"line":390,"column":17}},"155":{"start":{"line":384,"column":16},"end":{"line":389,"column":17}},"156":{"start":{"line":385,"column":18},"end":{"line":385,"column":32}},"157":{"start":{"line":388,"column":18},"end":{"line":388,"column":25}},"158":{"start":{"line":393,"column":17},"end":{"line":405,"column":13}},"159":{"start":{"line":394,"column":14},"end":{"line":401,"column":17}},"160":{"start":{"line":395,"column":16},"end":{"line":400,"column":17}},"161":{"start":{"line":396,"column":18},"end":{"line":396,"column":32}},"162":{"start":{"line":399,"column":18},"end":{"line":399,"column":25}},"163":{"start":{"line":404,"column":14},"end":{"line":404,"column":85}},"164":{"start":{"line":408,"column":12},"end":{"line":408,"column":23}},"165":{"start":{"line":412,"column":4},"end":{"line":412,"column":11}},"166":{"start":{"line":417,"column":0},"end":{"line":417,"column":29}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":6},"end":{"line":16,"column":6}},{"start":{"line":16,"column":6},"end":{"line":16,"column":6}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":12}},{"start":{"line":22,"column":12},"end":{"line":22,"column":12}}]},"4":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":16},"end":{"line":22,"column":30}},{"start":{"line":22,"column":34},"end":{"line":22,"column":61}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":6},"end":{"line":28,"column":6}},{"start":{"line":28,"column":6},"end":{"line":28,"column":6}}]},"6":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"7":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"8":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":4},"end":{"line":81,"column":4}},{"start":{"line":81,"column":4},"end":{"line":81,"column":4}}]},"9":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":6},"end":{"line":82,"column":6}},{"start":{"line":82,"column":6},"end":{"line":82,"column":6}}]},"10":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":23},"end":{"line":84,"column":35}},{"start":{"line":84,"column":39},"end":{"line":84,"column":41}}]},"11":{"line":87,"type":"binary-expr","locations":[{"start":{"line":87,"column":16},"end":{"line":87,"column":28}},{"start":{"line":87,"column":32},"end":{"line":87,"column":34}}]},"12":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":11},"end":{"line":95,"column":23}},{"start":{"line":95,"column":27},"end":{"line":95,"column":29}}]},"13":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":99,"column":4}},{"start":{"line":99,"column":4},"end":{"line":99,"column":4}}]},"14":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":6},"end":{"line":101,"column":6}},{"start":{"line":101,"column":6},"end":{"line":101,"column":6}}]},"15":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":6},"end":{"line":111,"column":6}},{"start":{"line":111,"column":6},"end":{"line":111,"column":6}}]},"16":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":8},"end":{"line":117,"column":8}},{"start":{"line":117,"column":8},"end":{"line":117,"column":8}}]},"17":{"line":126,"type":"cond-expr","locations":[{"start":{"line":126,"column":40},"end":{"line":126,"column":45}},{"start":{"line":126,"column":48},"end":{"line":126,"column":55}}]},"18":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":4},"end":{"line":135,"column":4}},{"start":{"line":135,"column":4},"end":{"line":135,"column":4}}]},"19":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":8},"end":{"line":142,"column":8}},{"start":{"line":142,"column":8},"end":{"line":142,"column":8}}]},"20":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":8},"end":{"line":149,"column":8}},{"start":{"line":149,"column":8},"end":{"line":149,"column":8}}]},"21":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":8}},{"start":{"line":159,"column":8},"end":{"line":159,"column":8}}]},"22":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]},"23":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":4},"end":{"line":208,"column":4}},{"start":{"line":208,"column":4},"end":{"line":208,"column":4}}]},"24":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":6},"end":{"line":209,"column":6}},{"start":{"line":209,"column":6},"end":{"line":209,"column":6}}]},"25":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":12},"end":{"line":209,"column":23}},{"start":{"line":209,"column":27},"end":{"line":209,"column":34}}]},"26":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":6},"end":{"line":214,"column":6}},{"start":{"line":214,"column":6},"end":{"line":214,"column":6}}]},"27":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":16},"end":{"line":220,"column":41}},{"start":{"line":220,"column":45},"end":{"line":220,"column":47}}]},"28":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":6},"end":{"line":226,"column":6}},{"start":{"line":226,"column":6},"end":{"line":226,"column":6}}]},"29":{"line":226,"type":"binary-expr","locations":[{"start":{"line":226,"column":12},"end":{"line":226,"column":23}},{"start":{"line":226,"column":27},"end":{"line":226,"column":34}}]},"30":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":6},"end":{"line":237,"column":6}},{"start":{"line":237,"column":6},"end":{"line":237,"column":6}}]},"31":{"line":239,"type":"if","locations":[{"start":{"line":239,"column":8},"end":{"line":239,"column":8}},{"start":{"line":239,"column":8},"end":{"line":239,"column":8}}]},"32":{"line":253,"type":"binary-expr","locations":[{"start":{"line":253,"column":18},"end":{"line":253,"column":43}},{"start":{"line":253,"column":47},"end":{"line":253,"column":49}}]},"33":{"line":254,"type":"if","locations":[{"start":{"line":254,"column":8},"end":{"line":254,"column":8}},{"start":{"line":254,"column":8},"end":{"line":254,"column":8}}]},"34":{"line":272,"type":"if","locations":[{"start":{"line":272,"column":8},"end":{"line":272,"column":8}},{"start":{"line":272,"column":8},"end":{"line":272,"column":8}}]},"35":{"line":278,"type":"binary-expr","locations":[{"start":{"line":278,"column":18},"end":{"line":278,"column":43}},{"start":{"line":278,"column":47},"end":{"line":278,"column":49}}]},"36":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":4},"end":{"line":303,"column":4}},{"start":{"line":303,"column":4},"end":{"line":303,"column":4}}]},"37":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":4},"end":{"line":319,"column":4}},{"start":{"line":319,"column":4},"end":{"line":319,"column":4}}]},"38":{"line":320,"type":"if","locations":[{"start":{"line":320,"column":6},"end":{"line":320,"column":6}},{"start":{"line":320,"column":6},"end":{"line":320,"column":6}}]},"39":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":16},"end":{"line":326,"column":41}},{"start":{"line":326,"column":45},"end":{"line":326,"column":47}}]},"40":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":6},"end":{"line":339,"column":6}},{"start":{"line":339,"column":6},"end":{"line":339,"column":6}}]},"41":{"line":341,"type":"if","locations":[{"start":{"line":341,"column":8},"end":{"line":341,"column":8}},{"start":{"line":341,"column":8},"end":{"line":341,"column":8}}]},"42":{"line":356,"type":"binary-expr","locations":[{"start":{"line":356,"column":18},"end":{"line":356,"column":43}},{"start":{"line":356,"column":47},"end":{"line":356,"column":49}}]},"43":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":8},"end":{"line":363,"column":8}},{"start":{"line":363,"column":8},"end":{"line":363,"column":8}}]},"44":{"line":369,"type":"binary-expr","locations":[{"start":{"line":369,"column":18},"end":{"line":369,"column":43}},{"start":{"line":369,"column":47},"end":{"line":369,"column":49}}]},"45":{"line":379,"type":"binary-expr","locations":[{"start":{"line":379,"column":18},"end":{"line":379,"column":43}},{"start":{"line":379,"column":47},"end":{"line":379,"column":49}}]},"46":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":10},"end":{"line":381,"column":10}},{"start":{"line":381,"column":10},"end":{"line":381,"column":10}}]},"47":{"line":382,"type":"if","locations":[{"start":{"line":382,"column":12},"end":{"line":382,"column":12}},{"start":{"line":382,"column":12},"end":{"line":382,"column":12}}]},"48":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":16},"end":{"line":384,"column":16}},{"start":{"line":384,"column":16},"end":{"line":384,"column":16}}]},"49":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":17},"end":{"line":393,"column":17}},{"start":{"line":393,"column":17},"end":{"line":393,"column":17}}]},"50":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":16},"end":{"line":395,"column":16}},{"start":{"line":395,"column":16},"end":{"line":395,"column":16}}]}},"code":["var association","  , model = require('../index')","  , utils = require('utilities');","","association = new (function () {","","  this.getThroughAssnKey = function (assn, assnType, modelType, opts) {","    var through = assn.through","      , assns","      , reg = model.descriptionRegistry","      , keyAssn","      , keyName","      , side = opts.side;","","    if (side == 'other') {","      if (!assn.inverse) {","        // Look through other associations, find the inverse, and cache","        // for later lookup","        for (var p in reg) {","          assns = reg[p].associations[assnType];","          for (var q in assns) {","            if (q != assn.name && assns[q].through == through) {","              assn.inverse = assns[q];","            }","          }","        }","      }","      if (!assn.inverse) {","        throw new Error('No inverse found for this through-association.');","      }","      keyAssn = assn.inverse;","    }","    else {","      keyAssn = assn;","    }","","    if (keyAssn.name != keyAssn.model) {","      keyName = keyAssn.name + keyAssn.model;","    }","    else {","      keyName = keyAssn.name;","    }","    keyName = utils.string.decapitalize(keyName + 'Id');","","    return keyName;","  };","","  this._getAssociation = function () {","    var args = Array.prototype.slice.call(arguments)","      , assnName = args.shift()","      , assnType = args.shift()","      , callback = args.pop()","      , query","      , throughQuery","      , opts","      , otherKeyName","      , selfKeyName","      , keyName","      , queryName","      , reg = model.descriptionRegistry","      , assn = reg[this.type].associations[assnType]","      , modelName","      , through","      , throughModelName","      , throughAssn;","","    // Bail out if the association doesn't exist","    if (!assn) {","      throw new Error('Model ' + this.type + ' does not have ' + assnType +","          ' association.');","    }","","    modelName = assn[assnName].model;","    through = assn[assnName].through;","","    // Normalize inflection","    modelName = utils.inflection.singularize(modelName);","    assnName = utils.inflection.singularize(assnName);","","    // Has query object","    if (assnType == 'hasMany') {","      if (through) {","        query = {};","        throughQuery = args.shift() || {};","      }","      else {","        query = args.shift() || {};","      }","    }","    // No query object, create one","    else {","      query = {};","    }","    // Lastly grab opts if any","    opts = args.shift() || {};","","    // I belong to the other model; look for the item","    // whose id matches my foreign key for that model","    if (assnType == 'belongsTo') {","      otherKeyName = modelName;","      if (modelName != assnName) {","        otherKeyName = assnName + otherKeyName;","      }","      otherKeyName = utils.string.decapitalize(otherKeyName + 'Id');","      query.id = this[otherKeyName];","    }","    // The other model belongs to me; look for any","    // items whose foreign keys match my id","    // (hasOne is just a special case of hasMany)","    else {","      if (through) {","        selfKeyName = association.getThroughAssnKey(assn[assnName], assnType,","            this.type, {side: 'other'});","      }","      else {","        selfKeyName = this.type;","        if (modelName != assnName) {","          selfKeyName = assnName + selfKeyName;","        }","        selfKeyName = utils.string.decapitalize(selfKeyName + 'Id');","      }","","      query[selfKeyName] = this.id;","    }","","    queryName = assnType == 'hasMany' ? 'all' : 'first';","","    // -----------","    // FIXME: This is pretty terrible -- should really do these","    // async queries in some sort of composable Promisey API","    // TODO: Optimize SQL adapters by using eager-fetch w. join","    // -----------","    // Through's -- get the join-model instances, and re-fetch","    // actual assns","    if (through) {","      through = utils.string.getInflection(through, 'constructor', 'singular');","      model[through][queryName](query, opts, function (err, data) {","        var query = throughQuery","          , idColName","          , idParam;","","        if (err) {","          return callback(err, null);","        }","","        idColName = association.getThroughAssnKey(assn[assnName], assnType,","            modelName, {side: 'this'});","","        if (assnType == 'hasMany') {","          idParam = [];","          data.forEach(function (item) {","            idParam.push(item[idColName]);","          });","        }","        else {","          idParam = item[idColName];","        }","        // No join-instances, no associated items","        if (!idParam.length) {","          callback(null, []);","        }","        else {","          query.id = idParam;","          model[modelName][queryName](query, opts, callback);","        }","      });","    }","    // Normal assns, just do the damn query","    else {","      model[modelName][queryName](query, opts, callback);","    }","  };","","  this._createAssociation = function () {","    var args = Array.prototype.slice.call(arguments)","      , assnName = args.shift()","      , assnType = args.shift()","      , data = args.shift()","      , otherKeyName","      , selfKeyName","      , reg = model.descriptionRegistry","      , assn = reg[this.type].associations[assnType]","      , modelName","      , through","      , throughModelName","      , throughAssn","      , joinInstance","      , unsaved","      , params;","","    // Bail out if the association doesn't exist","    if (!assn) {","      throw new Error('Model ' + this.type + ' does not have ' + assnType +","          ' association.');","    }","","    modelName = assn[assnName].model","    through = assn[assnName].through;","","    // Normalize inflection","    modelName = utils.inflection.singularize(modelName);","    assnName = utils.inflection.singularize(assnName);","","    otherKeyName = modelName;","    selfKeyName = this.type;","","    // belongsTo","    if (assnType == 'belongsTo') {","      if (!(data._saved && data.id)) {","        throw new Error('Item cannot have a belongTo association ' +","            'if the item it belongs to is not yet saved.');","      }","      // Prefix named assns","      if (modelName != assnName) {","        otherKeyName = assnName + otherKeyName;","      }","      otherKeyName = utils.string.decapitalize(otherKeyName + 'Id');","","      this[otherKeyName] = data.id;","      unsaved = data._unsavedAssociations || [];","      unsaved.push({operation: 'save', item: this});","      data._unsavedAssociations = unsaved;","    }","    // hasOne, hasMany (through)","    else {","      if (!(this._saved && this.id)) {","        throw new Error('Item cannot have a hasOne/hasMany association ' +","            'if it is not yet saved.');","      }","","      // ---------------","      // FIXME: This chained saving happens automagically, so","      // validation errors in the instances just throw, with","      // no visible .errors property","      // ---------------","      // Through assn","      if (through) {","        // Prefix named assns","        if (modelName != assnName) {","          otherKeyName = assnName + otherKeyName;","        }","        otherKeyName = association.getThroughAssnKey(assn[assnName], assnType,","            this.type, {side: 'this'});","        selfKeyName = association.getThroughAssnKey(assn[assnName], assnType,","            this.type, {side: 'other'});","","        through = utils.string.getInflection(through, 'constructor', 'singular');","        // Create join-instance","        params = {};","        params[selfKeyName] = this.id;","        joinInstance = model[through].create(params);","","        unsaved = this._unsavedAssociations || [];","        if (!data._saved) {","          // Mark actual assn for chained save","          unsaved.push({operation: 'save', item: data});","          // When this item gets saved, update the join-instance","          // with the correct assn foreign key","          data.on('save', function () {","            joinInstance[otherKeyName] = data.id;","          });","        }","        else {","          joinInstance[otherKeyName] = data.id;","        }","        // Mark join-instance for chained save","        unsaved.push({operation: 'save', item: joinInstance});","        this._unsavedAssociations = unsaved;","      }","      else {","        // Prefix named assns","        if (modelName != assnName) {","          selfKeyName = assnName + selfKeyName;","        }","        selfKeyName = utils.string.decapitalize(selfKeyName + 'Id');","","        data[selfKeyName] = this.id;","        unsaved = this._unsavedAssociations || [];","        unsaved.push({operation: 'save', item: data});","        this._unsavedAssociations = unsaved;","      }","    }","  };","","  this._removeAssociation = function () {","    var args = Array.prototype.slice.call(arguments)","      , assnName = args.shift()","      , assnType = args.shift()","      , data = args.shift()","      , otherKeyName","      , selfKeyName","      , reg = model.descriptionRegistry","      , assn = reg[this.type].associations[assnType]","      , modelName","      , through","      , throughModelName","      , throughAssn","      , removeQuery","      , unsaved","      , params;","","    // Bail out if the association doesn't exist","    if (!assn) {","      throw new Error('Model ' + this.type + ' does not have ' + assnType +","          ' association.');","    }","","    modelName = assn[assnName].model","    through = assn[assnName].through;","","    // Normalize inflection","    modelName = utils.inflection.singularize(modelName);","    assnName = utils.inflection.singularize(assnName);","","    otherKeyName = modelName;","    selfKeyName = this.type;","","    // belongsTo -- remove the foreign-key value on this obj","    if (assnType == 'belongsTo') {","      if (modelName != assnName) {","        otherKeyName = assnName + otherKeyName;","      }","      otherKeyName = utils.string.decapitalize(otherKeyName + 'Id');","","      this[otherKeyName] = null; // Remove value","      unsaved = data._unsavedAssociations || [];","      unsaved.push({operation: 'save', item: this});","      data._unsavedAssociations = unsaved;","    }","    // hasOne, hasMany (through) -- remove the foreign-key value","    // on the other obj, or remove the join-model instance for through-assn","    else {","      // ---------------","      // FIXME: This chained saving happens automagically, so","      // validation errors in the instances just throw, with","      // no visible .errors property","      // ---------------","      // Through assn","      if (through) {","        // Prefix named assns","        if (modelName != assnName) {","          otherKeyName = assnName + otherKeyName;","        }","        otherKeyName = association.getThroughAssnKey(assn[assnName], assnType,","            this.type, {side: 'this'});","        selfKeyName = association.getThroughAssnKey(assn[assnName], assnType,","            this.type, {side: 'other'});","","        through = utils.string.getInflection(through, 'constructor', 'singular');","","        // Create join-instance","        removeQuery = {};","        removeQuery[selfKeyName] = this.id;","        removeQuery[otherKeyName] = data.id;","","        unsaved = this._unsavedAssociations || [];","        // Mark join-instance for removal","        unsaved.push({operation: 'remove', query: removeQuery, through: through});","        this._unsavedAssociations = unsaved;","      }","      else {","        // Prefix named assns","        if (modelName != assnName) {","          selfKeyName = assnName + selfKeyName;","        }","        selfKeyName = utils.string.decapitalize(selfKeyName + 'Id');","","        data[selfKeyName] = null;","        unsaved = this._unsavedAssociations || [];","        unsaved.push({operation: 'save', item: data});","        this._unsavedAssociations = unsaved;","      }","    }","  };","","  this._commitAssociationChanges = function (callback) {","    var self = this","      , assn","      , unsaved = this._unsavedAssociations || []","      , doIt = function () {","          if ((assn = unsaved.shift())) {","            if (assn.operation == 'save') {","              assn.item.save(function (err, data) {","                if (err) {","                  callback(err);","                }","                else {","                  doIt();","                }","              });","            }","            // Through-associations, removing join-model inst","            else if (assn.operation == 'remove') {","              model[assn.through].remove(assn.query, function (err, data) {","                if (err) {","                  callback(err);","                }","                else {","                  doIt();","                }","              });","            }","            else {","              callback(new Error('Association items can only be saved or removed.'));","            }","          }","          else {","            callback();","          }","        };","","    doIt();","  };","","})();","","module.exports = association;",""],"l":{"1":1,"5":1,"7":1,"8":0,"15":0,"16":0,"19":0,"20":0,"21":0,"22":0,"23":0,"28":0,"29":0,"31":0,"34":0,"37":0,"38":0,"41":0,"43":0,"45":0,"48":1,"49":0,"68":0,"69":0,"73":0,"74":0,"77":0,"78":0,"81":0,"82":0,"83":0,"84":0,"87":0,"92":0,"95":0,"99":0,"100":0,"101":0,"102":0,"104":0,"105":0,"111":0,"112":0,"116":0,"117":0,"118":0,"120":0,"123":0,"126":0,"135":0,"136":0,"137":0,"138":0,"142":0,"143":0,"146":0,"149":0,"150":0,"151":0,"152":0,"156":0,"159":0,"160":0,"163":0,"164":0,"170":0,"174":1,"175":0,"192":0,"193":0,"197":0,"198":0,"201":0,"202":0,"204":0,"205":0,"208":0,"209":0,"210":0,"214":0,"215":0,"217":0,"219":0,"220":0,"221":0,"222":0,"226":0,"227":0,"237":0,"239":0,"240":0,"242":0,"244":0,"247":0,"249":0,"250":0,"251":0,"253":0,"254":0,"256":0,"259":0,"260":0,"264":0,"267":0,"268":0,"272":0,"273":0,"275":0,"277":0,"278":0,"279":0,"280":0,"285":1,"286":0,"303":0,"304":0,"308":0,"309":0,"312":0,"313":0,"315":0,"316":0,"319":0,"320":0,"321":0,"323":0,"325":0,"326":0,"327":0,"328":0,"339":0,"341":0,"342":0,"344":0,"346":0,"349":0,"352":0,"353":0,"354":0,"356":0,"358":0,"359":0,"363":0,"364":0,"366":0,"368":0,"369":0,"370":0,"371":0,"376":1,"377":0,"381":0,"382":0,"383":0,"384":0,"385":0,"388":0,"393":0,"394":0,"395":0,"396":0,"399":0,"404":0,"408":0,"412":0,"417":1}},"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/adapters/base_adapter.js":{"path":"/home/travis/build/npmtest/node-npmtest-model/node_modules/model/lib/adapters/base_adapter.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":0,"35":0,"36":1,"37":0,"38":1,"39":0,"40":0,"41":0,"42":1,"43":0,"44":1,"45":0,"46":1,"47":0,"48":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":26}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":40},"end":{"line":19,"column":52}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":20},"end":{"line":21,"column":51}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":41},"end":{"line":32,"column":60}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":31},"end":{"line":38,"column":48}}},"6":{"name":"(anonymous_6)","line":53,"loc":{"start":{"line":53,"column":17},"end":{"line":53,"column":37}}},"7":{"name":"(anonymous_7)","line":55,"loc":{"start":{"line":55,"column":25},"end":{"line":55,"column":37}}},"8":{"name":"(anonymous_8)","line":56,"loc":{"start":{"line":56,"column":15},"end":{"line":56,"column":27}}},"9":{"name":"(anonymous_9)","line":62,"loc":{"start":{"line":62,"column":20},"end":{"line":62,"column":40}}},"10":{"name":"(anonymous_10)","line":64,"loc":{"start":{"line":64,"column":25},"end":{"line":64,"column":37}}},"11":{"name":"(anonymous_11)","line":65,"loc":{"start":{"line":65,"column":15},"end":{"line":65,"column":27}}},"12":{"name":"(anonymous_12)","line":71,"loc":{"start":{"line":71,"column":14},"end":{"line":71,"column":41}}},"13":{"name":"(anonymous_13)","line":75,"loc":{"start":{"line":75,"column":16},"end":{"line":75,"column":49}}},"14":{"name":"(anonymous_14)","line":84,"loc":{"start":{"line":84,"column":16},"end":{"line":84,"column":43}}},"15":{"name":"(anonymous_15)","line":88,"loc":{"start":{"line":88,"column":16},"end":{"line":88,"column":48}}},"16":{"name":"(anonymous_16)","line":94,"loc":{"start":{"line":94,"column":15},"end":{"line":94,"column":42}}},"17":{"name":"(anonymous_17)","line":98,"loc":{"start":{"line":98,"column":21},"end":{"line":98,"column":48}}},"18":{"name":"(anonymous_18)","line":102,"loc":{"start":{"line":102,"column":19},"end":{"line":102,"column":46}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":6,"column":33}},"2":{"start":{"line":8,"column":0},"end":{"line":13,"column":2}},"3":{"start":{"line":15,"column":0},"end":{"line":16,"column":2}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":43}},"5":{"start":{"line":19,"column":0},"end":{"line":106,"column":6}},"6":{"start":{"line":21,"column":2},"end":{"line":51,"column":4}},"7":{"start":{"line":22,"column":4},"end":{"line":26,"column":17}},"8":{"start":{"line":30,"column":4},"end":{"line":49,"column":5}},"9":{"start":{"line":32,"column":6},"end":{"line":35,"column":9}},"10":{"start":{"line":33,"column":8},"end":{"line":33,"column":28}},"11":{"start":{"line":34,"column":8},"end":{"line":34,"column":39}},"12":{"start":{"line":36,"column":6},"end":{"line":48,"column":7}},"13":{"start":{"line":38,"column":8},"end":{"line":43,"column":11}},"14":{"start":{"line":39,"column":10},"end":{"line":39,"column":27}},"15":{"start":{"line":42,"column":10},"end":{"line":42,"column":65}},"16":{"start":{"line":44,"column":8},"end":{"line":47,"column":9}},"17":{"start":{"line":45,"column":10},"end":{"line":45,"column":35}},"18":{"start":{"line":46,"column":10},"end":{"line":46,"column":31}},"19":{"start":{"line":50,"column":4},"end":{"line":50,"column":35}},"20":{"start":{"line":53,"column":2},"end":{"line":60,"column":4}},"21":{"start":{"line":54,"column":4},"end":{"line":55,"column":40}},"22":{"start":{"line":56,"column":4},"end":{"line":59,"column":10}},"23":{"start":{"line":57,"column":6},"end":{"line":57,"column":27}},"24":{"start":{"line":58,"column":6},"end":{"line":58,"column":11}},"25":{"start":{"line":62,"column":2},"end":{"line":69,"column":4}},"26":{"start":{"line":63,"column":4},"end":{"line":64,"column":40}},"27":{"start":{"line":65,"column":4},"end":{"line":68,"column":10}},"28":{"start":{"line":66,"column":6},"end":{"line":66,"column":30}},"29":{"start":{"line":67,"column":6},"end":{"line":67,"column":11}},"30":{"start":{"line":71,"column":2},"end":{"line":73,"column":4}},"31":{"start":{"line":72,"column":4},"end":{"line":72,"column":23}},"32":{"start":{"line":75,"column":2},"end":{"line":82,"column":4}},"33":{"start":{"line":76,"column":4},"end":{"line":81,"column":5}},"34":{"start":{"line":77,"column":6},"end":{"line":77,"column":27}},"35":{"start":{"line":80,"column":6},"end":{"line":80,"column":27}},"36":{"start":{"line":84,"column":2},"end":{"line":86,"column":4}},"37":{"start":{"line":85,"column":4},"end":{"line":85,"column":25}},"38":{"start":{"line":88,"column":2},"end":{"line":92,"column":4}},"39":{"start":{"line":89,"column":4},"end":{"line":89,"column":44}},"40":{"start":{"line":90,"column":4},"end":{"line":90,"column":23}},"41":{"start":{"line":91,"column":4},"end":{"line":91,"column":25}},"42":{"start":{"line":94,"column":2},"end":{"line":96,"column":4}},"43":{"start":{"line":95,"column":4},"end":{"line":95,"column":22}},"44":{"start":{"line":98,"column":2},"end":{"line":100,"column":4}},"45":{"start":{"line":99,"column":4},"end":{"line":99,"column":25}},"46":{"start":{"line":102,"column":2},"end":{"line":104,"column":4}},"47":{"start":{"line":103,"column":4},"end":{"line":103,"column":25}},"48":{"start":{"line":108,"column":0},"end":{"line":108,"column":41}}},"branchMap":{"1":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":31},"end":{"line":23,"column":38}},{"start":{"line":23,"column":42},"end":{"line":23,"column":44}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"3":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":17},"end":{"line":42,"column":27}},{"start":{"line":42,"column":31},"end":{"line":42,"column":64}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":44,"column":8}},{"start":{"line":44,"column":8},"end":{"line":44,"column":8}}]},"5":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":13},"end":{"line":55,"column":21}},{"start":{"line":55,"column":25},"end":{"line":55,"column":39}}]},"6":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":13},"end":{"line":64,"column":21}},{"start":{"line":64,"column":25},"end":{"line":64,"column":39}}]},"7":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":4},"end":{"line":76,"column":4}},{"start":{"line":76,"column":4},"end":{"line":76,"column":4}}]},"8":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":14},"end":{"line":89,"column":21}},{"start":{"line":89,"column":25},"end":{"line":89,"column":44}}]}},"code":["var BaseAdapter","  , configPropertyAliases","  , EventEmitter = require('events').EventEmitter","  , model = require('../index')","  , adapter = require('./index')","  , utils = require('utilities');","","configPropertyAliases = [","  ['user', 'username', 'userName']",", ['pass', 'password']",", ['database', 'dbname', 'db', 'dbName']",", ['host', 'hostname', 'hostName']","];","","BaseAdapter = function () {","};","","BaseAdapter.prototype = new EventEmitter();","utils.mixin(BaseAdapter.prototype, new (function () {","","  this.loadConfig = function (baseConfig, options) {","    var base = utils.mixin({}, baseConfig)","      , opts = utils.mixin({}, options || {})","      , found","      , aliasKeys","      , aliasKey;","    // If there's a property name on the passed in opts that is","    // an alias for a property on the config, set the correct","    // property name and delete the alias","    for (var p in base) {","      // Is this possibly an aliased property?","      found = configPropertyAliases.some(function (aliases) {","        aliasKeys = aliases;","        return aliases.indexOf(p) > -1;","      });","      if (found) {","        // Does the opts obj have an aliased keys?","        found = aliasKeys.some(function (alias) {","          aliasKey = alias;","          // Possible key isn't the same as the real key","          // Key has a defined value on the opts obj","          return alias != p && typeof opts[alias] != 'undefined';","        });","        if (found) {","          opts[p] = opts[aliasKey];","          delete opts[aliasKey]","        }","      }","    }","    return utils.mixin(base, opts);","  };","","  this.connect = function (callback) {","    var self = this","      , cb = callback || function () {};","    setTimeout(function () {","      self.emit('connect');","      cb();","    }, 0);","  };","","  this.disconnect = function (callback) {","    var self = this","      , cb = callback || function () {};","    setTimeout(function () {","      self.emit('disconnect');","      cb();","    }, 0);","  };","","  this.load = function (query, callback) {","    callback(null, []);","  };","","  this.update = function (data, query, callback) {","    if (data instanceof model.ModelBase) {","      callback(null, data);","    }","    else {","      callback(null, true);","    }","  };","","  this.remove = function (query, callback) {","    callback(null, true);","  };","","  this.insert = function (data, opts, callback) {","    data.id = data.id || utils.string.uuid()","    data._saved = true;","    callback(null, data);","  };","","  this.count = function (query, callback) {","    callback(null, 0);","  };","","  this.createTable = function (names, callback) {","    callback(null, null);","  };","","  this.dropTable = function (names, callback) {","    callback(null, null);","  };","","})());","","module.exports.BaseAdapter = BaseAdapter;",""],"l":{"1":1,"8":1,"15":1,"18":1,"19":1,"21":1,"22":0,"30":0,"32":0,"33":0,"34":0,"36":0,"38":0,"39":0,"42":0,"44":0,"45":0,"46":0,"50":0,"53":1,"54":0,"56":0,"57":0,"58":0,"62":1,"63":0,"65":0,"66":0,"67":0,"71":1,"72":0,"75":1,"76":0,"77":0,"80":0,"84":1,"85":0,"88":1,"89":0,"90":0,"91":0,"94":1,"95":0,"98":1,"99":0,"102":1,"103":0,"108":1}}}